<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>word</title>
      <link href="/posts/c3f17511.html"/>
      <url>/posts/c3f17511.html</url>
      
        <content type="html"><![CDATA[<h4 id="1-中英混合时，一行很多莫名空格："><a href="#1-中英混合时，一行很多莫名空格：" class="headerlink" title="1.中英混合时，一行很多莫名空格："></a>1.中英混合时，一行很多莫名空格：</h4><p>选中字段—&gt;右键—&gt;段落(若在单元格内则无段落选项)—&gt;换行和分页—&gt;允许西文换行</p>]]></content>
      
      
      <categories>
          
          <category> tips </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tips </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spider02(BeautifulSoup使用)</title>
      <link href="/posts/fc6d79d7.html"/>
      <url>/posts/fc6d79d7.html</url>
      
        <content type="html"><![CDATA[<h3 id="安装bs4"><a href="#安装bs4" class="headerlink" title="安装bs4"></a>安装bs4</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install bs4</span><br></pre></td></tr></table></figure><h3 id="使用BeautifulSoup解析HTML内容"><a href="#使用BeautifulSoup解析HTML内容" class="headerlink" title="使用BeautifulSoup解析HTML内容"></a>使用BeautifulSoup解析HTML内容</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="comment">#发送一个get请求获取网页内容（源码）</span></span><br><span class="line">content = requests.get(<span class="string">&quot;http://books.toscrape.com/&quot;</span>).text</span><br><span class="line"><span class="comment"># BeautifulSoup解析html内容 html.parser是解析器</span></span><br><span class="line">soup = BeautifulSoup(content, <span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line"><span class="comment">#通过findAll方法寻找网页所有符合class=price_color 的 p标签内容</span></span><br><span class="line">all_prices = soup.findAll(<span class="string">&quot;p&quot;</span>, attrs=&#123;<span class="string">&quot;class&quot;</span>: <span class="string">&quot;price_color&quot;</span>&#125;)</span><br><span class="line"><span class="comment"># 获取该页面上的价格信息</span></span><br><span class="line"><span class="keyword">for</span> price <span class="keyword">in</span> all_prices:</span><br><span class="line">    <span class="built_in">print</span>(price.string[<span class="number">2</span>:])</span><br><span class="line"><span class="comment">#通过findAll方法寻找网页所有h3标签内容</span></span><br><span class="line">all_titles = soup.findAll(<span class="string">&quot;h3&quot;</span>)</span><br><span class="line"><span class="comment"># 获取该页面上的书名信息</span></span><br><span class="line"><span class="keyword">for</span> title <span class="keyword">in</span> all_titles:</span><br><span class="line">    <span class="comment">#找到 h3 内容中的所有a标签内容</span></span><br><span class="line">    link = title.find(<span class="string">&quot;a&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(link.string)</span><br><span class="line">    <span class="comment"># A Light in the ...</span></span><br><span class="line">    <span class="comment"># Tipping the Velvet</span></span><br><span class="line">    <span class="comment"># Soumission</span></span><br><span class="line">    <span class="comment"># Sharp Objects</span></span><br><span class="line">    <span class="comment"># .....</span></span><br></pre></td></tr></table></figure><h3 id="使用BeautifulSoup-爬取豆瓣top250电影"><a href="#使用BeautifulSoup-爬取豆瓣top250电影" class="headerlink" title="使用BeautifulSoup 爬取豆瓣top250电影"></a>使用BeautifulSoup 爬取豆瓣top250电影</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#爬取豆瓣电影top250的电影</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36 Edg/111.0.1661.54&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> start_num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">250</span>,<span class="number">25</span>):</span><br><span class="line">    response = requests.get(<span class="string">f&quot;https://movie.douban.com/top250?start=<span class="subst">&#123;start_num&#125;</span>&quot;</span>,headers=headers)</span><br><span class="line">    html = response.text</span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line">    <span class="comment">#找到所有span中的 class = class的内容</span></span><br><span class="line">    all_titles = soup.findAll(<span class="string">&quot;span&quot;</span>,attrs=&#123;<span class="string">&quot;class&quot;</span>: <span class="string">&quot;title&quot;</span>&#125;)</span><br><span class="line">    <span class="keyword">for</span> title <span class="keyword">in</span> all_titles:</span><br><span class="line">        title_string = title.string</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;/&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> title_string:</span><br><span class="line">            <span class="built_in">print</span>(title_string)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> spider </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spider </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spider03(正则表达式)</title>
      <link href="/posts/ae9458fc.html"/>
      <url>/posts/ae9458fc.html</url>
      
        <content type="html"><![CDATA[<p>学习自：<a href="https://www.bilibili.com/video/BV1da4y1p7iZ/?spm_id_from=333.999.0.0&amp;vd_source=3ba8e5c6f208a2b08d0e0bc4fc3e280f">奇乐编程学院：10分钟快速掌握正则表达式</a></p><h2 id="限定符"><a href="#限定符" class="headerlink" title="限定符"></a>限定符</h2><h4 id=""><a href="#" class="headerlink" title="?"></a>?</h4><p>前一个字符有 0 - 1 个<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311614816.png" alt=""></p><h4 id="-1"><a href="#-1" class="headerlink" title="*"></a>*</h4><p>前一个字符有 0 - n 个<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311614043.png" alt=""></p><h4 id="-2"><a href="#-2" class="headerlink" title="+"></a>+</h4><p>前一个字符有 1 - n 个<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311615856.png" alt=""></p><h4 id="x-y"><a href="#x-y" class="headerlink" title="{x,y}"></a>{x,y}</h4><p>前一个字符出现 x 到 y 次 (包括 x 次和 y 次)<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311617953.png" alt=""></p><h4 id="x"><a href="#x" class="headerlink" title="{x,}"></a>{x,}</h4><p>前一个字符出现 x 次以上<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311616895.png" alt=""></p><h4 id="mn"><a href="#mn" class="headerlink" title="(mn)"></a>(mn)</h4><p>多个字符匹配<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311623128.png" alt=""></p><h2 id="或运算符"><a href="#或运算符" class="headerlink" title="或运算符"></a>或运算符</h2><h4 id="m-n"><a href="#m-n" class="headerlink" title="(m|n)"></a>(m|n)</h4><p>匹配 m 或者 n<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311624473.png" alt=""><br>如果不写括号，则变成 a cat 或者 dog<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311625116.png" alt=""></p><h2 id="字符类"><a href="#字符类" class="headerlink" title="字符类"></a>字符类</h2><h4 id="xyz"><a href="#xyz" class="headerlink" title="[xyz]"></a><code>[xyz]</code></h4><p>匹配字符来自于 [] 中的内容<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311626566.png" alt=""></p><h4 id="a-zA-Z0-9"><a href="#a-zA-Z0-9" class="headerlink" title="[a-zA-Z0-9]"></a><code>[a-zA-Z0-9]</code></h4><p>匹配符合 a-z、A-Z、0-9 的字符<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311627790.png" alt=""></p><h4 id="a-zA-Z0-9-组合使用"><a href="#a-zA-Z0-9-组合使用" class="headerlink" title="[a-zA-Z0-9] 组合使用"></a><code>[a-zA-Z0-9] 组合使用</code></h4><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311627516.png" alt=""></p><h4 id="xyz-1"><a href="#xyz-1" class="headerlink" title="[ ^xyz]"></a><code>[ ^xyz]</code></h4><p>所有不符合 [] 中得内容<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311628335.png" alt=""></p><h2 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h2><h4 id="d"><a href="#d" class="headerlink" title="\d"></a>\d</h4><p>数字<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311628340.png" alt=""></p><h4 id="w"><a href="#w" class="headerlink" title="\w"></a>\w</h4><p>字母、数字、下划线<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311629833.png" alt=""></p><h4 id="s"><a href="#s" class="headerlink" title="\s"></a>\s</h4><p>空白符 (包含 tab 和 换行符)<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311630235.png" alt=""></p><h4 id="D"><a href="#D" class="headerlink" title="\D"></a>\D</h4><p>非数字字符<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311630330.png" alt=""></p><h4 id="W"><a href="#W" class="headerlink" title="\W"></a>\W</h4><p>非数字、字母、下划线<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311631364.png" alt=""></p><h4 id="S"><a href="#S" class="headerlink" title="\S"></a>\S</h4><p>非空白符<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311632174.png" alt=""></p><h4 id="-3"><a href="#-3" class="headerlink" title="."></a>.</h4><p>任意字符，不包含换行符<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311632940.png" alt=""></p><h4 id="-4"><a href="#-4" class="headerlink" title="^"></a>^</h4><p>匹配行首<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311633296.png" alt=""></p><h4 id="-5"><a href="#-5" class="headerlink" title="$"></a>$</h4><p>匹配行尾<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311633772.png" alt=""></p><h2 id="贪婪与懒惰匹配"><a href="#贪婪与懒惰匹配" class="headerlink" title="贪婪与懒惰匹配"></a>贪婪与懒惰匹配</h2><p>贪婪匹配：尽可能多地匹配字符<br>懒惰匹配：即匹配尽可能少的字符，但是要匹配出所有的结果<br>当想要匹配带有 &lt;&gt; 的字符时，根据之前的知识可以这样写<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311639012.png" alt=""><br>由于 的 &lt; 和 的 &gt; 匹配上了，因此导致 Content = “ClickMe” 也被匹配上。</p><p>因此可以加上 ？ 使得该匹配由 贪婪匹配 变为 懒惰匹配，从而达到想要的效果<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311640787.png" alt=""></p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>匹配所有十六进制的 RGB 颜色值<br>条件<br>1.＃<br>2.a - f 或 A - F<br>3.0 - 9<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311641973.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> spider </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spider </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spider01(requests+html使用)</title>
      <link href="/posts/f16535de.html"/>
      <url>/posts/f16535de.html</url>
      
        <content type="html"><![CDATA[<h3 id="使用Requests发送请求"><a href="#使用Requests发送请求" class="headerlink" title="使用Requests发送请求"></a>使用Requests发送请求</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="comment">#设置请求头 模拟网页请求</span></span><br><span class="line">head = &#123;<span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64)&quot;</span>&#125;</span><br><span class="line"><span class="comment"># 获取网页内容</span></span><br><span class="line">response = requests.get(<span class="string">&quot;http://yhdm86.com/&quot;</span>,header=head)</span><br><span class="line"><span class="keyword">if</span> response.ok:</span><br><span class="line">    <span class="built_in">print</span>(response.text)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;请求失败&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="使用Requests拿到豆瓣top250源码"><a href="#使用Requests拿到豆瓣top250源码" class="headerlink" title="使用Requests拿到豆瓣top250源码"></a>使用Requests拿到豆瓣top250源码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#爬取豆瓣电影top250的电影</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36 Edg/111.0.1661.54&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">response = requests.get(<span class="string">&quot;https://movie.douban.com/top250&quot;</span>,headers=headers)</span><br><span class="line"><span class="built_in">print</span>(response.status_code) <span class="comment">#status_code表示返回的状态码 418 没添加请求头别人不服务爬虫，200表示请求成功</span></span><br><span class="line"><span class="built_in">print</span>(response.text) <span class="comment"># text表示获取网页的源码</span></span><br></pre></td></tr></table></figure><h3 id="HTML常用标签"><a href="#HTML常用标签" class="headerlink" title="HTML常用标签"></a>HTML常用标签</h3><h4 id="标题标签-lt-h-gt"><a href="#标题标签-lt-h-gt" class="headerlink" title="标题标签&lt;h&gt;"></a><code>标题标签&lt;h&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是一个一级标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>这是一个二级标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>这是一个三级标题<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>这是一个四级标题<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>这是一个五级标题<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>这是一个六级标题<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303302150518.jpg" alt=""></p><h4 id="文本段落标签-lt-p-gt"><a href="#文本段落标签-lt-p-gt" class="headerlink" title="文本段落标签&lt;p&gt;"></a><code>文本段落标签&lt;p&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个文本段落标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303302151335.jpg" alt=""></p><h4 id="换行标签-lt-br-gt"><a href="#换行标签-lt-br-gt" class="headerlink" title="换行标签&lt;br&gt;"></a><code>换行标签&lt;br&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个文<span class="tag">&lt;<span class="name">br</span>&gt;</span>本段落标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303302152330.jpg" alt=""></p><h4 id="加粗标签-lt-b-gt"><a href="#加粗标签-lt-b-gt" class="headerlink" title="加粗标签&lt;b&gt;"></a><code>加粗标签&lt;b&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是<span class="tag">&lt;<span class="name">b</span>&gt;</span>一个<span class="tag">&lt;/<span class="name">b</span>&gt;</span>文本段落标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303302153599.jpg" alt=""></p><h4 id="斜体标签-lt-i-gt"><a href="#斜体标签-lt-i-gt" class="headerlink" title="斜体标签&lt;i&gt;"></a><code>斜体标签&lt;i&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是<span class="tag">&lt;<span class="name">i</span>&gt;</span>一个<span class="tag">&lt;/<span class="name">i</span>&gt;</span>文本段落标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303302154834.jpg" alt=""></p><h4 id="下划线标签-lt-u-gt"><a href="#下划线标签-lt-u-gt" class="headerlink" title="下划线标签&lt;u&gt;"></a><code>下划线标签&lt;u&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是<span class="tag">&lt;<span class="name">u</span>&gt;</span>一个<span class="tag">&lt;/<span class="name">u</span>&gt;</span>文本段落标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303302155241.jpg" alt=""></p><h4 id="图片标签-lt-img-gt"><a href="#图片标签-lt-img-gt" class="headerlink" title="图片标签&lt;img&gt;"></a><code>图片标签&lt;img&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://images.unsplash.com/photo-1609515602287-8470b8d9ac11&quot;</span> <span class="attr">width</span>=<span class="string">&quot;500px&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303302155205.jpg" alt=""></p><h4 id="链接标签-lt-a-gt"><a href="#链接标签-lt-a-gt" class="headerlink" title="链接标签&lt;a&gt;"></a><code>链接标签&lt;a&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://space.bilibili.com/523995133&quot;</span>&gt;</span>我的主页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303302156421.jpg" alt=""></p><h4 id="容器标签-lt-div-gt-lt-span-gt"><a href="#容器标签-lt-div-gt-lt-span-gt" class="headerlink" title="容器标签&lt;div&gt;&lt;span&gt;"></a><code>容器标签&lt;div&gt;&lt;span&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://baidu.com&quot;</span>&gt;</span>div元素下的链接1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://baidu.com&quot;</span>&gt;</span>div元素下的链接2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://baidu.com&quot;</span>&gt;</span>span元素下的链接1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://baidu.com&quot;</span>&gt;</span>span元素下的链接2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303302157107.jpg" alt=""></p><h4 id="有序列表标签-lt-ol-gt-，列表元素标签-lt-li-gt"><a href="#有序列表标签-lt-ol-gt-，列表元素标签-lt-li-gt" class="headerlink" title="有序列表标签&lt;ol&gt;，列表元素标签&lt;li&gt;"></a><code>有序列表标签&lt;ol&gt;，列表元素标签&lt;li&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>语文<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>数学<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>英语<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303302157459.jpg" alt=""></p><h4 id="无序列表标签-lt-ul-gt"><a href="#无序列表标签-lt-ul-gt" class="headerlink" title="无序列表标签&lt;ul&gt;"></a><code>无序列表标签&lt;ul&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>语文<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>数学<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>英语<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303302158680.jpg" alt=""></p><h4 id="表格标签-lt-table-gt"><a href="#表格标签-lt-table-gt" class="headerlink" title="表格标签&lt;table&gt;"></a><code>表格标签&lt;table&gt;</code></h4><p><code>表格标签：&lt;table&gt;</code></p><p><code>表格头部：&lt;thread&gt;</code></p><p><code>表格主体：&lt;tbody&gt;</code></p><p><code>表格行：&lt;tr&gt;</code></p><p><code>单元格：&lt;td&gt;</code><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>表头1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>表头2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>111<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>222<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>333<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>444<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303302159460.jpg" alt=""></p><h4 id="class属性"><a href="#class属性" class="headerlink" title="class属性"></a>class属性</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span>给岁月以文明<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span>而不是给文明以岁月<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;review&quot;</span>&gt;</span>五星好评！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303302200668.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> spider </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spider </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spider</title>
      <link href="/posts/6ad76a84.html"/>
      <url>/posts/6ad76a84.html</url>
      
        <content type="html"><![CDATA[<h3 id="基本格式"><a href="#基本格式" class="headerlink" title="基本格式:"></a>基本格式:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    url = <span class="string">&#x27;https://www.sogou.com/web&#x27;</span></span><br><span class="line">    kw = <span class="built_in">input</span>(<span class="string">&#x27;enter a word:&#x27;</span>)</span><br><span class="line">    param = &#123;</span><br><span class="line">        <span class="string">&#x27;query&#x27;</span>:kw</span><br><span class="line">    &#125;</span><br><span class="line">    header = &#123;</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36 Edg/110.0.1587.57&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    response = requests.get(url=url, params=param, headers=header)</span><br><span class="line">    page_text = response.text</span><br><span class="line">    fileName = kw+<span class="string">&#x27;.html&#x27;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(fileName, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        fp.write(page_text)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;over!&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="常用库-BeautifulSoup，requests"><a href="#常用库-BeautifulSoup，requests" class="headerlink" title="常用库 BeautifulSoup，requests"></a>常用库 BeautifulSoup，requests</h3><p>eg:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入必要的库</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送请求并获取网页内容</span></span><br><span class="line">url = <span class="string">&quot;https://www.example.com&quot;</span></span><br><span class="line">response = requests.get(url)</span><br><span class="line">content = response.content</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解析网页内容</span></span><br><span class="line">soup = BeautifulSoup(content, <span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 找到需要的元素</span></span><br><span class="line">element = soup.find(<span class="string">&quot;div&quot;</span>, &#123;<span class="string">&quot;class&quot;</span>: <span class="string">&quot;example-class&quot;</span>&#125;)</span><br><span class="line"><span class="keyword">if</span> element:</span><br><span class="line">    <span class="comment"># 提取需要的信息</span></span><br><span class="line">    info = element.text.strip()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    info = <span class="string">&quot;Not found&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(info)</span><br></pre></td></tr></table></figure></p><h3 id="常用库-BeautifulSoup，requests使用实例"><a href="#常用库-BeautifulSoup，requests使用实例" class="headerlink" title="常用库 BeautifulSoup，requests使用实例"></a>常用库 BeautifulSoup，requests使用实例</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_anime_info</span>(<span class="params">url</span>):</span><br><span class="line">    response = requests.get(url)</span><br><span class="line">    soup = BeautifulSoup(response.text, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    title_tag = soup.find(<span class="string">&#x27;dt&#x27;</span>, class_=<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> title_tag:</span><br><span class="line">        name = title_tag.text.strip()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        name = <span class="string">&#x27;Unknown&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取集数</span></span><br><span class="line">    episode_tag = soup.find(<span class="string">&#x27;dd&#x27;</span>, text=re.<span class="built_in">compile</span>(<span class="string">&#x27;更新至&#x27;</span>))</span><br><span class="line">    <span class="keyword">if</span> episode_tag:</span><br><span class="line">        episode = episode_tag.text.strip().replace(<span class="string">&#x27;更新至&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        episode = <span class="string">&#x27;Unknown&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取地区</span></span><br><span class="line">    area_tag = soup.find(<span class="string">&#x27;b&#x27;</span>, text=<span class="string">&#x27;地区：&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> area_tag:</span><br><span class="line">        area = area_tag.nextSibling.strip()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        area = <span class="string">&#x27;Unknown&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取年份</span></span><br><span class="line">    year_tag = soup.find(<span class="string">&#x27;b&#x27;</span>, text=<span class="string">&#x27;年代：&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> year_tag:</span><br><span class="line">        year = year_tag.nextSibling.strip()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        year = <span class="string">&#x27;Unknown&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取类型</span></span><br><span class="line">    type_tags = soup.find_all(<span class="string">&#x27;a&#x27;</span>, target=<span class="string">&quot;_blank&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> type_tags:</span><br><span class="line">        anime_type = [t.text.strip() <span class="keyword">for</span> t <span class="keyword">in</span> type_tags]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        anime_type = [<span class="string">&#x27;Unknown&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取简介</span></span><br><span class="line">    description_tag = soup.find(<span class="string">&#x27;div&#x27;</span>, &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;des2&#x27;</span>&#125;)</span><br><span class="line">    <span class="keyword">if</span> description_tag:</span><br><span class="line">        description = description_tag.text.strip()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        description = <span class="string">&#x27;Unknown&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取封面图片</span></span><br><span class="line">    img_tag = soup.find(<span class="string">&#x27;img&#x27;</span>, &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;lazy&#x27;</span>&#125;)</span><br><span class="line">    <span class="keyword">if</span> img_tag:</span><br><span class="line">        img_url = img_tag.get(<span class="string">&#x27;data-original&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        img_url = [<span class="string">&#x27;Unknown&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取类型元素</span></span><br><span class="line">    <span class="comment"># 找到class为&quot;h2&quot;的元素</span></span><br><span class="line">    h2_element = soup.find(<span class="string">&#x27;div&#x27;</span>, class_=<span class="string">&#x27;h2&#x27;</span>)</span><br><span class="line">    <span class="comment"># 找到&lt;a&gt;标签并获取其文本内容</span></span><br><span class="line">    a_element = h2_element.find(<span class="string">&#x27;a&#x27;</span>, href=<span class="string">&#x27;/acg/&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> a_element:</span><br><span class="line">        type_text = a_element.text.strip()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        type_text = <span class="string">&#x27;Unknown&#x27;</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> name, episode, area, year, img_url, anime_type, type_text, description</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> spider </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spider </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Anaconda使用</title>
      <link href="/posts/feaec37.html"/>
      <url>/posts/feaec37.html</url>
      
        <content type="html"><![CDATA[<h3 id="anaconda-安装"><a href="#anaconda-安装" class="headerlink" title="anaconda 安装"></a>anaconda 安装</h3><p><a href="https://www.anaconda.com/products/distribution#macos">官网下载(非常慢不推荐)</a><br><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/">清华大学镜像站下载</a><br><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-5.2.0-Windows-x86_64.exe">个人使用版本</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141049189.png" alt="1"><br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141050191.png" alt="2"><br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141050059.png" alt="3"><br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141050496.png" alt="4"><br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141050718.png" alt="5"></p><h4 id="测试安装"><a href="#测试安装" class="headerlink" title="测试安装"></a>测试安装</h4><p>cmd输入<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda --version</span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20200108134410262.png" alt="若出现像这样的conda版本号即安装成功"></p><h4 id="更改源"><a href="#更改源" class="headerlink" title="更改源"></a>更改源</h4><p>安装需要的Python包非常方便，但是官方服务器在国外，下载龟速，国内清华大学提供了Anaconda的镜像仓库，我们把源改为清华大学镜像源</p><p>更改方法一：cmd后依次输入下面命令<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span><br><span class="line">conda config --set show_channel_urls yes</span><br></pre></td></tr></table></figure><br>打开C盘用户目录，我这里是<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\User</span><br></pre></td></tr></table></figure><br>找到.condarc文件，里面长这样就成了<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ssl_verify: true</span><br><span class="line">channels:</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">  - defaults</span><br><span class="line">show_channel_urls: true</span><br></pre></td></tr></table></figure><br>更改方法二：打开 .condarc文件，直接简单粗暴的把上面的内容复制进去</p><h4 id="更新包"><a href="#更新包" class="headerlink" title="更新包"></a>更新包</h4><p>更新时间较长，建议找个空余时间更新,不更新也可以，但为避免后续安装其他东西出错最好更一下，这里我就不更了，把命令贴出来</p><p>先更新conda<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda update conda</span><br></pre></td></tr></table></figure><br>再更新第三方所有包<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda upgrade --all</span><br></pre></td></tr></table></figure></p><h3 id="Anaconda-修改默认虚拟环境安装位置"><a href="#Anaconda-修改默认虚拟环境安装位置" class="headerlink" title="Anaconda 修改默认虚拟环境安装位置"></a>Anaconda 修改默认虚拟环境安装位置</h3><p>保存虚拟环境的默认地址是C盘，而我想将下载的虚拟环境保存到我自定义的位置</p><h4 id="使用"><a href="#使用" class="headerlink" title="使用:"></a>使用:</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda config --show</span><br></pre></td></tr></table></figure><p>查看envs_dirs的信息，一般第一个路径是默认路径。把它修改成想要自定义的路径<br>方法1: windows+r输入%HOMEPATH% 找到.condarc文件，用记事本打开，将自定义文件夹的路径append到文件中。<br>比如:<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141051425.png" alt="6"><br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141051415.png" alt="7"><br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141051114.png" alt="8"><br>注意: 我看了很多材料说是把Anaconda3文件夹的只读属性去掉(右键属性即可找到)。但是我尝试后，新创建的虚拟环境还是在C盘。<br>⭐故大家在改完Anaconda3的文件夹属性后没成功的话可以试试，将envs文件夹(这是我的文件夹，因人而异)的只读属性去掉，并且在属性–&gt;安全–&gt;User中将权限全都勾上。此时再Anaconda Prompt中创建虚拟环境应该就没问题了。⭐</p><h4 id="在Anaconda-Prompt中使用命令，添加新的虚拟环境作为默认环境"><a href="#在Anaconda-Prompt中使用命令，添加新的虚拟环境作为默认环境" class="headerlink" title="在Anaconda Prompt中使用命令，添加新的虚拟环境作为默认环境"></a>在Anaconda Prompt中使用命令，添加新的虚拟环境作为默认环境</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda config --add envs_dirs 虚拟环境的绝对路径</span><br></pre></td></tr></table></figure><h4 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h4><p>查看anaconda的环境配置<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda config --show</span><br></pre></td></tr></table></figure></p><p>修改配置语法<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda config --add key value #添加语法</span><br><span class="line">conda config --remove key value #删除语法</span><br></pre></td></tr></table></figure><br>其中，key为 envs_dirs、pkgs_dirs等   value为key对应的值</p><p>添加、删除envs_dirs:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda config --add envs_dirs dir</span><br><span class="line">conda config --remove envs_dirs dir</span><br></pre></td></tr></table></figure><br>例如:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda config --add envs_dirs E:/File/Anaconda3/envs</span><br><span class="line">conda config --remove envs_dirs /Users/Lsz/.conda/envs</span><br></pre></td></tr></table></figure><br>这里记住要用 ” / “</p><p>如果想调整envs_dirs安装顺序， 也是采用conda config —add envs_dirs dir语法， 直接把顺序贴过去就行（如下图所示）<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141051792.png" alt="9"><br>再次查看anconda环境配置，就可以发现默认虚拟环境安装位置已经修改过来了。<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141052356.png" alt="10"></p><h3 id="anaconda使用"><a href="#anaconda使用" class="headerlink" title="anaconda使用"></a>anaconda使用</h3><h4 id="与软件包相关"><a href="#与软件包相关" class="headerlink" title="与软件包相关"></a>与软件包相关</h4><p>安装某一个包<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install package_name</span><br></pre></td></tr></table></figure><br>卸载包<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda remove package_name</span><br></pre></td></tr></table></figure><br>更新某一个具体的包<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda upgrade package_name</span><br></pre></td></tr></table></figure></p><h4 id="与环境有关的命令"><a href="#与环境有关的命令" class="headerlink" title="与环境有关的命令"></a>与环境有关的命令</h4><p>创建新的环境<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n env_name package_names</span><br></pre></td></tr></table></figure><br>需要注意的是，这里的package_names是可选参数，也就是可以通过设定。实现具体包的预安装以及包版本的管理</p><p>进入环境<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">activate env_name</span><br></pre></td></tr></table></figure></p><p>退出环境<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deactivate</span><br></pre></td></tr></table></figure></p><p>删除环境<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda env remove -n env_name</span><br></pre></td></tr></table></figure></p><p>查看当前环境下的包<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda <span class="built_in">list</span></span><br></pre></td></tr></table></figure></p><p>查看环境<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda env <span class="built_in">list</span></span><br></pre></td></tr></table></figure></p><h3 id="Anaconda-环境变量手动设置"><a href="#Anaconda-环境变量手动设置" class="headerlink" title="Anaconda 环境变量手动设置"></a>Anaconda 环境变量手动设置</h3><p>以下就是需要添加的环境变量，相应用户的目录存在差异，但是后面的路径名称相同<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">D:\anaconda</span><br><span class="line">D:\anaconda\Scripts\</span><br><span class="line">D:\anaconda\Library\bin</span><br><span class="line">D:\anaconda\Library\mingw-w64\bin</span><br></pre></td></tr></table></figure><br>重新启动运行命令框，再次输入conda，如果出现以下显示：<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141052320.png" alt="11"></p>]]></content>
      
      
      <categories>
          
          <category> Anaconda </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Anaconda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bootstrap</title>
      <link href="/posts/d352c4d3.html"/>
      <url>/posts/d352c4d3.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://v3.bootcss.com/getting-started/#download">下载地址</a></p>]]></content>
      
      
      <categories>
          
          <category> Bootstrap </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bootstrap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>端口号占用</title>
      <link href="/posts/3f11cddc.html"/>
      <url>/posts/3f11cddc.html</url>
      
        <content type="html"><![CDATA[<h3 id="使用快捷键Windows-R，输入cmd进入dos命令窗口"><a href="#使用快捷键Windows-R，输入cmd进入dos命令窗口" class="headerlink" title="使用快捷键Windows+R，输入cmd进入dos命令窗口"></a>使用快捷键Windows+R，输入cmd进入dos命令窗口</h3><h3 id="输入netstat-nao，查看本地所有的端口号信息"><a href="#输入netstat-nao，查看本地所有的端口号信息" class="headerlink" title="输入netstat -nao，查看本地所有的端口号信息"></a>输入netstat -nao，查看本地所有的端口号信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">协议    本地地址：端口号    外部地址   PID    数字代号</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303202119717.png" alt=""></p><h3 id="然后在输入：taskkill-pid-数字代号-f"><a href="#然后在输入：taskkill-pid-数字代号-f" class="headerlink" title="然后在输入：taskkill /pid  数字代号 -f"></a>然后在输入：taskkill /pid  数字代号 -f</h3><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303202119696.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> tips </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tips </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>明日方舟脚本</title>
      <link href="/posts/882f1047.html"/>
      <url>/posts/882f1047.html</url>
      
        <content type="html"><![CDATA[<h3 id="MAA"><a href="#MAA" class="headerlink" title="MAA"></a>MAA</h3><p><a href="https://github.com/MaaAssistantArknights/MaaAssistantArknights">脚本出处</a></p><p>功能：</p><ul><li>刷理智，掉落识别及上传 <a href="https://penguin-stats.cn/">企鹅物流</a></li><li>智能基建换班，自动计算干员效率，单设施内最优解；同时也支持 <a href="https://maa.plus/docs/3.6-%E5%9F%BA%E5%BB%BA%E6%8E%92%E7%8F%AD%E5%8D%8F%E8%AE%AE.html">自定义排班</a></li><li>自动公招，可选使用加急许可，一次全部刷完！公招数据上传 <a href="https://penguin-stats.cn/result/stage/recruit/recruit">企鹅物流</a>，<a href="https://yituliu.site/maarecruitdata">一图流</a></li><li>访问好友、收取信用及购物、领取日常奖励等。一键全日常自动长草！</li><li>肉鸽全自动刷源石锭和蜡烛，自动识别干员及练度</li><li>选择作业 JSON 文件，自动抄作业！ <a href="https://www.bilibili.com/video/BV1H841177Fk/">视频演示</a></li><li>仓库识别并支持导出至 <a href="https://penguin-stats.cn/planner">企鹅物流刷图规划器</a>, <a href="https://arkn.lolicon.app/#/material">明日方舟工具箱</a>, <a href="https://ark-nights.com/settings">ARK-NIGHTS 干员培养表</a></li><li>支持 C, Python, Java, Rust, Golang, Java HTTP, Rust HTTP 等多种接口，方便集成调用，自定义你的 MAA！</li></ul><h3 id="一、模拟器下载"><a href="#一、模拟器下载" class="headerlink" title="一、模拟器下载"></a>一、模拟器下载</h3><p><a href="https://www.bluestacks.com/tw/index.html">BlueStack5</a></p><p>需要在模拟器“设定 - 进阶” 中打开 “Android调试桥”</p><h3 id="二、明日方舟APK文件下载"><a href="#二、明日方舟APK文件下载" class="headerlink" title="二、明日方舟APK文件下载"></a>二、明日方舟APK文件下载</h3><p><a href="https://ak.hypergryph.com/">明日方舟 - Arknights </a></p><p>右键选择模拟器打开</p><h3 id="三、阿巴阿巴"><a href="#三、阿巴阿巴" class="headerlink" title="三、阿巴阿巴"></a>三、阿巴阿巴</h3><p>保全派驻作业路径：MAA\MAA-v4.10.10-win-x64\resource\copilot\SSS_阿卡胡拉丛林.json</p>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js(video项目后端案例)</title>
      <link href="/posts/88d28bf1.html"/>
      <url>/posts/88d28bf1.html</url>
      
        <content type="html"><![CDATA[<h3 id="导包"><a href="#导包" class="headerlink" title="导包"></a>导包</h3><p>导入express<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add express</span><br></pre></td></tr></table></figure><br>导入template<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn add art-template</span><br><span class="line">yarn add express-art-template</span><br></pre></td></tr></table></figure><br>导入mysql</p><p>导入加密函数<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install bcryptjs</span><br></pre></td></tr></table></figure></p><h3 id="index-js文件编写"><a href="#index-js文件编写" class="headerlink" title="index.js文件编写"></a>index.js文件编写</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">//解决跨域问题</span></span><br><span class="line"><span class="keyword">const</span> cors = <span class="built_in">require</span>(<span class="string">&quot;cors&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> apiRouter = <span class="built_in">require</span>(<span class="string">&#x27;./module/api&#x27;</span>);</span><br><span class="line"><span class="comment">//初始化app</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="built_in">require</span>(<span class="string">&quot;dotenv&quot;</span>).<span class="title function_">config</span>();</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cors</span>());</span><br><span class="line"><span class="comment">//用于解析HTTP请求中的请求体（request body），并将其转换为JSON格式的数据</span></span><br><span class="line">app.<span class="title function_">use</span>(bodyParser.<span class="title function_">json</span>());</span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&#x27;/api&#x27;</span>, apiRouter);</span><br><span class="line"><span class="comment">//监听5000端口</span></span><br><span class="line"><span class="keyword">const</span> server = app.<span class="title function_">listen</span>(process.<span class="property">env</span>.<span class="property">PORT</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Server Started on Port <span class="subst">$&#123;process.env.PORT&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="数据库部分代码"><a href="#数据库部分代码" class="headerlink" title="数据库部分代码"></a>数据库部分代码</h3><h4 id="orm-js"><a href="#orm-js" class="headerlink" title="orm.js"></a>orm.js</h4><p>ORM中文意为：对象-关系映射<br>它能把数据库表中的每条记录映射成一个模型对象<br>1、不需要写数据库sql代码来操作数据库<br>2、避免了不同数据库之间的操作差异<br>3、可以通过简单的配置来更换数据库<br>不过项目中基本未使用</p><h4 id="handle-js"><a href="#handle-js" class="headerlink" title="handle.js"></a>handle.js</h4><p>为了调用方便，我们可以将这些异步代码全部封装：<br>不过项目中基本未使用</p><h3 id="token-js部分代码"><a href="#token-js部分代码" class="headerlink" title="token.js部分代码"></a>token.js部分代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&#x27;jsonwebtoken&#x27;</span>);</span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;dotenv&#x27;</span>).<span class="title function_">config</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Token</span> = &#123;</span><br><span class="line">  <span class="title function_">encode</span>(<span class="params">payload</span>) &#123;</span><br><span class="line">    <span class="comment">//sign(param1,param2)  加密对象，解密密匙</span></span><br><span class="line">    <span class="keyword">const</span> token = jwt.<span class="title function_">sign</span>(payload, process.<span class="property">env</span>.<span class="property">SECRET_KEY</span>);</span><br><span class="line">    <span class="keyword">return</span> token;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">decode</span>(<span class="params">token</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">//verify(param1,param2)  解密对象，解密密匙</span></span><br><span class="line">      <span class="keyword">const</span> payload = jwt.<span class="title function_">verify</span>(token, process.<span class="property">env</span>.<span class="property">SECRET_KEY</span>);</span><br><span class="line">      <span class="keyword">return</span> payload;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">Token</span>;</span><br></pre></td></tr></table></figure><h3 id="接口部分代码api"><a href="#接口部分代码api" class="headerlink" title="接口部分代码api"></a>接口部分代码api</h3><h4 id="注册接口-signin"><a href="#注册接口-signin" class="headerlink" title="注册接口 signin"></a>注册接口 signin</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注册</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/signin&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">json</span>(&#123;<span class="attr">message</span>: <span class="string">&#x27;注册界面&#x27;</span>&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/signin&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//获取参数</span></span><br><span class="line">  <span class="keyword">const</span> &#123; username, password&#125; = req.<span class="property">body</span>;</span><br><span class="line">  <span class="comment">//加密密码</span></span><br><span class="line">  <span class="keyword">const</span> payload = &#123; username &#125;;</span><br><span class="line">  <span class="keyword">const</span> token = <span class="title class_">Token</span>.<span class="title function_">encode</span>(payload);</span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;user&#x27;</span>).<span class="title function_">sql</span>(<span class="string">`INSERT INTO user (name, password) VALUES (&#x27;<span class="subst">$&#123;username&#125;</span>&#x27;, &#x27;<span class="subst">$&#123;password&#125;</span>&#x27;)`</span>, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;注册成功&#x27;</span>, <span class="attr">token</span>: token &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="登录接口-login"><a href="#登录接口-login" class="headerlink" title="登录接口 login"></a>登录接口 login</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//登录</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/login&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">json</span>(&#123;<span class="attr">message</span>: <span class="string">&#x27;登录界面&#x27;</span>&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/login&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 获取参数</span></span><br><span class="line">  <span class="keyword">const</span> &#123; username, password, token &#125; = req.<span class="property">body</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 如果有token，则尝试解密</span></span><br><span class="line">  <span class="keyword">if</span> (token) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> decoded = <span class="title class_">Token</span>.<span class="title function_">decode</span>(token);</span><br><span class="line">      <span class="keyword">if</span> (decoded.<span class="property">username</span> === username) &#123;</span><br><span class="line">        <span class="comment">// 如果解密成功，且用户名与请求一致，则返回登录成功,并找到user_id返回给前端</span></span><br><span class="line">        db.<span class="title function_">model</span>(<span class="string">&#x27;user&#x27;</span>).<span class="title function_">sql</span>(<span class="string">`SELECT id FROM user WHERE name=&#x27;<span class="subst">$&#123;username&#125;</span>&#x27;`</span>, <span class="function">(<span class="params">err, user_id</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (err) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">            res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;login Server Error&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;登录成功&#x27;</span>, <span class="attr">user_id</span>:user_id[<span class="number">0</span>].<span class="property">id</span>, <span class="attr">token</span>: token &#125;);</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      res.<span class="title function_">send</span>(<span class="string">&quot;解密失败&quot;</span>)</span><br><span class="line">      <span class="comment">// 如果解密失败，或用户名不一致，则忽略token，进行下一步验证</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(password) &#123;</span><br><span class="line">  <span class="comment">// 验证用户名和密码</span></span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;user&#x27;</span>).<span class="title function_">sql</span>(<span class="string">`SELECT COUNT(*) as count FROM user WHERE name=&#x27;<span class="subst">$&#123;username&#125;</span>&#x27; AND password=<span class="subst">$&#123;password&#125;</span>`</span>, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (results[<span class="number">0</span>].<span class="property">count</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">//如果用户存在，则找到user_id返回给前端</span></span><br><span class="line">      db.<span class="title function_">model</span>(<span class="string">&#x27;user&#x27;</span>).<span class="title function_">sql</span>(<span class="string">`SELECT id FROM user WHERE name=&#x27;<span class="subst">$&#123;username&#125;</span>&#x27;`</span>, <span class="function">(<span class="params">err, user_id</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">          res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;login Server Error&#x27;</span>);</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 生成新的token返回给客户端</span></span><br><span class="line">        <span class="keyword">const</span> payload = &#123; username &#125;;</span><br><span class="line">        <span class="keyword">const</span> newToken = <span class="title class_">Token</span>.<span class="title function_">encode</span>(payload);</span><br><span class="line">        res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;登录成功&#x27;</span>, <span class="attr">user_id</span>:user_id[<span class="number">0</span>].<span class="property">id</span>, <span class="attr">token</span>: newToken &#125;);</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: -<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;用户名或密码错误&#x27;</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: -<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;没输入密码&#x27;</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="测试数据库链接接口-test"><a href="#测试数据库链接接口-test" class="headerlink" title="测试数据库链接接口 test"></a>测试数据库链接接口 test</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//测试数据库连接</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/test&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;user&#x27;</span>).<span class="title function_">sql</span>(<span class="string">`select count(*) as count from user`</span>, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res.<span class="title function_">json</span>(&#123; <span class="attr">result</span>: results[<span class="number">0</span>].<span class="property">count</span>, <span class="attr">message</span>: <span class="string">&#x27;Database connection successful&#x27;</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="搜索接口-search"><a href="#搜索接口-search" class="headerlink" title="搜索接口 search"></a>搜索接口 search</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//搜索</span></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/search&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//获取搜索内容 msg:搜索str,user_id：搜索用户</span></span><br><span class="line">  <span class="keyword">const</span> &#123; msg, user_id&#125; = req.<span class="property">body</span>;</span><br><span class="line">  <span class="comment">//在数据库表video中进行模糊查找</span></span><br><span class="line">  <span class="keyword">const</span> searchQuery = <span class="string">`SELECT a.id, a.name,a.cover,a.type,b.name as tag,a.description FROM video as a,video_tag as b WHERE a.name LIKE &#x27;%<span class="subst">$&#123;msg&#125;</span>%&#x27; and a.id = b.video_id`</span>;</span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;video&#x27;</span>).<span class="title function_">sql</span>(searchQuery, <span class="function">(<span class="params">err, search_results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    search_data = search_results;</span><br><span class="line">    <span class="comment">//记录用户搜索记录</span></span><br><span class="line">    <span class="keyword">const</span> insertQuery = <span class="string">`insert into search_history (content,user_id) VALUES (&#x27;<span class="subst">$&#123;msg&#125;</span>&#x27;, &#x27;<span class="subst">$&#123;user_id&#125;</span>&#x27;);`</span>;</span><br><span class="line">    db.<span class="title function_">model</span>(<span class="string">&#x27;search_history&#x27;</span>).<span class="title function_">sql</span>(insertQuery,<span class="function">(<span class="params">err,insert_results</span>)=&gt;</span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">        res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">200</span>);</span><br><span class="line">      res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;搜索成功&#x27;</span>,<span class="attr">data</span>:search_data &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="图片接口-pictures"><a href="#图片接口-pictures" class="headerlink" title="图片接口 pictures"></a>图片接口 pictures</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//随机返回前端8张图片</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/pictures&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">const</span> sqlquery = <span class="string">`SELECT * FROM pictures ORDER BY RAND() LIMIT 8`</span>;</span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;pictures&#x27;</span>).<span class="title function_">sql</span>(sqlquery, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">200</span>);</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;返回8张图片&#x27;</span>, <span class="attr">pictures</span>:results&#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="动漫接口-anime"><a href="#动漫接口-anime" class="headerlink" title="动漫接口 anime"></a>动漫接口 anime</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//anime</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/anime&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="comment">//随机选取8个动漫</span></span><br><span class="line">  <span class="keyword">const</span> sqlquery = <span class="string">`SELECT video.id, video.name, video.description, video.cover, video_tag.name as tag FROM video,video_tag WHERE type = &#x27;动漫&#x27; and video.id = video_tag.video_id and video_tag.name &lt;&gt; &#x27;Unknown&#x27; ORDER BY RAND() LIMIT 8`</span></span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;video&#x27;</span>).<span class="title function_">sql</span>(sqlquery, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">200</span>);</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;随机选取8个动漫&#x27;</span>, <span class="attr">anime</span>:results&#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="电影接口-movie"><a href="#电影接口-movie" class="headerlink" title="电影接口 movie"></a>电影接口 movie</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//movie</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/movie&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="comment">//随机选取8个电影</span></span><br><span class="line">  <span class="keyword">const</span> sqlquery = <span class="string">`SELECT video.id, video.name, video.description, video.cover, video_tag.name as tag FROM video,video_tag WHERE type = &#x27;电影&#x27; and video.id = video_tag.video_id and video_tag.name &lt;&gt; &#x27;Unknown&#x27; ORDER BY RAND() LIMIT 8`</span></span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;video&#x27;</span>).<span class="title function_">sql</span>(sqlquery, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">200</span>);</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;随机选取8个电影&#x27;</span>, <span class="attr">movie</span>:results&#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="电视剧接口-tv"><a href="#电视剧接口-tv" class="headerlink" title="电视剧接口 tv"></a>电视剧接口 tv</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tv</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/tv&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="comment">//随机选取8个电视剧</span></span><br><span class="line">  <span class="keyword">const</span> sqlquery = <span class="string">`SELECT video.id, video.name, video.description, video.cover, video_tag.name as tag FROM video,video_tag WHERE type = &#x27;电视剧&#x27; and video.id = video_tag.video_id and video_tag.name &lt;&gt; &#x27;Unknown&#x27; ORDER BY RAND() LIMIT 8`</span></span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;video&#x27;</span>).<span class="title function_">sql</span>(sqlquery, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">200</span>);</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;随机选取8个电视剧&#x27;</span>, <span class="attr">tv</span>:results&#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="综艺接口-variety"><a href="#综艺接口-variety" class="headerlink" title="综艺接口 variety"></a>综艺接口 variety</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//variety</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/variety&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="comment">//随机选取8个综艺</span></span><br><span class="line">  <span class="keyword">const</span> sqlquery = <span class="string">`SELECT video.id, video.name, video.description, video.cover, video_tag.name as tag FROM video,video_tag WHERE type = &#x27;综艺&#x27; and video.id = video_tag.video_id and video_tag.name &lt;&gt; &#x27;Unknown&#x27; ORDER BY RAND() LIMIT 8`</span></span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;video&#x27;</span>).<span class="title function_">sql</span>(sqlquery, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">200</span>);</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;随机选取8个综艺&#x27;</span>, <span class="attr">variety</span>:results&#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="排行榜接口-rank"><a href="#排行榜接口-rank" class="headerlink" title="排行榜接口 rank"></a>排行榜接口 rank</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//排行榜</span></span><br><span class="line"><span class="comment">//由于非正式项目，故选择随机选取10个数据</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/rank&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="comment">//随机选取10个动漫</span></span><br><span class="line">  <span class="keyword">const</span> videoQuery1 = <span class="string">`SELECT video.id, video.name, video.cover, video_tag.name as tag FROM video,video_tag WHERE type = &#x27;动漫&#x27; and video.id = video_tag.video_id and video_tag.name &lt;&gt; &#x27;Unknown&#x27; ORDER BY RAND() LIMIT 10`</span></span><br><span class="line">  <span class="comment">//随机选取10个综艺</span></span><br><span class="line">  <span class="keyword">const</span> videoQuery2 = <span class="string">`SELECT video.id, video.name, video.cover, video_tag.name as tag FROM video,video_tag WHERE type = &#x27;综艺&#x27; and video.id = video_tag.video_id and video_tag.name &lt;&gt; &#x27;Unknown&#x27; ORDER BY RAND() LIMIT 10`</span></span><br><span class="line">  <span class="comment">//随机选取10个电视剧</span></span><br><span class="line">  <span class="keyword">const</span> videoQuery3 = <span class="string">`SELECT video.id, video.name, video.cover, video_tag.name as tag FROM video,video_tag WHERE type = &#x27;电视剧&#x27; and video.id = video_tag.video_id and video_tag.name &lt;&gt; &#x27;Unknown&#x27; ORDER BY RAND() LIMIT 10`</span></span><br><span class="line">  <span class="comment">//随机选取10个图片</span></span><br><span class="line">  <span class="keyword">const</span> pictureQuery = <span class="string">`SELECT * FROM pictures ORDER BY RAND() LIMIT 10`</span>;</span><br><span class="line">  <span class="comment">//随机选取10张播出表数据</span></span><br><span class="line">  <span class="keyword">const</span> rotateQuery = <span class="string">`SELECT video.id, video.name, video.cover, video_tag.name as tag FROM video,video_tag,video_round WHERE video.id = video_tag.video_id and video_tag.name &lt;&gt; &#x27;Unknown&#x27;  and video_round.video_id = video.id ORDER BY RAND() LIMIT 10`</span></span><br><span class="line">  <span class="comment">//第一次</span></span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;video&#x27;</span>).<span class="title function_">sql</span>(videoQuery1, <span class="function">(<span class="params">err, results1</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    video1 = results1;</span><br><span class="line">    <span class="comment">//第二次</span></span><br><span class="line">    db.<span class="title function_">model</span>(<span class="string">&#x27;video&#x27;</span>).<span class="title function_">sql</span>(videoQuery2, <span class="function">(<span class="params">err, results2</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">        res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//第三次</span></span><br><span class="line">      db.<span class="title function_">model</span>(<span class="string">&#x27;video&#x27;</span>).<span class="title function_">sql</span>(videoQuery3, <span class="function">(<span class="params">err, results3</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">          res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//第四次</span></span><br><span class="line">        db.<span class="title function_">model</span>(<span class="string">&#x27;pictures&#x27;</span>).<span class="title function_">sql</span>(pictureQuery, <span class="function">(<span class="params">err, results4</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (err) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">            res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="comment">//第五次</span></span><br><span class="line">          db.<span class="title function_">model</span>(<span class="string">&#x27;video_round&#x27;</span>).<span class="title function_">sql</span>(rotateQuery, <span class="function">(<span class="params">err, results5</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (err) &#123;</span><br><span class="line">              <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">              res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">              <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            res.<span class="title function_">status</span>(<span class="number">200</span>);</span><br><span class="line">          res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;排行榜&#x27;</span>, <span class="attr">anime</span>:results1, <span class="attr">variety</span>:results2, <span class="attr">TV</span>:results3, <span class="attr">pictures</span>:results4,<span class="attr">rotate</span>:results5&#125;);</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="播出表接口-rotate"><a href="#播出表接口-rotate" class="headerlink" title="播出表接口 rotate"></a>播出表接口 rotate</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//轮播表</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/rotate&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//从播出表中将每一天的播出video找出，共84个</span></span><br><span class="line">  <span class="keyword">const</span> sqlquery = <span class="string">`select video.id,video.name,video.cover from video_round,video,video_tag where video.id = video_tag.video_id and video_round.video_id = video.id`</span></span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;user&#x27;</span>).<span class="title function_">sql</span>(sqlquery, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">//将得到的84数据分开，由于按顺序读出，故12个数据即对应一天</span></span><br><span class="line">      <span class="keyword">const</span> smallArrays = [];</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; results.<span class="property">length</span>; i += <span class="number">12</span>) &#123;</span><br><span class="line">        smallArrays.<span class="title function_">push</span>(results.<span class="title function_">slice</span>(i, i + <span class="number">12</span>));</span><br><span class="line">      &#125;</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">200</span>);</span><br><span class="line">      res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>:<span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;轮播表&#x27;</span>, <span class="title class_">Monday</span>:smallArrays[<span class="number">0</span>], <span class="title class_">Tuesday</span>:smallArrays[<span class="number">1</span>], <span class="title class_">Wednesday</span>:smallArrays[<span class="number">2</span>], <span class="title class_">Thursday</span>:smallArrays[<span class="number">3</span>], <span class="title class_">Friday</span>:smallArrays[<span class="number">4</span>], <span class="title class_">Saturday</span>:smallArrays[<span class="number">5</span>], <span class="title class_">Sunday</span>:smallArrays[<span class="number">6</span>] &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="返回指定video-id信息-getVideoInfo"><a href="#返回指定video-id信息-getVideoInfo" class="headerlink" title="返回指定video_id信息 getVideoInfo"></a>返回指定video_id信息 getVideoInfo</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//返回video_url</span></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/getVideoInfo&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> video_id = req.<span class="property">body</span>.<span class="property">video_id</span>;</span><br><span class="line">  <span class="keyword">const</span> sqlquery = <span class="string">`SELECT video.name, video.type, video.year,video.area, video.description,video.episodes,video_tag.name as tag FROM video, video_tag WHERE video.id = video_tag.video_id AND video.id = &#x27;<span class="subst">$&#123;video_id&#125;</span>&#x27;`</span>;</span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;user&#x27;</span>).<span class="title function_">sql</span>(sqlquery, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;get_video_info&#x27;</span>, <span class="attr">results</span>:results[<span class="number">0</span>] &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="获取搜索记录-getHistory"><a href="#获取搜索记录-getHistory" class="headerlink" title="获取搜索记录 getHistory"></a>获取搜索记录 getHistory</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/getHistory&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">const</span> user_id = req.<span class="property">body</span>.<span class="property">user_id</span>;</span><br><span class="line">  <span class="keyword">if</span> (user_id === <span class="number">0</span>)&#123;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">json</span>(&#123;<span class="attr">code</span>:<span class="number">0</span>,<span class="attr">message</span>:<span class="string">&quot;user_id = 0&quot;</span>, <span class="attr">value</span>:[]&#125;);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> sqlquery = <span class="string">`select search_history.value from search_history where user_id = &#x27;<span class="subst">$&#123;user_id&#125;</span>&#x27;`</span>;</span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;user&#x27;</span>).<span class="title function_">sql</span>(sqlquery, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123;<span class="attr">code</span>:-<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">json</span>(&#123;<span class="attr">code</span>:<span class="number">0</span>,<span class="attr">message</span>:<span class="string">&quot;getHistory&quot;</span>, <span class="attr">data</span>:results&#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="发表评论接口-makeComment"><a href="#发表评论接口-makeComment" class="headerlink" title="发表评论接口 makeComment"></a>发表评论接口 makeComment</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/makeComment&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">const</span> &#123;video_id,content,user_id&#125; = req.<span class="property">body</span>;</span><br><span class="line">  <span class="keyword">if</span>(user_id === <span class="number">0</span>)&#123;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">json</span>(&#123;<span class="attr">code</span>:<span class="number">0</span>,<span class="attr">message</span>:<span class="string">&quot;请先登录再评论&quot;</span>&#125;);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> sqlquery = <span class="string">`insert into comment (video_id,content,user_id,createTime,commitLikeCount) VALUES(&#x27;<span class="subst">$&#123;video_id&#125;</span>&#x27;,&#x27;<span class="subst">$&#123;content&#125;</span>&#x27;,&#x27;<span class="subst">$&#123;user_id&#125;</span>&#x27;,NOW(),FLOOR(RAND() * 100))`</span>;</span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;comment&#x27;</span>).<span class="title function_">sql</span>(sqlquery, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123;<span class="attr">cosw</span>:-<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">json</span>(&#123;<span class="attr">code</span>:<span class="number">0</span>,<span class="attr">message</span>:<span class="string">&quot;评论成功&quot;</span>&#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="返回一级评论-getComment1"><a href="#返回一级评论-getComment1" class="headerlink" title="返回一级评论 getComment1"></a>返回一级评论 getComment1</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/getComment1&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> video_id = req.<span class="property">body</span>.<span class="property">video_id</span>;</span><br><span class="line">  <span class="keyword">const</span> pagenum = req.<span class="property">body</span>.<span class="property">pagenum</span> || <span class="number">1</span>; <span class="comment">// 如果未提供 pagenum 参数，默认为第一页</span></span><br><span class="line">  <span class="keyword">const</span> pagesize = req.<span class="property">body</span>.<span class="property">pagesize</span> || <span class="number">10</span>; <span class="comment">// 如果未提供 pagesize 参数，默认每页显示 10 条评论</span></span><br><span class="line">  <span class="keyword">const</span> offset = (pagenum - <span class="number">1</span>) * pagesize; <span class="comment">// 计算需要跳过的评论数量</span></span><br><span class="line">  <span class="comment">//获取评论总数</span></span><br><span class="line">  <span class="keyword">const</span> queryTotal = <span class="string">`SELECT COUNT(*) AS total FROM comment WHERE comment.video_id = &#x27;<span class="subst">$&#123;video_id&#125;</span>&#x27; AND comment.rootCommentID = 0`</span>;</span><br><span class="line">  <span class="comment">// 按照 createTime 降序排序查询符合条件的评论详细信息</span></span><br><span class="line">  <span class="keyword">const</span> queryByTime = <span class="string">`</span></span><br><span class="line"><span class="string">    SELECT comment.videoCommentID AS id, user.name AS nickname, content, DATE_FORMAT(createTime, &#x27;%Y-%m-%d %H:%i:%s&#x27;) AS createTime, commitLikeCount </span></span><br><span class="line"><span class="string">    FROM user, comment </span></span><br><span class="line"><span class="string">    WHERE video_id = &#x27;<span class="subst">$&#123;video_id&#125;</span>&#x27; AND user.id = comment.user_id AND comment.rootCommentID = 0</span></span><br><span class="line"><span class="string">    ORDER BY createTime ASC </span></span><br><span class="line"><span class="string">    LIMIT <span class="subst">$&#123;offset&#125;</span>, <span class="subst">$&#123;pagesize&#125;</span></span></span><br><span class="line"><span class="string">  `</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 按照 commitLikeCount 降序排序查询符合条件的评论详细信息</span></span><br><span class="line">  <span class="keyword">const</span> queryByHot = <span class="string">`</span></span><br><span class="line"><span class="string">    SELECT comment.videoCommentID AS id, user.name AS nickname, content, DATE_FORMAT(createTime, &#x27;%Y-%m-%d %H:%i:%s&#x27;) AS createTime, commitLikeCount </span></span><br><span class="line"><span class="string">    FROM user, comment </span></span><br><span class="line"><span class="string">    WHERE video_id = &#x27;<span class="subst">$&#123;video_id&#125;</span>&#x27; AND user.id = comment.user_id AND comment.rootCommentID = 0</span></span><br><span class="line"><span class="string">    ORDER BY commitLikeCount DESC, createTime ASC </span></span><br><span class="line"><span class="string">    LIMIT <span class="subst">$&#123;offset&#125;</span>, <span class="subst">$&#123;pagesize&#125;</span></span></span><br><span class="line"><span class="string">  `</span>;</span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;comment&#x27;</span>).<span class="title function_">sql</span>(queryByTime, <span class="function">(<span class="params">err, rowsByTime</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123; <span class="attr">code</span>: -<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    db.<span class="title function_">model</span>(<span class="string">&#x27;comment&#x27;</span>).<span class="title function_">sql</span>(queryByHot, <span class="function">(<span class="params">err, rowsByHot</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">        res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123; <span class="attr">code</span>: -<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      db.<span class="title function_">model</span>(<span class="string">&#x27;comment&#x27;</span>).<span class="title function_">sql</span>(queryTotal, <span class="function">(<span class="params">err, total</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">          res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123; <span class="attr">code</span>: -<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;查询成功&#x27;</span>, <span class="attr">total</span>:total[<span class="number">0</span>].<span class="property">total</span>, rowsByTime, rowsByHot &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="返回二级评论-getComment2"><a href="#返回二级评论-getComment2" class="headerlink" title="返回二级评论 getComment2"></a>返回二级评论 getComment2</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/getComment2&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> videoCommentid = req.<span class="property">body</span>.<span class="property">videoCommentid</span>;</span><br><span class="line">  <span class="keyword">const</span> pagenum = req.<span class="property">body</span>.<span class="property">pagenum</span> || <span class="number">1</span>; <span class="comment">// 如果未提供 pagenum 参数，默认为第一页</span></span><br><span class="line">  <span class="keyword">const</span> pagesize = req.<span class="property">body</span>.<span class="property">pagesize</span> || <span class="number">10</span>; <span class="comment">// 如果未提供 pagesize 参数，默认每页显示 10 条评论</span></span><br><span class="line">  <span class="keyword">const</span> state = req.<span class="property">body</span>.<span class="property">state</span> || <span class="string">&quot;createtime&quot;</span>;</span><br><span class="line">  <span class="keyword">const</span> offset = (pagenum - <span class="number">1</span>) * pagesize; <span class="comment">// 计算需要跳过的评论数量</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 查询符合条件的评论总数</span></span><br><span class="line">  <span class="keyword">const</span> sqlquery1 = <span class="string">`SELECT COUNT(*) AS total FROM comment WHERE comment.rootCommentID = &#x27;<span class="subst">$&#123;videoCommentid&#125;</span>&#x27;`</span>;</span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;comment&#x27;</span>).<span class="title function_">sql</span>(sqlquery1, <span class="function">(<span class="params">err, results1</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123; <span class="attr">code</span>: -<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询符合条件的评论详细信息，并按照 createTime 降序或者 commitLikeCount 降序排序</span></span><br><span class="line">    <span class="keyword">let</span> orderBy = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (state === <span class="string">&#x27;hot&#x27;</span>) &#123;</span><br><span class="line">      orderBy = <span class="string">&#x27;ORDER BY commitLikeCount ASC, createTime ASC&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (state === <span class="string">&#x27;time&#x27;</span>) &#123;</span><br><span class="line">      orderBy = <span class="string">&#x27;ORDER BY createTime ASC&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> sqlquery2 = <span class="string">`</span></span><br><span class="line"><span class="string">      SELECT comment.videoCommentID AS id, user.name AS nickname, content, DATE_FORMAT(createTime, &#x27;%Y-%m-%d %H:%i:%s&#x27;) AS createTime, commitLikeCount </span></span><br><span class="line"><span class="string">      FROM user, comment </span></span><br><span class="line"><span class="string">      WHERE rootCommentID = &#x27;<span class="subst">$&#123;videoCommentid&#125;</span>&#x27; AND user.id = comment.user_id </span></span><br><span class="line"><span class="string">      <span class="subst">$&#123;orderBy&#125;</span> </span></span><br><span class="line"><span class="string">      LIMIT <span class="subst">$&#123;offset&#125;</span>, <span class="subst">$&#123;pagesize&#125;</span></span></span><br><span class="line"><span class="string">    `</span>;</span><br><span class="line">    db.<span class="title function_">model</span>(<span class="string">&#x27;comment&#x27;</span>).<span class="title function_">sql</span>(sqlquery2, <span class="function">(<span class="params">err, results2</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">        res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123; <span class="attr">code</span>: -<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">const</span> total = results1[<span class="number">0</span>].<span class="property">total</span>; <span class="comment">// 总评论数</span></span><br><span class="line">      <span class="keyword">const</span> rows = results2; <span class="comment">// 当前页评论数据</span></span><br><span class="line"></span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;查询成功&#x27;</span>, total, rows &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="获取url-getUrl"><a href="#获取url-getUrl" class="headerlink" title="获取url getUrl"></a>获取url getUrl</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/getUrl&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">const</span> video_id = req.<span class="property">body</span>.<span class="property">video_id</span></span><br><span class="line">  <span class="keyword">const</span> sqlquery = <span class="string">`SELECT video_episodes.episodes, MIN(video_episodes.url) AS url FROM video_episodes INNER JOIN video_road ON video_road.id = video_episodes.road_id INNER JOIN video ON video.id = video_road.video_id WHERE video.id = &#x27;<span class="subst">$&#123;video_id&#125;</span>&#x27; GROUP BY video_episodes.episodes ORDER BY episodes;`</span></span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;video_episodes&#x27;</span>).<span class="title function_">sql</span>(sqlquery, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123;<span class="attr">cosw</span>:-<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">json</span>(&#123;<span class="attr">code</span>:<span class="number">0</span>, <span class="attr">message</span>:<span class="string">&quot;GETURL&quot;</span>, <span class="attr">data</span>:results&#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js(14.Nodejs中使用jwt(JSON Web Token)模块)</title>
      <link href="/posts/ab1892.html"/>
      <url>/posts/ab1892.html</url>
      
        <content type="html"><![CDATA[<h3 id="安装jwt模块："><a href="#安装jwt模块：" class="headerlink" title="安装jwt模块："></a>安装jwt模块：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i jsonwebtoken</span><br></pre></td></tr></table></figure><h3 id="编写"><a href="#编写" class="headerlink" title="编写"></a>编写</h3><p>token.js:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.安装jsonwebtoken</span></span><br><span class="line"><span class="comment">//2.使用jwt中的两个方法来加密和解密token</span></span><br><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&#x27;jsonwebtoken&#x27;</span>);</span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;dotenv&#x27;</span>).<span class="title function_">config</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Token</span> = &#123;</span><br><span class="line">  <span class="title function_">encode</span>(<span class="params">payload</span>) &#123;<span class="comment">//加密token</span></span><br><span class="line">    <span class="comment">// jwt.sign(param1,param2); param1:加密的内容；param2:解密的密钥</span></span><br><span class="line">    <span class="keyword">const</span> token = jwt.<span class="title function_">sign</span>(payload, process.<span class="property">env</span>.<span class="property">SECRET_KEY</span>);</span><br><span class="line">    <span class="keyword">return</span> token;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">decode</span>(<span class="params">token</span>) &#123;<span class="comment">//解密token</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">//jwt.verify(param1,param2); param1:解密的对象；param2:解密的密钥</span></span><br><span class="line">      <span class="keyword">const</span> payload = jwt.<span class="title function_">verify</span>(token, process.<span class="property">env</span>.<span class="property">SECRET_KEY</span>);</span><br><span class="line">      <span class="keyword">return</span> payload;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">Token</span>;</span><br></pre></td></tr></table></figure></p><h3 id="使用token实现登录接口-免密登录"><a href="#使用token实现登录接口-免密登录" class="headerlink" title="使用token实现登录接口(免密登录)"></a>使用token实现登录接口(免密登录)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/login&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 获取参数</span></span><br><span class="line">  <span class="keyword">const</span> &#123; username, password, token &#125; = req.<span class="property">body</span>;</span><br><span class="line">  <span class="comment">//免密登录：</span></span><br><span class="line">  <span class="comment">// 如果有token，则尝试解密</span></span><br><span class="line">  <span class="keyword">if</span> (token) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> decoded = <span class="title class_">Token</span>.<span class="title function_">decode</span>(token);</span><br><span class="line">      <span class="keyword">if</span> (decoded.<span class="property">username</span> === username) &#123;</span><br><span class="line">        <span class="comment">// 如果解密成功，且用户名与请求一致，则返回登录成功</span></span><br><span class="line">        res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;登录成功&#x27;</span>, <span class="attr">token</span>: token &#125;);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      res.<span class="title function_">send</span>(<span class="string">&quot;解密失败&quot;</span>)</span><br><span class="line">      <span class="comment">// 如果解密失败，或用户名不一致，则忽略token，进行下一步验证</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 验证用户名和密码</span></span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;user&#x27;</span>).<span class="title function_">sql</span>(<span class="string">`SELECT COUNT(*) as count FROM user WHERE name=&#x27;<span class="subst">$&#123;username&#125;</span>&#x27; AND password=<span class="subst">$&#123;password&#125;</span>`</span>, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (results[<span class="number">0</span>].<span class="property">count</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">// 生成新的token返回给客户端</span></span><br><span class="line">      <span class="keyword">const</span> payload = &#123; username &#125;;</span><br><span class="line">      <span class="keyword">const</span> newToken = <span class="title class_">Token</span>.<span class="title function_">encode</span>(payload);</span><br><span class="line">      res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;登录成功&#x27;</span>, <span class="attr">token</span>: newToken &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: -<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;用户名或密码错误&#x27;</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js(13.状态保持技术cookie和session)</title>
      <link href="/posts/76f375b1.html"/>
      <url>/posts/76f375b1.html</url>
      
        <content type="html"><![CDATA[<h3 id="状态保持技术cookie和session"><a href="#状态保持技术cookie和session" class="headerlink" title="状态保持技术cookie和session"></a>状态保持技术cookie和session</h3><p>我们应该理解，http是一种无状态的协议，浏览器请求服务器是无状态的，在这里为什么是无状态的呢？这是因为在每次用户发起请求的时候，无论是浏览器还是服务器都无法知道之前这个用户做过什么，每一次请求都是一次新的请求。具体的原因呢，是因为浏览器与服务器是使用socket进行通信的，服务器将请求结果返回给浏览器后，会关闭当前的socket连接，而且服务器也会在处理页面完毕之后销毁页面对象。<br>        而有时我们必须保持用户的某些状态，比如是否登录，浏览过什么。<br>        我们实现状态保持主要有两种方式:</p><pre><code>    1、在客户端存储信息使用Cookie    2、在服务器端存储信息使用Session</code></pre><h3 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h3><p>特点：<br>1、cookie是由服务器生成，保存在浏览器端的一小段文本信息<br>2、cookie是以键和值的形式进行存储的<br>3、浏览器在访问一个网站的服务器时，会自发的在请求头中把和本网站相关的所有cookie发送到服务器。<br>4、cookie是基于域名安全的<br>5、cookie有过期时间，默认关闭浏览器之后过期，这个可以自己设置</p><p>使用<br>1、先安装和引入cookie-parser<br>2、再注册到app.js中：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">const cookieParase = require(&#x27;cookie-parser&#x27;);</span><br><span class="line">app.use(cookieParase());</span><br></pre></td></tr></table></figure><br>设置cookie：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res.cookie(&#x27;name&#x27;, &quot;node&quot;, &#123;maxAge: 1000 * 60 * 60 * 2 &#125;); </span><br></pre></td></tr></table></figure><br>获取cookie：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let name = req.cookies[&quot;name&quot;]</span><br></pre></td></tr></table></figure><br>完整使用代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">/ <span class="number">1</span>、安装cookie-parser</span><br><span class="line"><span class="comment">// 2、引入cookie-parser并注册到app中</span></span><br><span class="line"><span class="keyword">const</span> cookieParase = <span class="built_in">require</span>(<span class="string">&#x27;cookie-parser&#x27;</span>);</span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cookieParase</span>());</span><br><span class="line"> </span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/setCookie&quot;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//设置cookie</span></span><br><span class="line">    res.<span class="title function_">cookie</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&quot;node&quot;</span>, &#123;<span class="attr">maxAge</span>: <span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">2</span> &#125;);    <span class="comment">// 过期时间：单位毫秒</span></span><br><span class="line">    res.<span class="title function_">cookie</span>(<span class="string">&#x27;age&#x27;</span>, <span class="number">11</span>); </span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&quot;设置了cookie&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/getCookie&quot;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//获取cookie信息</span></span><br><span class="line">    <span class="keyword">let</span> name = req.<span class="property">cookies</span>[<span class="string">&quot;name&quot;</span>];</span><br><span class="line">    <span class="keyword">let</span> age = req.<span class="property">cookies</span>[<span class="string">&quot;age&quot;</span>];</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">`获取cookie, <span class="subst">$&#123;name&#125;</span>, <span class="subst">$&#123;age&#125;</span>`</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><h3 id="session"><a href="#session" class="headerlink" title="session"></a>session</h3><p>特点：<br>1、session数据保存在服务器端<br>2、session跟cookie一样是以键和值的形式进行存储<br>3、session依赖于cookie，每个session信息对应的客户端标识保存在cookie中</p><p>使用<br>1、安装和引入：cookie-session<br>2、注册到app.js:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">app.use(cookieSession(&#123;</span><br><span class="line">    name:&quot;my_session&quot;,  //name为session名，自己起一个字符串就行</span><br><span class="line">    keys:[&quot;$^%%&amp;^&amp;%$RT%&amp;TYGSGSFRR554785432$#@$$#%$@#%&quot;],  // 内部加密需要的keys， keys为随机字符串</span><br><span class="line">    maxAge: 1000 * 60 * 60 * 24   // 过期时间</span><br><span class="line">&#125;))</span><br></pre></td></tr></table></figure><br>注意注册session要有key<br>设置session：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">req.session[&quot;name&quot;] = &quot;session_node&quot;</span><br></pre></td></tr></table></figure><br>获取session：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let name = req.session[&quot;name&quot;]</span><br></pre></td></tr></table></figure><br>完整代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1、先安装：yarn add cookie-session     </span></span><br><span class="line"><span class="comment">//    如果报错，后面添加版本号，然后一直回车就好    yarn add cookie-session@2.0.0</span></span><br><span class="line"><span class="comment">// 2、设置到app中  </span></span><br><span class="line"><span class="keyword">const</span> cookieSession = <span class="built_in">require</span>(<span class="string">&#x27;cookie-session&#x27;</span>);</span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cookieSession</span>(&#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&quot;my_session&quot;</span>,  <span class="comment">//name为session名，自己起一个字符串就行</span></span><br><span class="line">    <span class="attr">keys</span>:[<span class="string">&quot;$^%%&amp;^&amp;%$RT%&amp;TYGSGSFRR554785432$#@$$#%$@#%&quot;</span>],  <span class="comment">// 内部加密需要的keys， keys为随机字符串</span></span><br><span class="line">    <span class="attr">maxAge</span>: <span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span>   <span class="comment">// 过期时间</span></span><br><span class="line">&#125;))</span><br><span class="line"> </span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/setSession&quot;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//设置session</span></span><br><span class="line">    req.<span class="property">session</span>[<span class="string">&quot;name&quot;</span>] = <span class="string">&quot;session_node&quot;</span></span><br><span class="line">    req.<span class="property">session</span>[<span class="string">&quot;age&quot;</span>] = <span class="number">11</span> </span><br><span class="line">    </span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&quot;设置了Session&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/getSession&quot;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//获取session信息</span></span><br><span class="line">    <span class="keyword">let</span> name = req.<span class="property">session</span>[<span class="string">&quot;name&quot;</span>]</span><br><span class="line">    <span class="keyword">let</span> age = req.<span class="property">session</span>[<span class="string">&quot;age&quot;</span>]</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">`获取Session, <span class="subst">$&#123;name&#125;</span>, <span class="subst">$&#123;age&#125;</span>`</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js(12.ajax)</title>
      <link href="/posts/42c57cbe.html"/>
      <url>/posts/42c57cbe.html</url>
      
        <content type="html"><![CDATA[<h3 id="ajax简介"><a href="#ajax简介" class="headerlink" title="ajax简介"></a>ajax简介</h3><p>AJAX即异步JavaScript与XML技术，是一套综合了多项技术的浏览器端网络开发技术。</p><p>简单来说，AJAX就是使用JavaScript代码发送网络请求并处理响应，有浏览器即客户端实现。</p><p>ajax技术能够在页面不刷新的情况下，和服务器端进行交互，可以仅向服务器发送并取回必须的数据，并在客户端采用js处理响应。交换的数据大大减少，服务器的响应更加迅速，把数据处理工作放到了客户端进行，减少了web服务器的负荷。</p><p>特点：异步请求，局部刷新<br>异步是指：发送数据后，不等待响应，直接发送下一个数据包</p><h3 id="AJAX书写步骤"><a href="#AJAX书写步骤" class="headerlink" title="AJAX书写步骤"></a>AJAX书写步骤</h3><p>1、创建AJAX对象<br>2、设置请求路径，请求方式<br>3、绑定监听状态改变的处理函数，在处理函数可获取响应数据<br>4、发送请求<br>但是注意，创建ajax对象会有浏览器兼容性问题：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">createAjax</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> ajax;</span><br><span class="line">    <span class="keyword">try</span> &#123;       <span class="comment">// 非 IE </span></span><br><span class="line">        ajax = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (e) &#123; <span class="comment">// IE</span></span><br><span class="line">        ajax = <span class="keyword">new</span> <span class="title class_">ActiveXObject</span>(<span class="string">&#x27;Microsoft.XMLHTTP&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ajax;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="响应处理与响应流程"><a href="#响应处理与响应流程" class="headerlink" title="响应处理与响应流程"></a>响应处理与响应流程</h3><p> 响应处理是服务端响应客户端的数据，根据状态码和ajax对象的状态信息进行不同的处理。</p><p>ajax对象有四个属性：<br>1、readyState:共5个状态，0-4，每个值代表不同的含义：<br>        0：初始化，ajax对象还没有完成初始化<br>        1：载入，ajax对象开始发送请求<br>        2：载入完成，ajax对象的请求发送完成<br>        3：解析，ajax对象开始读取服务器的响应<br>        4：完成，ajax对系读取服务器的响应结束<br>2、status表示响应的HTTP状态码：<br>        200：成功<br>        302：重定向<br>        404：找不到资源<br>        500：服务端错误<br>3、responseText获得字符串形式的响应数据<br>4、rersponseXML获取XML形式的响应数据</p><p>我们可以知道，在状态改变的处理函数一般针对readyState==4且status==200的情况才处理。</p><h3 id="利用AJAX发送get请求"><a href="#利用AJAX发送get请求" class="headerlink" title="利用AJAX发送get请求"></a>利用AJAX发送get请求</h3><p>前端js代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">let</span> obtn = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;obtn&quot;</span>);</span><br><span class="line">    <span class="keyword">let</span> odiv = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;odiv&quot;</span>);</span><br><span class="line"> </span><br><span class="line">    obtn.<span class="property">onclick</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//发送ajax请求</span></span><br><span class="line">        <span class="comment">// 1、创建 AJAX 对象；</span></span><br><span class="line">        <span class="keyword">let</span> ajax = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// 2、设置请求路径，请求方式等；ajax.open(请求方式，路径)</span></span><br><span class="line">        ajax.<span class="title function_">open</span>(<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;/get_data&#x27;</span>);</span><br><span class="line">        <span class="comment">// 3、绑定监听状态改变的处理函数，在处理函数可获取响应数据；</span></span><br><span class="line">        ajax.<span class="property">onreadystatechange</span> = <span class="function">()=&gt;</span>&#123;</span><br><span class="line">            <span class="comment">// 获取响应回来的数据</span></span><br><span class="line">            <span class="keyword">if</span>(ajax.<span class="property">readyState</span>===<span class="number">4</span>&amp;&amp; ajax.<span class="property">status</span>===<span class="number">200</span>)&#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(ajax.<span class="property">readyState</span>);</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(ajax.<span class="property">responseText</span>);</span><br><span class="line">                <span class="comment">// 请求到数据之后，就可以把数据更新到页面上</span></span><br><span class="line">                odiv.<span class="property">innerHTML</span> = ajax.<span class="property">responseText</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 4、发送请求。</span></span><br><span class="line">        ajax.<span class="title function_">send</span>()</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><br>服务端代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(requestUrl=== <span class="string">&quot;/get_data&quot;</span>)&#123;       <span class="comment">//或者写成：/get_data.*/.test(requestUrl)</span></span><br><span class="line">    response.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-type&quot;</span>,<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">    response.<span class="title function_">write</span>(<span class="string">&quot;这个数据是来自服务器的...&quot;</span>);</span><br><span class="line">    response.<span class="title function_">end</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>避免缓存：<br>为了保证我们读取的信息都是最新的，我们要禁止他的缓存功能，解决方法如下:</p><p>在 URL 后面加上一个随机数：Math.random()。<br>在 URL 后面加上时间搓：new Date().getTime()。<br>在使用 AJAX 发送请求前加上 ajax.setRequestHeader(‘Cache-Control’, ‘no-cache’)。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ajax.open( ..... );</span><br><span class="line">ajax.setRequestHeader(&#x27;Cache-Control&#x27;, &#x27;no-cache&#x27;);</span><br><span class="line">ajax.send();</span><br></pre></td></tr></table></figure></p><h3 id="利用AJAX发送post请求"><a href="#利用AJAX发送post请求" class="headerlink" title="利用AJAX发送post请求"></a>利用AJAX发送post请求</h3><p>前端代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">let</span> obtn = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;obtn&quot;</span>);</span><br><span class="line">    <span class="keyword">let</span> odiv = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;odiv&quot;</span>);</span><br><span class="line">    obtn.<span class="property">onclick</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> username = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;username&quot;</span>).<span class="property">value</span>;</span><br><span class="line">        <span class="keyword">let</span> password = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;password&quot;</span>).<span class="property">value</span>;</span><br><span class="line">        <span class="keyword">let</span> params = <span class="string">`username=<span class="subst">$&#123;username&#125;</span>&amp;password=<span class="subst">$&#123;password&#125;</span>`</span>;</span><br><span class="line">        <span class="comment">//发送ajax请求</span></span><br><span class="line">        <span class="comment">// 1、创建 AJAX 对象；</span></span><br><span class="line">        <span class="keyword">let</span> ajax = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// 2、设置请求路径，请求方式等；ajax.open(请求方式，路径)</span></span><br><span class="line">        ajax.<span class="title function_">open</span>(<span class="string">&#x27;POST&#x27;</span>, <span class="string">&#x27;/login_post&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        ajax.<span class="title function_">setRequestHeader</span>(<span class="string">&quot;enctype&quot;</span>,<span class="string">&quot;application/x-www-form-urlencoded&quot;</span>);</span><br><span class="line">        <span class="comment">// 3、绑定监听状态改变的处理函数，在处理函数可获取响应数据；</span></span><br><span class="line">        ajax.<span class="property">onreadystatechange</span> = <span class="function">()=&gt;</span>&#123;</span><br><span class="line">            <span class="comment">// 获取响应回来的数据</span></span><br><span class="line">            <span class="keyword">if</span>(ajax.<span class="property">readyState</span>===<span class="number">4</span>&amp;&amp; ajax.<span class="property">status</span>===<span class="number">200</span>)&#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(ajax.<span class="property">readyState</span>);</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(ajax.<span class="property">responseText</span>);</span><br><span class="line">                <span class="comment">// 请求到数据之后，就可以把数据更新到页面上</span></span><br><span class="line">                odiv.<span class="property">innerHTML</span> = ajax.<span class="property">responseText</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 4、发送请求。</span></span><br><span class="line">        ajax.<span class="title function_">send</span>(params)</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><br>服务端代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(requestUrl=== <span class="string">&quot;/login_post&quot;</span>)&#123;   <span class="comment">//来处理css文件的请求   如果这个路径包含.css</span></span><br><span class="line">    request.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>,<span class="function">(<span class="params">postData</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">let</span> uname = postData.<span class="title function_">toString</span>().<span class="title function_">split</span>(<span class="string">&quot;&amp;&quot;</span>)[<span class="number">0</span>].<span class="title function_">split</span>(<span class="string">&quot;=&quot;</span>)[<span class="number">1</span>];   <span class="comment">// 获取用户提交的用户名</span></span><br><span class="line">        <span class="keyword">let</span> pwd = postData.<span class="title function_">toString</span>().<span class="title function_">split</span>(<span class="string">&quot;&amp;&quot;</span>)[<span class="number">1</span>].<span class="title function_">split</span>(<span class="string">&quot;=&quot;</span>)[<span class="number">1</span>];    <span class="comment">// 获取用户提交的密码</span></span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span>(uname===username &amp;&amp; pwd===password)&#123;</span><br><span class="line">            response.<span class="title function_">end</span>(<span class="string">&quot;账号密码正确，登录成功&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            response.<span class="title function_">end</span>(<span class="string">&quot;账号或者密码错误，登录失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="ajax代码的抽取"><a href="#ajax代码的抽取" class="headerlink" title="ajax代码的抽取"></a>ajax代码的抽取</h3><p> 我们知道，我们为了后期项目的维护，我们要将项目尽量模块化，所以这个ajax代码如果不能复用，那么代码量将比较大，不利于后期维护该项目，我们将ajax抽取出来成为一个文件，变成一个函数，在需要发送请求时调用即可。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">ajax</span>(<span class="params">mehtod, url, param, success, time</span>)&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">var</span> ajax;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//处理ajax获取时候的兼容性问题</span></span><br><span class="line">    <span class="keyword">try</span> &#123;       <span class="comment">// 非 IE </span></span><br><span class="line">        ajax = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (e) &#123; <span class="comment">// IE</span></span><br><span class="line">        ajax = <span class="keyword">new</span> <span class="title class_">ActiveXObject</span>(<span class="string">&#x27;Microsoft.XMLHTTP&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>(method === <span class="string">&#x27;get&#x27;</span>)&#123;</span><br><span class="line">        param = <span class="built_in">encodeURI</span>(param);  <span class="comment">//针对get请求的查询参数出现中文的编码处理</span></span><br><span class="line">        url = url + <span class="string">&#x27;?&#x27;</span> + param;</span><br><span class="line">        param = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    ajax.<span class="title function_">open</span>(method, url);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>(method === <span class="string">&#x27;post&#x27;</span>)&#123;</span><br><span class="line">        ajax.<span class="title function_">setRequestHeader</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    ajax.<span class="property">onreadystatechange</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123; <span class="comment">// onload</span></span><br><span class="line">        <span class="keyword">if</span>(ajax.<span class="property">readyState</span> == <span class="number">4</span> &amp;&amp; ajax.<span class="property">status</span> == <span class="number">200</span>)&#123;</span><br><span class="line">            <span class="title function_">success</span>(ajax.<span class="property">responseText</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    ajax.<span class="title function_">send</span>(param);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">var</span> timer = <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        ajax.<span class="title function_">abort</span>();</span><br><span class="line">    &#125;, time);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="在jQuery里面使用ajax："><a href="#在jQuery里面使用ajax：" class="headerlink" title="在jQuery里面使用ajax："></a>在jQuery里面使用ajax：</h3><p>async：默认设置下，所有请求均为异步请求。</p><p>contentType：发送信息至服务器时内容编码类型，默认为 “application/x-www-form-urlencoded”。</p><p>data：发送到服务器的数据，可以为对象或者 Key=value 格式字符串，若为对象则会自动转换为请求字符串格式。</p><p>type：默认: “GET”，其它 HTTP 请求方法，如 PUT 和 DELETE 也可以使用，但取决浏览器支持。</p><p>url：发送请求的地址，默认当前页地址。</p><p>dataType：预期服务器返回的数据类型。如果不指定，jQuery 将自动根据 HTTP 包 MIME 信息来智能判断，比如 XML MIME类型就被识别为 XML，可以不填，可用值：”xml”、”html”、”script”、”json”、”jsonp”、”text”。</p><p>cache：默认为 true（dataType 为 script 和 jsonp 时默认为 false，设置为 false 将禁用缓存。</p><p>context：这个对象用于设置 AJAX 相关回调函数的上下文。也就是说，让回调函数内 this 的指向（若不指定为当前选项）。</p><p>beforeSend：发送请求前调用此函数，可用与如添加自定义 HTTP 头，检查请求参数是否合法。XMLHttpRequest 对象是唯一的参数。若在函数中返回 false 可以取消本次请求。</p><p>success：请求成功后的回调函数，参数：由服务器返回，并根据 dataType 参数进行处理后的数据；描述状态的字符串。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;url&#x27;</span>,</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;<span class="attr">username</span>:<span class="string">&#x27;zs&#x27;</span>, <span class="attr">password</span>:<span class="string">&#x27;12345&#x27;</span>&#125;,</span><br><span class="line">    <span class="attr">success</span>: <span class="keyword">function</span>(<span class="params">data</span>)&#123;</span><br><span class="line">        <span class="comment">// 请求成功业务逻辑</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><h3 id="使用jQuery发送GET请求"><a href="#使用jQuery发送GET请求" class="headerlink" title="使用jQuery发送GET请求"></a>使用jQuery发送GET请求</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$.<span class="title function_">get</span>(<span class="string">&#x27;/get_data&#x27;</span>, &#123;<span class="attr">name</span>:<span class="string">&#x27;nodejs&#x27;</span>, <span class="attr">age</span>:<span class="number">11</span>&#125;, <span class="keyword">function</span>(<span class="params">data</span>)&#123;</span><br><span class="line">     <span class="comment">//请求成功的业务逻辑(成功之后的操作)</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="使用jQuery发送POST请求"><a href="#使用jQuery发送POST请求" class="headerlink" title="使用jQuery发送POST请求"></a>使用jQuery发送POST请求</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$.<span class="title function_">post</span>(<span class="string">&#x27;url&#x27;</span>, &#123;<span class="attr">username</span>:$(<span class="string">&quot;#username&quot;</span>).<span class="title function_">val</span>(), <span class="attr">password</span>:$(<span class="string">&quot;#password&quot;</span>).<span class="title function_">val</span>()&#125;, <span class="keyword">function</span>(<span class="params">data</span>)&#123;</span><br><span class="line">    <span class="comment">// 请求成功业务逻辑</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js(11.对象关系映射ORM)</title>
      <link href="/posts/955a60a7.html"/>
      <url>/posts/955a60a7.html</url>
      
        <content type="html"><![CDATA[<h3 id="对象关系映射ORM-Object-Relation-Mapping-ORM"><a href="#对象关系映射ORM-Object-Relation-Mapping-ORM" class="headerlink" title="对象关系映射ORM(Object Relation Mapping ORM)"></a>对象关系映射ORM(Object Relation Mapping ORM)</h3><p>优点：<br>1、不需要写数据库sql代码来操作数据库<br>2、避免了不同数据库之间的操作差异<br>3、可以通过简单的配置来更换数据库<br>缺点：<br>相比于直接使用sql语句，这样做的话，性能有所缺失<br>    使用方法：<br>1、在网上找到orm文件，或者最后面我会把这一大段代码都粘贴出来<br>2、修改文件中的数据库连接设置</p><h4 id="查询数据："><a href="#查询数据：" class="headerlink" title="查询数据："></a>查询数据：</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">查询所有学生的所有信息</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> db = <span class="built_in">require</span>(<span class="string">&quot;./db/nodejs-orm/index.js&quot;</span>);</span><br><span class="line"> </span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>,<span class="function">(<span class="params">req, res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="title class_">Student</span> = db.<span class="title function_">model</span>(<span class="string">&quot;students&quot;</span>);</span><br><span class="line">    <span class="title class_">Student</span>.<span class="title function_">find</span>(<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">        res.<span class="title function_">send</span>(results);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">查询指定字段(find、数组参数)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">let</span> <span class="title class_">Student</span> = db.<span class="title function_">model</span>(<span class="string">&quot;students&quot;</span>);</span><br><span class="line"><span class="title class_">Student</span>.<span class="title function_">find</span>([<span class="string">&quot;name&quot;</span>, <span class="string">&quot;age&quot;</span>],<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">    res.<span class="title function_">send</span>(results);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">按条件查询(find、字符串参数)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">let</span> <span class="title class_">Student</span> = db.<span class="title function_">model</span>(<span class="string">&quot;students&quot;</span>);   </span><br><span class="line"><span class="title class_">Student</span>.<span class="title function_">find</span>(<span class="string">&quot;name=&#x27;小月月&#x27;&quot;</span>,<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;  <span class="comment">//这里的引号里面书写的是where后面的字符串</span></span><br><span class="line">    res.<span class="title function_">send</span>(results);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">分页查询(limit、对象参数 where\number\count)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">let</span> <span class="title class_">Student</span> = db.<span class="title function_">model</span>(<span class="string">&quot;students&quot;</span>);  </span><br><span class="line"><span class="comment">//where查询条件，为可选项，number第几页； count表示每页条数</span></span><br><span class="line"><span class="title class_">Student</span>.<span class="title function_">limit</span>(&#123;<span class="attr">where</span>:<span class="string">&quot;age&gt;18&quot;</span>,<span class="attr">number</span>:<span class="number">1</span>,<span class="attr">count</span>:<span class="number">5</span>&#125;,<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">    res.<span class="title function_">send</span>(results);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="增加数据"><a href="#增加数据" class="headerlink" title="增加数据"></a>增加数据</h4> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">增加单条记录， insert、对象参数、属性就是列名</span><br><span class="line"> </span><br><span class="line"><span class="keyword">let</span> <span class="title class_">Student</span> = db.<span class="title function_">model</span>(<span class="string">&quot;students&quot;</span>);</span><br><span class="line"><span class="title class_">Student</span>.<span class="title function_">insert</span>(&#123;<span class="attr">name</span>:<span class="string">&#x27;赵云&#x27;</span>,<span class="attr">age</span>:<span class="number">20</span>&#125;,<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line"> </span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&quot;增加成功&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">同时增加多个数据， insert、数组参数、元素为对象、属性就是列名</span><br><span class="line"> </span><br><span class="line"><span class="keyword">let</span> <span class="title class_">Student</span> = db.<span class="title function_">model</span>(<span class="string">&quot;students&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> arr = [&#123;<span class="attr">name</span>:<span class="string">&#x27;刘备&#x27;</span>&#125;, &#123;<span class="attr">name</span>:<span class="string">&quot;关羽&quot;</span>&#125;,&#123;<span class="attr">name</span>:<span class="string">&quot;张飞&quot;</span>&#125;];</span><br><span class="line"> </span><br><span class="line"><span class="title class_">Student</span>.<span class="title function_">insert</span>(arr,<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">res.<span class="title function_">send</span>(<span class="string">&quot;增加成功&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h4> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> 按条件删除记录 <span class="keyword">delete</span>、字符串参数</span><br><span class="line"> </span><br><span class="line"><span class="keyword">let</span> <span class="title class_">Student</span> = db.<span class="title function_">model</span>(<span class="string">&quot;students&quot;</span>);</span><br><span class="line"><span class="title class_">Student</span>.<span class="title function_">delete</span>(<span class="string">&#x27;age=0&#x27;</span>,<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">     res.<span class="title function_">send</span>(<span class="string">&quot;删除成功&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">清空表里面所有内容   <span class="keyword">delete</span>、无参数</span><br><span class="line"> </span><br><span class="line"><span class="keyword">let</span> <span class="title class_">Test1</span> = db.<span class="title function_">model</span>(<span class="string">&quot;test1&quot;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="title class_">Test1</span>.<span class="title function_">delete</span>(<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&quot;删除成功&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h4> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> 修改所有学生name为小明   update、对象参数、属性就是列名</span><br><span class="line"> </span><br><span class="line"><span class="keyword">let</span> <span class="title class_">Student</span> = db.<span class="title function_">model</span>(<span class="string">&quot;students&quot;</span>);</span><br><span class="line"><span class="title class_">Student</span>.<span class="title function_">update</span>(&#123;<span class="attr">name</span>:<span class="string">&#x27;小明&#x27;</span>&#125;,<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(results);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">修改id为<span class="number">1</span>的年龄为<span class="number">30</span>     update、字符串参数<span class="number">1</span>、对象参数<span class="number">2</span>、属性就是列名</span><br><span class="line"> </span><br><span class="line"><span class="keyword">let</span> <span class="title class_">Student</span> = db.<span class="title function_">model</span>(<span class="string">&quot;students&quot;</span>);</span><br><span class="line"><span class="title class_">Student</span>.<span class="title function_">update</span>(<span class="string">&#x27;id=1&#x27;</span>,&#123;<span class="attr">age</span>:<span class="number">30</span>&#125;,<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&quot;修改成功&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="自定义执行sql语句"><a href="#自定义执行sql语句" class="headerlink" title="自定义执行sql语句"></a>自定义执行sql语句</h4>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">let</span> <span class="title class_">Student</span> = db.<span class="title function_">model</span>(<span class="string">&quot;students&quot;</span>);</span><br><span class="line"><span class="title class_">Student</span>.<span class="title function_">sql</span>(<span class="string">&#x27;select * from students&#x27;</span>,<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&quot;执行成功&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="但是吧，如果要将获取数据库数据变为异步操作的话，我们就要用Promise和asyne-await了-这里要将语句封装成一个函数"><a href="#但是吧，如果要将获取数据库数据变为异步操作的话，我们就要用Promise和asyne-await了-这里要将语句封装成一个函数" class="headerlink" title="但是吧，如果要将获取数据库数据变为异步操作的话，我们就要用Promise和asyne+await了,这里要将语句封装成一个函数"></a>但是吧，如果要将获取数据库数据变为异步操作的话，我们就要用Promise和asyne+await了,这里要将语句封装成一个函数</h4>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> (<span class="keyword">async</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="title class_">Student</span> = db.<span class="title function_">model</span>(<span class="string">&quot;students&quot;</span>);  <span class="comment">//获取学生表模型</span></span><br><span class="line">    <span class="keyword">let</span> results </span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        results = <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">            <span class="title class_">Student</span>.<span class="title function_">find</span>(<span class="string">&#x27;id&gt;3&#x27;</span>,<span class="function">(<span class="params">err,data</span>)=&gt;</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(err)<span class="title function_">reject</span>(err);</span><br><span class="line">                <span class="title function_">resolve</span>(data);</span><br><span class="line">            &#125;);    </span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;<span class="keyword">catch</span>(err)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">        res.<span class="title function_">send</span>(&#123;<span class="attr">errmsg</span>:<span class="string">&quot;数据库查询出错&quot;</span>&#125;)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">send</span>(results);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h4 id="为了调用方便，我们可以将这些异步代码全部封装：在已有的db文件夹中新建handleDB-js文件，代码如下："><a href="#为了调用方便，我们可以将这些异步代码全部封装：在已有的db文件夹中新建handleDB-js文件，代码如下：" class="headerlink" title="为了调用方便，我们可以将这些异步代码全部封装：在已有的db文件夹中新建handleDB.js文件，代码如下："></a>为了调用方便，我们可以将这些异步代码全部封装：在已有的db文件夹中新建handleDB.js文件，代码如下：</h4> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> db = <span class="built_in">require</span>(<span class="string">&quot;./nodejs-orm&quot;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleDB</span>(<span class="params">res,tableName,methodName,errorMsg, n1, n2</span>)&#123;</span><br><span class="line">    <span class="comment">//数据库操作</span></span><br><span class="line">    <span class="keyword">let</span> <span class="title class_">Model</span> = db.<span class="title function_">model</span>(tableName);  <span class="comment">// 表映射为模型, 参数是要操作的这个表的表名</span></span><br><span class="line">    <span class="keyword">let</span> results;  <span class="comment">//results就收查询到的数据</span></span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        results = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>)=&gt;</span>&#123;</span><br><span class="line">            <span class="comment">// Model.find(&quot;id&gt;=15&quot;,(err,data)=&gt;&#123;   //直接调用不封装</span></span><br><span class="line">            <span class="keyword">if</span>(!n1)&#123;</span><br><span class="line">                <span class="title class_">Model</span>[methodName](<span class="function">(<span class="params">err,data</span>)=&gt;</span>&#123;    <span class="comment">//封装的时候使用这种格式 </span></span><br><span class="line">                    <span class="keyword">if</span>(err)<span class="title function_">reject</span>(err);   <span class="comment">// 失败的时候调用reject()</span></span><br><span class="line">                    <span class="title function_">resolve</span>(data);    <span class="comment">//成功的时候调用resolve() </span></span><br><span class="line">                &#125;);</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//能够给执行到这里说明n1已经传进来了！</span></span><br><span class="line">            <span class="keyword">if</span>(!n2)&#123;</span><br><span class="line">                <span class="title class_">Model</span>[methodName](n1,<span class="function">(<span class="params">err,data</span>)=&gt;</span>&#123;    <span class="comment">//封装的时候使用这种格式 </span></span><br><span class="line">                    <span class="keyword">if</span>(err)<span class="title function_">reject</span>(err);   <span class="comment">// 失败的时候调用reject()</span></span><br><span class="line">                    <span class="title function_">resolve</span>(data);    <span class="comment">//成功的时候调用resolve() </span></span><br><span class="line">                &#125;);</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//能够给执行到这里说明n1和n2已经传进来了！</span></span><br><span class="line">            <span class="title class_">Model</span>[methodName](n1,n2,<span class="function">(<span class="params">err,data</span>)=&gt;</span>&#123;    <span class="comment">//封装的时候使用这种格式 </span></span><br><span class="line">                <span class="keyword">if</span>(err)<span class="title function_">reject</span>(err);   <span class="comment">// 失败的时候调用reject()</span></span><br><span class="line">                <span class="title function_">resolve</span>(data);    <span class="comment">//成功的时候调用resolve() </span></span><br><span class="line">            &#125;);</span><br><span class="line">                </span><br><span class="line">        &#125;) </span><br><span class="line">    &#125;<span class="keyword">catch</span>(err)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(err); <span class="comment">// 给后台看到的</span></span><br><span class="line">        res.<span class="title function_">send</span>(&#123;<span class="attr">errMsg</span>:errorMsg&#125;); <span class="comment">//给前端送过去的</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> results</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = handleDB</span><br></pre></td></tr></table></figure><h4 id="那么在项目中只要用到数据库操作就会很简单了"><a href="#那么在项目中只要用到数据库操作就会很简单了" class="headerlink" title="那么在项目中只要用到数据库操作就会很简单了"></a>那么在项目中只要用到数据库操作就会很简单了</h4>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> db = <span class="built_in">require</span>(<span class="string">&quot;./db/handleDB&quot;</span>);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">(<span class="keyword">async</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="comment">//获取参数， 判空</span></span><br><span class="line"> </span><br><span class="line">        <span class="comment">//数据库操作</span></span><br><span class="line">        <span class="comment">// let results = await Promise对象</span></span><br><span class="line">        <span class="keyword">let</span> results = <span class="keyword">await</span> <span class="title function_">handleDB</span>(res,<span class="string">&quot;students&quot;</span>, <span class="string">&quot;find&quot;</span>, <span class="string">&quot;students数据库插入数据出错！&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//查询到的结果返回页面中去</span></span><br><span class="line">        res.<span class="title function_">send</span>(results);</span><br><span class="line"> </span><br><span class="line">    &#125;)();</span><br><span class="line">    </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="附录：ORM的js文件"><a href="#附录：ORM的js文件" class="headerlink" title="附录：ORM的js文件"></a>附录：ORM的js文件</h3>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mysql = <span class="built_in">require</span>(<span class="string">&#x27;mysql&#x27;</span>);</span><br><span class="line"><span class="comment">// 数据库连接设置</span></span><br><span class="line"><span class="keyword">let</span> orm_config = &#123;</span><br><span class="line">    <span class="attr">host</span>: <span class="string">&#x27;localhost&#x27;</span>,<span class="comment">//数据库地址</span></span><br><span class="line">    <span class="attr">port</span>:<span class="string">&#x27;3306&#x27;</span>,</span><br><span class="line">    <span class="attr">user</span>: <span class="string">&#x27;root&#x27;</span>,<span class="comment">//用户名，没有可不填</span></span><br><span class="line">    <span class="attr">password</span>: <span class="string">&#x27;&#x27;</span>,<span class="comment">//密码，没有可不填</span></span><br><span class="line">    <span class="attr">database</span>: <span class="string">&#x27;news&#x27;</span><span class="comment">//数据库名称</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">let</span> options = &#123;&#125;;</span><br><span class="line"><span class="keyword">let</span> tableSQL = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> isConnect = <span class="literal">false</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Model</span>(<span class="params">name, option</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">option</span> = option;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@description</span>: 查询数据</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> &#123;<span class="type"></span>&#125; options：可选参数</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> &#123;<span class="type">Function</span>&#125; callback :（req,results）=&gt;&#123;&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title class_">Model</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">find</span> = <span class="keyword">function</span> (<span class="params">options, callback</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!isConnect) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(options.<span class="property">constructor</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">connect</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">            isConnect = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">var</span> str = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span> (!callback) &#123;</span><br><span class="line">                str = <span class="string">`select * from <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>`</span>;</span><br><span class="line">                callback = options;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (options.<span class="property">constructor</span> == <span class="title class_">Array</span>) &#123;</span><br><span class="line">                str = <span class="string">`select <span class="subst">$&#123;options.join()&#125;</span> from <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>`</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(options.<span class="property">constructor</span> == <span class="title class_">Object</span>)&#123;</span><br><span class="line">                str = <span class="string">`select <span class="subst">$&#123;options.arr.join()&#125;</span> from <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> where <span class="subst">$&#123;options.where&#125;</span>`</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                str = <span class="string">`select * from <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> where <span class="subst">$&#123;options&#125;</span>`</span>;</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="comment">//console.log(str);</span></span><br><span class="line">            connection.<span class="title function_">query</span>(str, <span class="function">(<span class="params">error, results, fields</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="title function_">callback</span>(error, results, fields);</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> str = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (!callback) &#123;</span><br><span class="line">            str = <span class="string">`select * from <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>`</span>;</span><br><span class="line">            callback = options;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (options.<span class="property">constructor</span> == <span class="title class_">Array</span>) &#123;</span><br><span class="line">            str = <span class="string">`select <span class="subst">$&#123;options.join()&#125;</span> from <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>`</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            str = <span class="string">`select * from <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> where <span class="subst">$&#123;options&#125;</span>`</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">//console.log(str);</span></span><br><span class="line">        connection.<span class="title function_">query</span>(str, <span class="function">(<span class="params">error, results, fields</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="title function_">callback</span>(error, results, fields);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@description</span>: 分页查询</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> &#123;<span class="type">Object</span>&#125; options :   &#123; where:查询条件, number: 当前页数 , count : 每页数量 &#125;</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span>: </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title class_">Model</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">limit</span> = <span class="keyword">function</span> (<span class="params">options, callback</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> str = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (!options.<span class="property">where</span>) &#123;</span><br><span class="line">        str = <span class="string">`select * from <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> limit <span class="subst">$&#123;(options.number - <span class="number">1</span>) * options.count&#125;</span>,<span class="subst">$&#123;options.count&#125;</span>`</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        str = str = <span class="string">`select * from <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> where <span class="subst">$&#123;options.where&#125;</span> limit <span class="subst">$&#123;(options.number - <span class="number">1</span>) * options.count&#125;</span>,<span class="subst">$&#123;options.count&#125;</span>`</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(str);</span><br><span class="line">    connection.<span class="title function_">query</span>(str, <span class="function">(<span class="params">error, results, fields</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">callback</span>(error, results, fields);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@description</span>: 插入数据</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> &#123;<span class="type">Object</span>&#125; obj:对象或者数组</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> &#123;<span class="type">Function</span>&#125; callback :（req,results）=&gt;&#123;&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title class_">Model</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">insert</span> = <span class="keyword">function</span> (<span class="params">obj, callback</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!isConnect) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">connect</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                <span class="keyword">throw</span> err;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                connection.<span class="title function_">query</span>(tableSQL, <span class="function">(<span class="params">error, results, fields</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="title class_">Array</span>.<span class="title function_">isArray</span>(obj)) &#123;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; obj.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                            <span class="variable language_">this</span>.<span class="title function_">insertObj</span>(obj[i], callback)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="variable language_">this</span>.<span class="title function_">insertObj</span>(obj, callback)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line"> </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title class_">Array</span>.<span class="title function_">isArray</span>(obj)) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; obj.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">insertObj</span>(obj[i], callback)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">insertObj</span>(obj, callback)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="title class_">Model</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">insertObj</span> = <span class="keyword">function</span> (<span class="params">obj, callback</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> keys = [];</span><br><span class="line">    <span class="keyword">let</span> values = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">        keys.<span class="title function_">push</span>(key);</span><br><span class="line">        values += <span class="string">`&quot;<span class="subst">$&#123;obj[key]&#125;</span>&quot;,`</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    values = values.<span class="title function_">replace</span>(<span class="regexp">/,$/</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    <span class="keyword">let</span> str = <span class="string">`INSERT INTO <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> (<span class="subst">$&#123;keys.join()&#125;</span>) VALUES (<span class="subst">$&#123;values&#125;</span>)`</span>;</span><br><span class="line">    connection.<span class="title function_">query</span>(str, <span class="function">(<span class="params">error, results, fields</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">callback</span>(error, results);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@description</span>: 更新数据</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> &#123;<span class="type">Object</span>&#125; option：可选参数 更新条件</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> &#123;<span class="type">Object</span>&#125; obj： 修改后的数据 </span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> &#123;<span class="type">Function</span>&#125; callback :（req,results）=&gt;&#123;&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title class_">Model</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">update</span> = <span class="keyword">function</span> (<span class="params">option, obj, callback</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> str = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">arguments</span>.<span class="property">length</span> == <span class="number">2</span>) &#123;</span><br><span class="line">        callback = obj;</span><br><span class="line">        obj = option;</span><br><span class="line">        str = <span class="string">`UPDATE <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> SET `</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">            str += <span class="string">`<span class="subst">$&#123;key&#125;</span>=&#x27;<span class="subst">$&#123;obj[key]&#125;</span>&#x27;, `</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        str = str.<span class="title function_">replace</span>(<span class="regexp">/(, )$/</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        str = <span class="string">`UPDATE <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> SET `</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">            str += <span class="string">`<span class="subst">$&#123;key&#125;</span>=&#x27;<span class="subst">$&#123;obj[key]&#125;</span>&#x27;, `</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        str = str.<span class="title function_">replace</span>(<span class="regexp">/(, )$/</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        str += <span class="string">` where <span class="subst">$&#123;option&#125;</span>`</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"> </span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(str);</span><br><span class="line">    connection.<span class="title function_">query</span>(str, <span class="function">(<span class="params">error, results, fields</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">callback</span>(error, results, fields);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>;</span><br><span class="line"> </span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@description</span>: 删除数据</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> &#123;<span class="type">Object</span>&#125; option：可选参数 删除条件</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> &#123;<span class="type">Function</span>&#125; callback :（req,results）=&gt;&#123;&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title class_">Model</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">delete</span> = <span class="keyword">function</span> (<span class="params">option, callback</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> str = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (!callback) &#123;</span><br><span class="line">        str = <span class="string">`delete from <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>`</span>;</span><br><span class="line">        callback = option;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        str = <span class="string">`delete from <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> where <span class="subst">$&#123;option&#125;</span>`</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(str);</span><br><span class="line">    connection.<span class="title function_">query</span>(str, <span class="function">(<span class="params">error, results, fields</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">callback</span>(error, results, fields);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@description</span>: 执行sql语句</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> &#123;<span class="type">String</span>&#125; str : sql语句</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> &#123;<span class="type">Function</span>&#125; callback :（req,results）=&gt;&#123;&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title class_">Model</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sql</span> = <span class="keyword">function</span> (<span class="params">str, callback</span>) &#123;</span><br><span class="line">    connection.<span class="title function_">query</span>(str, <span class="function">(<span class="params">error, results, fields</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">callback</span>(error, results, fields);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@description</span>: 删除model表格 （慎用！）</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> &#123;<span class="type">type</span>&#125; </span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span>: </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title class_">Model</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">drop</span> = <span class="keyword">function</span> (<span class="params">callback</span>) &#123;</span><br><span class="line">    connection.<span class="title function_">query</span>(<span class="string">`DROP TABLE <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>`</span>, <span class="function">(<span class="params">error, results, fields</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">callback</span>(error, results, fields);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//连接检测</span></span><br><span class="line"><span class="title class_">Model</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">connect</span> = <span class="keyword">function</span> (<span class="params">callback</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> p1 = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        connection.<span class="title function_">connect</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                <span class="comment">//console.log(err.stack);</span></span><br><span class="line">                <span class="comment">//console.log(err);//42000 数据库不存在  28000账号错误</span></span><br><span class="line">                <span class="comment">//console.log(err.sqlState);//42000 数据库不存在  28000账号错误</span></span><br><span class="line">                <span class="title function_">reject</span>(err);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="title function_">resolve</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"> </span><br><span class="line">    p1.<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">callback</span>(<span class="literal">null</span>);</span><br><span class="line">    &#125;, <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err.<span class="property">sqlState</span> == <span class="number">42000</span>) &#123;</span><br><span class="line">            <span class="title function_">createDatabase</span>(callback);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (err.<span class="property">sqlState</span> == <span class="number">28000</span>) &#123;</span><br><span class="line">            <span class="title function_">callback</span>(<span class="string">&#x27;数据库账号或密码错误&#x27;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title function_">callback</span>(err);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//创建数据库</span></span><br><span class="line"><span class="keyword">let</span> createDatabase = <span class="keyword">function</span> (<span class="params">callback</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> p2 = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        connection = mysql.<span class="title function_">createConnection</span>(&#123;</span><br><span class="line">            <span class="attr">host</span>: options.<span class="property">host</span>,<span class="comment">//数据库地址</span></span><br><span class="line">            <span class="attr">port</span>: options.<span class="property">port</span>,<span class="comment">//端口号</span></span><br><span class="line">            <span class="attr">user</span>: options.<span class="property">user</span>,<span class="comment">//用户名，没有可不填</span></span><br><span class="line">            <span class="attr">password</span>: options.<span class="property">password</span>,<span class="comment">//密码，没有可不填</span></span><br><span class="line">        &#125;);</span><br><span class="line">        connection.<span class="title function_">connect</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">//if (err) throw error;</span></span><br><span class="line">            <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                <span class="title function_">reject</span>(err);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="title function_">resolve</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">let</span> p3 = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        connection.<span class="title function_">query</span>(<span class="string">`CREATE DATABASE <span class="subst">$&#123;options.database&#125;</span>`</span>, <span class="function">(<span class="params">err, results, fields</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">//if (error) throw error;</span></span><br><span class="line">            <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                <span class="title function_">reject</span>(err);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="title function_">resolve</span>();</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">let</span> p4 = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        connection.<span class="title function_">query</span>(<span class="string">`use <span class="subst">$&#123;options.database&#125;</span>`</span>, <span class="function">(<span class="params">err, results, fields</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                <span class="title function_">reject</span>(err);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="title function_">resolve</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">let</span> pAll = <span class="title class_">Promise</span>.<span class="title function_">all</span>([p2, p3, p4]);</span><br><span class="line"> </span><br><span class="line">    pAll.<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">callback</span>(<span class="literal">null</span>);</span><br><span class="line">    &#125;).<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">callback</span>(err);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">let</span> orm = &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@description</span>:连接数据库</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> &#123;<span class="type">String</span>&#125; host: 主机名 默认localhost</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> &#123;<span class="type">Number</span>&#125; port: 端口号 默认3306</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> &#123;<span class="type">String</span>&#125; user: 用户名 </span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> &#123;<span class="type">String</span>&#125; password: 密码 </span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> &#123;<span class="type">String</span>&#125; database: 数据库名称 默认og</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span>: </span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="attr">connect</span>: <span class="keyword">function</span> (<span class="params">&#123; host = <span class="string">&#x27;localhost&#x27;</span>, port = <span class="number">3306</span>, user = <span class="string">&#x27;&#x27;</span>, password = <span class="string">&#x27;&#x27;</span>, database = <span class="string">&#x27;og&#x27;</span> &#125;</span>) &#123;</span><br><span class="line">        databaseName = database;<span class="comment">//全局存储当前数据库名称</span></span><br><span class="line"> </span><br><span class="line">        options = &#123;</span><br><span class="line">            host,<span class="comment">//数据库地址</span></span><br><span class="line">            port,<span class="comment">//端口号</span></span><br><span class="line">            user,<span class="comment">//用户名，没有可不填</span></span><br><span class="line">            password,<span class="comment">//密码，没有可不填</span></span><br><span class="line">            database<span class="comment">//数据库名称</span></span><br><span class="line">        &#125;;</span><br><span class="line">        connection = mysql.<span class="title function_">createConnection</span>(options);</span><br><span class="line"> </span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@description</span>:创建model (表格模型对象)</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> &#123;<span class="type">String</span>&#125; name:表格名称</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> &#123;<span class="type">Object</span>&#125; options:表格数据结构</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span>: Model对象：负责数据库增删改查</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="attr">model</span>: <span class="keyword">function</span> (<span class="params">name, options</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> str = <span class="string">&#x27;id int primary key auto_increment, &#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> options) &#123;</span><br><span class="line">            <span class="keyword">if</span> (options[key] == <span class="title class_">Number</span>) &#123;</span><br><span class="line">                str += <span class="string">`<span class="subst">$&#123;key&#125;</span> numeric,`</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (options[key] == <span class="title class_">Date</span>) &#123;</span><br><span class="line">                str += <span class="string">`<span class="subst">$&#123;key&#125;</span> timestamp,`</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                str += <span class="string">`<span class="subst">$&#123;key&#125;</span> varchar(255),`</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        str = str.<span class="title function_">replace</span>(<span class="regexp">/,$/</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="comment">//console.log(`CREATE TABLE $&#123;name&#125; ($&#123;str&#125;)`);</span></span><br><span class="line">        <span class="comment">//console.log(str);</span></span><br><span class="line">        tableSQL = <span class="string">`CREATE TABLE <span class="subst">$&#123;name&#125;</span> (<span class="subst">$&#123;str&#125;</span>)`</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Model</span>(name, options);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line">orm.<span class="title function_">connect</span>(orm_config);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = orm;</span><br></pre></td></tr></table></figure><p>把这个文件放到db文件夹下就可以正常使用了！！！</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js(10.服务器连接到数据库)</title>
      <link href="/posts/a2743963.html"/>
      <url>/posts/a2743963.html</url>
      
        <content type="html"><![CDATA[<h4 id="服务器连接到数据库"><a href="#服务器连接到数据库" class="headerlink" title="服务器连接到数据库"></a>服务器连接到数据库</h4><p>首先cd到express目录下安装MySQL<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add mysql</span><br></pre></td></tr></table></figure><br>链接数据库db.js<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//首先安装mysql</span></span><br><span class="line"><span class="comment">//引入</span></span><br><span class="line"><span class="keyword">const</span> mysql=<span class="built_in">require</span>(<span class="string">&#x27;mysql&#x27;</span>);</span><br><span class="line"><span class="comment">//数据库链接的基本配置</span></span><br><span class="line"><span class="keyword">var</span> poll=mysql.<span class="title function_">createPool</span>(&#123;</span><br><span class="line">    <span class="attr">host</span>:<span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">    <span class="attr">user</span>:<span class="string">&#x27;unspman&#x27;</span>,</span><br><span class="line">    <span class="attr">password</span>:<span class="string">&#x27;123456&#x27;</span>,</span><br><span class="line">    <span class="attr">database</span>:<span class="string">&#x27;test&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//对数据库进行增删改查</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">query</span>(<span class="params">sql,callback</span>)&#123;</span><br><span class="line">    <span class="comment">//getConnection链接，pool链接池</span></span><br><span class="line">    poll.<span class="title function_">getConnection</span>(<span class="keyword">function</span>(<span class="params">err,connection</span>)&#123;</span><br><span class="line">        connection.<span class="title function_">query</span>(sql,<span class="keyword">function</span> (<span class="params">err,rows</span>)&#123;</span><br><span class="line">            <span class="comment">//错误，还有一个是记录，也就是查询到的记录</span></span><br><span class="line">            <span class="title function_">callback</span>(err,rows)</span><br><span class="line">            connection.<span class="title function_">release</span>()</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">exports</span>.<span class="property">query</span>=query;</span><br></pre></td></tr></table></figure><br>后台链接数据库:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express=<span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> db=<span class="built_in">require</span>(<span class="string">&#x27;./db/db&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app=<span class="title function_">express</span>();</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/get_data&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// console.log(db.query);</span></span><br><span class="line">    db.<span class="title function_">query</span>(<span class="string">&#x27;select * from student;&#x27;</span>,<span class="function">(<span class="params">err,data</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(err)&#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">        res.<span class="title function_">send</span>(data);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3001</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;express启动成功&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">/*[</span></span><br><span class="line"><span class="comment">  RowDataPacket &#123; name: &#x27;李华&#x27;, age: 25 &#125;,</span></span><br><span class="line"><span class="comment">  RowDataPacket &#123; name: &#x27;菜鸡&#x27;, age: 8 &#125;,</span></span><br><span class="line"><span class="comment">  RowDataPacket &#123; name: &#x27;张飞&#x27;, age: 90 &#125;</span></span><br><span class="line"><span class="comment">]*/</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js(9.MySQL使用)</title>
      <link href="/posts/7e379131.html"/>
      <url>/posts/7e379131.html</url>
      
        <content type="html"><![CDATA[<h3 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h3><p>1、在cmd小黑窗中启动mysql服务：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net start mysql</span><br></pre></td></tr></table></figure><br>登录数据库<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p </span><br></pre></td></tr></table></figure><br>这里直接回车就行<br>登录完了就可以在cmd里面直接使用sql语句操作数据库了。</p><h3 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br></pre></td><td class="code"><pre><span class="line">     链接数据库</span><br><span class="line">    mysql -uroot -p   回车</span><br><span class="line"> </span><br><span class="line">    </span><br><span class="line">    -- 退出数据库</span><br><span class="line">    --quit/exit </span><br><span class="line"></span><br><span class="line">    -- sql语句最后需要有分号;结尾</span><br><span class="line">    -- 显示数据库版本 version</span><br><span class="line">    -- select version();</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    -- 查看当前使用的数据库</span><br><span class="line">    -- select database();</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    -- 查看所有数据库</span><br><span class="line">    show databases;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    -- 创建数据库</span><br><span class="line">    -- create database 数据库名 charset=utf8;</span><br><span class="line">    create database qd22 charset=utf8;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    -- 查看创建数据库的语句</span><br><span class="line">    -- show create database 数据库名</span><br><span class="line">    show create database qd22;</span><br><span class="line">     </span><br><span class="line"></span><br><span class="line">    -- 使用数据库</span><br><span class="line">    -- use 数据库的名字</span><br><span class="line">    use qd22;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    -- 删除数据库</span><br><span class="line">    -- drop database 数据库名;</span><br><span class="line">    drop database test;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--02 数据表的操作</span><br><span class="line"></span><br><span class="line">    -- 查看当前数据库中所有表</span><br><span class="line">    show tables;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    -- 创建表</span><br><span class="line">    -- int unsigned 无符号整形</span><br><span class="line">    -- auto_increment 表示自动增长跟主键在一起</span><br><span class="line">    -- not null 表示不能为空</span><br><span class="line">    -- primary key 表示主键</span><br><span class="line">    -- default 默认值</span><br><span class="line">    -- create table 数据表名字 (字段 类型 约束[, 字段 类型 约束]);     可选</span><br><span class="line">    create table test(name varchar(30) not null, age int unsigned);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    -- 查看表结构(查看表的字段信息)</span><br><span class="line">    -- desc 数据表的名字;</span><br><span class="line">    desc test;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">   </span><br><span class="line">    -- 创建 classes 表(有id、name两个字段)</span><br><span class="line">    create table classes(id int unsigned primary key auto_increment, name varchar(30) not null);</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    -- 创建 students 表(有id、name、age、high (decimal)、gender (enum)、cls_id这些字段)</span><br><span class="line">    create table students(</span><br><span class="line">        id int unsigned primary key auto_increment, </span><br><span class="line">        name varchar(30) not null, </span><br><span class="line">        age int unsigned, </span><br><span class="line">        high decimal(3, 2), </span><br><span class="line">        gender enum(&quot;男&quot;, &quot;女&quot;, &quot;保密&quot;, &quot;中性&quot;) default &quot;保密&quot;, </span><br><span class="line">        cls_id int unsigned</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 查看表的创建语句</span><br><span class="line">    -- show create table 表名字;</span><br><span class="line">    show create table students;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 修改表-添加字段 mascot (吉祥物)</span><br><span class="line">    -- alter table 表名 add 列名 类型;   给classes表添加mascot字段</span><br><span class="line">    alter table classes add mascot varchar(50);</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">    -- 修改表-修改字段：不重命名版</span><br><span class="line">    -- alter table 表名 modify 列名 类型及约束;</span><br><span class="line">    alter table classes modify mascot varchar(100);</span><br><span class="line">   </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 修改表-修改字段：重命名版</span><br><span class="line">    -- alter table 表名 change 原名 新名 类型及约束;</span><br><span class="line">    alter table classes change mascot jxw int unsigned;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 修改表-删除字段</span><br><span class="line">    -- alter table 表名 drop 列名;</span><br><span class="line">    alter table classes drop jxw;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 删除表</span><br><span class="line">    -- drop table 表名;</span><br><span class="line">    -- drop database 数据库;</span><br><span class="line">    drop table test;</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">--03 增删改查(curd)</span><br><span class="line"></span><br><span class="line">    -- 增加</span><br><span class="line">        -- 全列插入</span><br><span class="line">        -- insert into 表名(字段1,字段2) values(值1，值2);</span><br><span class="line">        -- 主键字段 可以用 0  null   default 来占位</span><br><span class="line">        -- 向classes表中插入 一个班级</span><br><span class="line"></span><br><span class="line">        insert into classes(id, name) values(1, &quot;qd22&quot;);</span><br><span class="line">        insert into classes(id, name) values(3, &quot;qd23&quot;);</span><br><span class="line">        insert into classes(id, name) values(0, &quot;qd24&quot;);</span><br><span class="line">        insert into classes(name) values(&quot;qd25&quot;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        -- 向students表插入 一个学生信息</span><br><span class="line">        -- 全部插入</span><br><span class="line">        -- insert into 表名 values(值1,值2,值3...)</span><br><span class="line">        insert into students values(1, &quot;张三&quot;, 18, 1.83, &#x27;男&#x27;, 1);</span><br><span class="line"></span><br><span class="line">        -- 部分插入</span><br><span class="line">        -- insert into 表名(列1,...) values(值1,...)</span><br><span class="line">        insert into students(name) values(&quot;李四&quot;);</span><br><span class="line">        insert into students(name,age) values(&quot;王五&quot;, 20);</span><br><span class="line"></span><br><span class="line">        -- 多行插入</span><br><span class="line">        -- insert into 表名(列1) values(值), (值);</span><br><span class="line">        insert into students(name) values(&quot;赵六&quot;),(&quot;李七&quot;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 修改</span><br><span class="line">    -- update 表名 set 列1=值1,列2=值2... where 条件;</span><br><span class="line">        -- 全部修改</span><br><span class="line">        update students set age = 16;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        -- 按条件修改</span><br><span class="line">        update students set age = 20 where id=3;</span><br><span class="line">        update students set age = 18 where name=&quot;赵六&quot;;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        -- 按条件修改多个值</span><br><span class="line">        -- update students set gender =&quot;&quot;,age = &quot;&quot; where name=&quot;xxx&quot;;</span><br><span class="line">        update students set age = 15, high=1.80 where id=2;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    -- 查询基本使用</span><br><span class="line">        -- 查询所有列</span><br><span class="line">        -- select * from 表名;</span><br><span class="line">        -- 查询students表中的所有数据信息</span><br><span class="line">        select * from students;</span><br><span class="line"></span><br><span class="line">        ---定条件查询  </span><br><span class="line">        --查询id为1的学生所有信息  </span><br><span class="line">        select * from students where id = 1;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        -- 查询指定列</span><br><span class="line">        -- select 列1,列2,... from 表名;</span><br><span class="line">        select name, age from students;</span><br><span class="line">        select name, age from students where id = 1;</span><br><span class="line">        </span><br><span class="line">    </span><br><span class="line">        -- 可以使用as为列或表指定别名</span><br><span class="line">        -- select 字段[as 别名] , 字段[as 别名] from 数据表;</span><br><span class="line">        select name as &quot;姓名&quot;, age as &quot;年龄&quot; from students;</span><br><span class="line">        select name as n, age as a from students;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        -- 字段的顺序</span><br><span class="line">        -- select age, name from students;</span><br><span class="line">        select age, name from students;</span><br><span class="line"></span><br><span class="line">    -- 删除</span><br><span class="line">        -- 物理删除</span><br><span class="line">        -- delete from 表名 where 条件</span><br><span class="line">        delete from students where id = 4;</span><br><span class="line">        </span><br><span class="line">      </span><br><span class="line"></span><br><span class="line">        -- 逻辑删除</span><br><span class="line">        -- 用一个字段来表示 这条信息是否已经不能再使用了</span><br><span class="line">        -- 给students表添加一个 is_delete 字段 bit 类型</span><br><span class="line">        --alter table 表名 add 字段 类型 default 默认值;</span><br><span class="line">        alter table students add is_delete bit default 0;</span><br><span class="line">        --update 表名 set is_delete=1 where id=;</span><br><span class="line">        update students set is_delete=1 where id=1;</span><br></pre></td></tr></table></figure><h3 id="数据库基础"><a href="#数据库基础" class="headerlink" title="数据库基础"></a>数据库基础</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br></pre></td><td class="code"><pre><span class="line">--数据库操作前的准备</span><br><span class="line"></span><br><span class="line">-- 查询练习</span><br><span class="line">    -- 查询所有字段</span><br><span class="line">    -- select * from 表名;</span><br><span class="line">     select * from students;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 查询指定字段</span><br><span class="line">    -- select 列1,列2,... from 表名;</span><br><span class="line">    select name, age from students;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    -- 使用 as 给字段起别名</span><br><span class="line">    -- select 字段 as 名字.... from 表名;</span><br><span class="line">    select name as n, age as a from students;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- select 表名.字段 .... from 表名;</span><br><span class="line">    select students.name,students.age from students;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    -- 可以通过 as 给表起别名</span><br><span class="line">    -- select 别名.字段 .... from 表名 as 别名;</span><br><span class="line">    select s.name, s.age from students as s;</span><br><span class="line"></span><br><span class="line">    -- 消除重复行(查性别)</span><br><span class="line">    -- distinct 字段 </span><br><span class="line">    select gender from students;</span><br><span class="line">    select distinct gender from students;   --  使用distinct关键字的做法清除重复的记录</span><br><span class="line">    select gender from students group by gender;   --  使用分组的做法清除重复的记录</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">-- 条件查询</span><br><span class="line">    -- 比较运算符</span><br><span class="line">        -- select .... from 表名 where .....</span><br><span class="line">        -- &gt;</span><br><span class="line">        -- 查询年纪大于18岁的学生信息</span><br><span class="line">        select * from students where age &gt; 18;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        -- &lt;</span><br><span class="line">        -- 查询年纪小于18岁的学生信息</span><br><span class="line">        select * from students where age &lt; 18;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        -- &gt;=</span><br><span class="line">        -- &lt;=</span><br><span class="line">        -- 查询小于或者等于18岁的学生信息</span><br><span class="line">        select * from students where age &lt;= 18;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        -- =</span><br><span class="line">        -- 查询年龄为18岁的所有学生信息</span><br><span class="line">        select * from students where age = 18;</span><br><span class="line"></span><br><span class="line">        -- != 或者 &lt;&gt;</span><br><span class="line">        -- 查询年龄不为18岁的所有学生信息</span><br><span class="line">        select * from students where age != 18;</span><br><span class="line">        select * from students where age &lt;&gt; 18;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    -- 逻辑运算符</span><br><span class="line">        -- and  /  between .. and ..</span><br><span class="line">        -- 18和28之间的所有学生信息</span><br><span class="line">        select * from students where age &gt; 18 and age &lt; 28;  --不包含18 和28</span><br><span class="line">        select * from students where age &gt;= 18 and age &lt;= 28;  --包含18 和28</span><br><span class="line"></span><br><span class="line">        select * from students where age between 18 and 28;  --包含18 和28</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        -- 18岁以上的女性的学生信息</span><br><span class="line">        select * from students where age &gt; 18 and gender=&quot;女&quot;;</span><br><span class="line">        select * from students where age &gt; 18 and gender=2;   --枚举的数据类型可以用数字来表示，数字从1开始</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        -- or</span><br><span class="line">        -- 18以上或者身高高过180(包含)以上的学生信息</span><br><span class="line">        select * from students where age &gt; 18 or height &gt;= 180.00;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        -- not</span><br><span class="line">        -- 不在 18岁以上的女性 这个范围内的信息</span><br><span class="line">        -- select * from students where not (age&gt;18 and gender=2);</span><br><span class="line">        select * from students where not (age &gt; 18 and gender=2); </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 模糊查询(where name like 要查询的数据)</span><br><span class="line">        -- like </span><br><span class="line">        -- % 替换任意个</span><br><span class="line">        -- _ 替换1个</span><br><span class="line">        -- 查询姓名中 以 &quot;小&quot; 开始的名字的学生信息</span><br><span class="line">        select * from students where name like &quot;小%&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        -- 查询姓名中 有 &quot;小&quot; 所有的名字的学生信息</span><br><span class="line">        select * from students where name like &quot;%小%&quot;;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        -- 查询有2个字的名字的学生信息</span><br><span class="line">        select * from students where name like &quot;__&quot;;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        -- 查询有3个字的名字的学生信息</span><br><span class="line">        select * from students where name like &quot;___&quot;;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        -- 查询至少有2个字的名字的学生信息</span><br><span class="line">        select * from students where name like &quot;__%&quot;;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 范围查询</span><br><span class="line">        -- in (1, 3, 8)表示在一个非连续的范围内</span><br><span class="line">        -- 查询 年龄为18或34的姓名的学生信息</span><br><span class="line">        -- select * from students where age = 18 or age = 34;</span><br><span class="line">        select * from students where age in (18, 34);  -- (18, 34)不是区间，是确切的值</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        -- not in 不非连续的范围之内</span><br><span class="line">        -- 年龄不是 18或34岁的学生信息</span><br><span class="line">        select * from students where age not in (18, 34);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        -- between ... and ...表示在一个连续的范围内</span><br><span class="line">        -- 查询 年龄在18到34之间的学生信息</span><br><span class="line">    </span><br><span class="line">        select * from students where age between 18 and 34; </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        -- not between ... and ...表示不在一个连续的范围内</span><br><span class="line">        -- 查询 年龄不在18到34之间的学生信息</span><br><span class="line">        select * from students where age not between 18 and 34;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    -- 空判断</span><br><span class="line">        -- 判空is null</span><br><span class="line">        -- 查询身高为空的学生信息</span><br><span class="line">        select * from students where height is null;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        -- 判非空is not null</span><br><span class="line">        </span><br><span class="line">        select * from students where height is not null;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 排序</span><br><span class="line">    -- order by 字段</span><br><span class="line">    -- asc</span><br><span class="line">    -- asc从小到大排列，即升序</span><br><span class="line">    -- desc</span><br><span class="line">    -- desc从大到小排序，即降序</span><br><span class="line">    -- 查询年龄在18到34岁之间的男性，按照年龄从小到大到排序</span><br><span class="line"></span><br><span class="line">    select * from students where gender=1 and age between 18 and 34 order by age asc;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    -- 查询年龄在18到34岁之间的女性，身高从高到矮排序</span><br><span class="line">    </span><br><span class="line">    select * from students where gender=2 and age between 18 and 34 order by height desc;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    -- order by 多个字段</span><br><span class="line">    -- 查询年龄在18到34岁之间的女性，身高从高到矮排序, 如果身高相同的情况下按照年龄从小到大排序</span><br><span class="line">    </span><br><span class="line">    select * from students where gender=2 and age between 18 and 34 order by height desc, age asc;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    -- 如果年龄也相同那么按照id从大到小排序</span><br><span class="line">    select * from students where gender=2 and age between 18 and 34 order by height desc, age asc, id desc;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 聚合函数</span><br><span class="line">    -- 总数</span><br><span class="line">    -- count</span><br><span class="line">    -- 查询男性有多少人</span><br><span class="line"></span><br><span class="line">    select count(*) from students where gender = 1;</span><br><span class="line">    </span><br><span class="line">    -- 最大值</span><br><span class="line">    -- max</span><br><span class="line">    -- 查询最大的年龄</span><br><span class="line">    select max(age) from students;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    -- 查询女性的最高 身高</span><br><span class="line">    select max(height) from students where gender = 2; </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 最小值</span><br><span class="line">    -- min</span><br><span class="line">    select min(height) from students where gender = 2; </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    -- 求和</span><br><span class="line">    -- sum</span><br><span class="line">    -- 计算所有人的年龄总和</span><br><span class="line">    select sum(age) from students;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    -- 平均值</span><br><span class="line">    -- avg</span><br><span class="line">    -- 计算平均年龄</span><br><span class="line">    select avg(age) from students;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 计算平均年龄 sum(age)/count(*)</span><br><span class="line">    select sum(age)/count(*) from students;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 四舍五入 round(123.23 , 1) 保留1位小数</span><br><span class="line">    -- 计算所有人的平均年龄，保留2位小数</span><br><span class="line">    select round(avg(age), 2) from students;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 计算男性的平均身高 保留2位小数</span><br><span class="line">    select round(avg(height), 2) from students where gender = 1;   -- 没有算null这种情况  /4</span><br><span class="line">    select round(sum(height)/count(*), 2) from students where gender = 1;   -- 把null算进去了    /5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # 聚合函数计算的时候不会把null计算进去</span><br><span class="line">    </span><br><span class="line">-- 分组</span><br><span class="line"></span><br><span class="line">    -- 分组的口诀</span><br><span class="line">    -- select 分组的字段  from 表名 group by 分组字段;</span><br><span class="line"></span><br><span class="line">    -- group by</span><br><span class="line">    -- 按照性别分组,查询所有的性别</span><br><span class="line">    select gender from students group by gender;</span><br><span class="line"></span><br><span class="line">    --# 每种、每类是分组的关键字眼， 以什么为分组，最好在展示的时候，把这个字段放在第一列</span><br><span class="line">    -- 计算每种性别中的人数</span><br><span class="line">    select gender, count(*) from students group by gender;</span><br><span class="line"></span><br><span class="line">    -- group_concat(...)</span><br><span class="line">    -- 查询同种性别中的姓名group_concat(name)</span><br><span class="line">    select gender, group_concat(name) from students group by gender;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    -- 查询每组性别的平均年龄</span><br><span class="line">    select gender, avg(age) from students group by gender;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- having(注意having和group by 连用 having后通常也要跟 聚合函数)</span><br><span class="line">    -- 注意： 聚合函数如果做为条件出现，只能和having配合。不能和where配合使用。</span><br><span class="line">    -- 查询平均年龄超过30岁的性别，以及姓名</span><br><span class="line">    select gender, avg(age), group_concat(name) from students group by gender having avg(age) &gt; 30;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    -- 查询每种性别中的人数多于2个的信息</span><br><span class="line">    -- select gender, count(*) from students group by gender having count(*) &gt; 2;</span><br><span class="line">    select gender, count(*) from students group by gender having count(*) &gt; 2;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 分页</span><br><span class="line">    -- limit start, count</span><br><span class="line">    -- limit 放在最后面(注意)</span><br><span class="line">    -- 公式：limit (要显示第几页-1) * 每页分多少个, 每页分多少个;</span><br><span class="line">    -- 限制查询出来的数据个数</span><br><span class="line">    -- 查询前5个数据</span><br><span class="line">    select * from students limit 5;</span><br><span class="line"></span><br><span class="line">    -- 每页分2个，要显示第1页  (查询前2个数据) </span><br><span class="line">    select * from students limit 2;</span><br><span class="line"></span><br><span class="line">    --通用写法：</span><br><span class="line">    select * from students limit 0, 2;</span><br><span class="line"></span><br><span class="line">    -- 每页分2个，要显示第2页</span><br><span class="line">    select * from students limit 2, 2;</span><br><span class="line">    </span><br><span class="line">    -- 每页分2个，要显示第3页</span><br><span class="line">    select * from students limit 4, 2;</span><br><span class="line"></span><br><span class="line">    -- 每页分2个，要显示第4页</span><br><span class="line">    select * from students limit 6, 2;</span><br><span class="line"></span><br><span class="line">    -- 每页分2个，显示第6页的信息, 按照年龄从小到大排序</span><br><span class="line">    -- 先整体排序，再进行分页！</span><br><span class="line">    select * from students order by age asc limit 10, 2;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">     </span><br><span class="line">-- select * from students where </span><br><span class="line">-- select 分组 from students group by 分组字段 having 条件查询</span><br><span class="line">-- select * from 表a inner join 表b on 连接的条件</span><br><span class="line"></span><br><span class="line">-- 连接查询   (表与表之间的链接， 为了更好的查出有效数据)</span><br><span class="line">    -- inner join ... on</span><br><span class="line">    -- select ... from 表A inner join 表B;</span><br><span class="line">    -- 查询 有能够对应班级的学生以及班级信息</span><br><span class="line">    select * from studetns inner join classes on students.cls_id=classes.id;</span><br><span class="line">    </span><br><span class="line">    -- 按照要求显示姓名、班级</span><br><span class="line">    select students.name, classes.name from students inner join classes on students.cls_id=classes.id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 给数据表起名字</span><br><span class="line">    select s.name, c.name from students as s inner join classes as c on s.cls_id=c.id;</span><br><span class="line">    select s.name as &quot;姓名&quot;, c.name as &quot;所在班级&quot; from students as s inner join classes as c on s.cls_id=c.id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 查询 有能够对应班级的学生以及班级信息，显示学生的所有信息 students.*，只显示班级名称 classes.name.</span><br><span class="line"></span><br><span class="line">    select s.*, c.name from students as s inner join classes as c on s.cls_id = c.id;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    -- 在以上的查询中，将班级名显示在第1列</span><br><span class="line">    select c.name,s.* from students as s inner join classes as c on s.cls_id = c.id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 查询 有能够对应班级的学生以及班级信息, 按照班级名进行排序</span><br><span class="line">    select c.name,s.* from students as s inner join classes as c on s.cls_id = c.id order by c.name;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    -- 当时同一个班级的时候，按照学生的id进行从小到大排序</span><br><span class="line">    select c.name,s.* from students as s inner join classes as c on s.cls_id = c.id order by c.name, s.id asc;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">-- 子查询  (一个查询的结果作为另一个查询的一部分， 会把前者的查询称为子查询)</span><br><span class="line">    -- 标量子查询: 子查询返回的结果是一个数据(一行一列)</span><br><span class="line">    -- 列子查询: 返回的结果是一列(一列多行)</span><br><span class="line">    -- 行子查询: 返回的结果是一行(一行多列)</span><br><span class="line">    </span><br><span class="line">    -- 查询出高于平均身高的信息(height)</span><br><span class="line"></span><br><span class="line">    select avg(height) from students;</span><br><span class="line">    </span><br><span class="line">    select * from students where height &gt; (select avg(height) from students);</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    -- 查询学生的班级号能够对应的 学生名字</span><br><span class="line">    -- select * from students where cls_id in(1,2);</span><br><span class="line">    -- select id from classes;</span><br><span class="line"></span><br><span class="line">    select students.name from students where cls_id = 1 or cls_id = 2;</span><br><span class="line">    select students.name from students where cls_id in (1, 2);</span><br><span class="line">    select students.name from students where cls_id in (select id from classes);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js(8.使用express搭建服务器程序(2))</title>
      <link href="/posts/6e700f68.html"/>
      <url>/posts/6e700f68.html</url>
      
        <content type="html"><![CDATA[<h3 id="使用express搭建服务器程序-2"><a href="#使用express搭建服务器程序-2" class="headerlink" title="使用express搭建服务器程序(2)"></a>使用express搭建服务器程序(2)</h3><h4 id="使用路由"><a href="#使用路由" class="headerlink" title="使用路由"></a>使用路由</h4><p>路由模块：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//抽取路由</span></span><br><span class="line"><span class="comment">//第一步还是引入express</span></span><br><span class="line"><span class="keyword">const</span> express=<span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="comment">//创建路由对象</span></span><br><span class="line"><span class="keyword">const</span> routerport=express.<span class="title class_">Router</span>();</span><br><span class="line"><span class="keyword">const</span> path=<span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs=<span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> bodyParser=<span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>)</span><br><span class="line"></span><br><span class="line">routerport.<span class="title function_">use</span>(bodyParser.<span class="title function_">urlencoded</span>(&#123;<span class="attr">extended</span>:<span class="literal">false</span>&#125;));</span><br><span class="line">routerport.<span class="title function_">use</span>(bodyParser.<span class="title function_">json</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">//register接口get请求</span></span><br><span class="line">routerport.<span class="title function_">get</span>(<span class="string">&#x27;/register.html&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> filePath=path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;../views&#x27;</span>,<span class="string">&#x27;register.html&#x27;</span>);</span><br><span class="line">    <span class="keyword">let</span> content=fs.<span class="title function_">readFileSync</span>(filePath,<span class="string">&#x27;utf-8&#x27;</span>);</span><br><span class="line">    res.<span class="title function_">send</span>(content);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//register接口post请求</span></span><br><span class="line">routerport.<span class="title function_">post</span>(<span class="string">&#x27;/register.html&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> body=req.<span class="property">body</span>;</span><br><span class="line">    <span class="keyword">let</span> &#123;username,email,password&#125;=body;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(body);</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;pos提交成功&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//index接口get请求</span></span><br><span class="line">routerport.<span class="title function_">get</span>(<span class="string">&#x27;/index.html&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> filePath=path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;../views&#x27;</span>,<span class="string">&#x27;index.html&#x27;</span>);</span><br><span class="line">    <span class="keyword">let</span> content=fs.<span class="title function_">readFileSync</span>(filePath,<span class="string">&#x27;utf-8&#x27;</span>);</span><br><span class="line">    res.<span class="title function_">send</span>(content);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//导出路由模块</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>=routerport</span><br></pre></td></tr></table></figure><br>app.js:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express=<span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app=<span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">const</span> fs=<span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path=<span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="comment">//导入自己写的模块</span></span><br><span class="line"><span class="keyword">const</span> routerport = <span class="built_in">require</span>(<span class="string">&#x27;./routes/passport&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//将路由对象注册到app对象上</span></span><br><span class="line">app.<span class="title function_">use</span>(routerport);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;hello express框架&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3001</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;express启动成功&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><h4 id="pathinfo风格的参数获取"><a href="#pathinfo风格的参数获取" class="headerlink" title="pathinfo风格的参数获取"></a>pathinfo风格的参数获取</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//lis接口</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/list.html&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    res.<span class="title function_">render</span>(<span class="string">&#x27;list.html&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//detail接口，以及接收html页面发送数据</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/detail/:id/:type&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//使用params对象来接收参数</span></span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;detail1详情页&#x27;</span>+req.<span class="property">params</span>.<span class="property">id</span>+req.<span class="property">params</span>.<span class="property">type</span>);</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    detail1详情页01music</span></span><br><span class="line"><span class="comment">    detail1详情页02sport</span></span><br><span class="line"><span class="comment">    detail1详情页03happy</span></span><br><span class="line"><span class="comment">    detail1详情页04military</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>list.html<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span>,<span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>新闻<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/detail/01/music&quot;</span>&gt;</span>新闻信息01<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/detail/02/sport&quot;</span>&gt;</span>新闻信息02<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/detail/03/happy&quot;</span>&gt;</span>新闻信息03<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/detail/04/military&quot;</span>&gt;</span>新闻信息04<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="模板过滤器使用"><a href="#模板过滤器使用" class="headerlink" title="模板过滤器使用"></a>模板过滤器使用</h4><p><a href="http://aui.github.io/art-template/zh-cn/docs/syntax.html#%E8%BF%87%E6%BB%A4%E5%99%A8">模板过滤器</a><br>模板过滤器使用<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//模板过滤器</span></span><br><span class="line">template.<span class="property">defaults</span>.<span class="property">imports</span>.<span class="property">ageFilter</span>=<span class="keyword">function</span>(<span class="params">value</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(value &gt;= <span class="number">18</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> datalist=&#123;</span><br><span class="line">        <span class="attr">ages</span>: [<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="number">22</span>]</span><br><span class="line">    &#125;;</span><br><span class="line">    res.<span class="title function_">render</span>(<span class="string">&#x27;index.html&#x27;</span>,datalist);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><br>html中代码：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span>,<span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>欢迎来到我的世界！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>个人信息<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        &#123;&#123;each ages&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;$value | ageFilter&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        &#123;&#123;/each&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="模板继承"><a href="#模板继承" class="headerlink" title="模板继承"></a>模板继承</h4><p><a href="http://aui.github.io/art-template/zh-cn/docs/syntax.html#%E6%A8%A1%E6%9D%BF%E7%BB%A7%E6%89%BF">模板继承</a><br>接口：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/child.html&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    res.<span class="title function_">render</span>(<span class="string">&#x27;child.html&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><br>parents.html:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span>,<span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>头部<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    &#123;&#123;block &#x27;content&#x27;&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>父模板的内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    &#123;&#123;/block&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>底部<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br>child.html:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;extend &#x27;./parents.html&#x27;&#125;&#125;</span><br><span class="line">&#123;&#123;block &#x27;content&#x27;&#125;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>子模板的内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;&#123;/block&#125;&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js(7.使用express搭建服务器程序(1))</title>
      <link href="/posts/ec78c399.html"/>
      <url>/posts/ec78c399.html</url>
      
        <content type="html"><![CDATA[<h3 id="使用express搭建服务器程序-1"><a href="#使用express搭建服务器程序-1" class="headerlink" title="使用express搭建服务器程序(1)"></a>使用express搭建服务器程序(1)</h3><p><a href="https://expressjs.com/zh-cn/starter/hello-world.html">快速入门</a></p><h4 id="cd到express下安装express"><a href="#cd到express下安装express" class="headerlink" title="cd到express下安装express"></a>cd到express下安装express</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install express --save</span><br><span class="line">也可以使用yarn安装</span><br><span class="line">yarn add express</span><br></pre></td></tr></table></figure><h4 id="简单搭建一个express服务器"><a href="#简单搭建一个express服务器" class="headerlink" title="简单搭建一个express服务器"></a>简单搭建一个express服务器</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//安装express</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//1.引入express</span></span><br><span class="line"><span class="keyword">const</span> express=<span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="comment">//2.创建app对象(app项目对象)</span></span><br><span class="line"><span class="keyword">const</span> app=<span class="title function_">express</span>();</span><br><span class="line"><span class="comment">//4.处理请求</span></span><br><span class="line"><span class="comment">//第一个参数是请求路径，第二个参数是针对于这个路径的处理函数</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//函数有两个形参</span></span><br><span class="line">    <span class="comment">//第一个形参req是请求对象，第二个参数res是响应对象</span></span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;hello express框架&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//3.监听是否有请求</span></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3001</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;express启动成功&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="get请求"><a href="#get请求" class="headerlink" title="get请求"></a>get请求</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/index.html&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//获取文件路径</span></span><br><span class="line">    <span class="keyword">let</span> filePath=path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;views&#x27;</span>,<span class="string">&#x27;index.html&#x27;</span>);</span><br><span class="line">    <span class="comment">//获取文件信息</span></span><br><span class="line">    <span class="keyword">let</span> content=fs.<span class="title function_">readFileSync</span>(filePath,<span class="string">&#x27;utf-8&#x27;</span>);</span><br><span class="line">    res.<span class="title function_">send</span>(content);</span><br><span class="line">    <span class="comment">//获取请求参数 http://localhost:3001/index.html?name=nodejs&amp;age=18</span></span><br><span class="line">    <span class="keyword">let</span> query=req.<span class="property">query</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(query); <span class="comment">// &#123; name: &#x27;nodejs&#x27;, age: &#x27;18&#x27; &#125;</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(query.<span class="property">name</span>,query.<span class="property">age</span>);  <span class="comment">// nodejs 18</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="post请求"><a href="#post请求" class="headerlink" title="post请求"></a>post请求</h4><p>先安装body-parser<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add body-parser</span><br></pre></td></tr></table></figure><br>处理post请求方式<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入body-parser模块</span></span><br><span class="line"><span class="keyword">const</span> bodyParser=<span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>)</span><br><span class="line"><span class="comment">//将body-parser功能添加到项目app中</span></span><br><span class="line">app.<span class="title function_">use</span>(bodyParser.<span class="title function_">urlencoded</span>(&#123;<span class="attr">extended</span>:<span class="literal">false</span>&#125;));<span class="comment">//false:接收的值为字符串或者数组，true为任意类型</span></span><br><span class="line">app.<span class="title function_">use</span>(bodyParser.<span class="title function_">json</span>());<span class="comment">//解析json格式</span></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/register.html&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> filePath=path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;views&#x27;</span>,<span class="string">&#x27;register.html&#x27;</span>);</span><br><span class="line">    <span class="keyword">let</span> content=fs.<span class="title function_">readFileSync</span>(filePath,<span class="string">&#x27;utf-8&#x27;</span>);</span><br><span class="line">    res.<span class="title function_">send</span>(content);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/register.html&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> body=req.<span class="property">body</span>;</span><br><span class="line">    <span class="comment">//结构赋值 获取数据</span></span><br><span class="line">    <span class="keyword">let</span> &#123;username,email,password&#125;=body;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(body);</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    [Object: null prototype] &#123;</span></span><br><span class="line"><span class="comment">    username: &#x27;lihua&#x27;,</span></span><br><span class="line"><span class="comment">    email: &#x27;3064459131@qq.com&#x27;,</span></span><br><span class="line"><span class="comment">    password: &#x27;123456&#x27;</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(username,email,password); <span class="comment">//lihua 3064459131@qq.com 123456</span></span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;pos提交成功&#x27;</span>);</span><br><span class="line">    <span class="comment">//后端业务逻辑</span></span><br><span class="line">    <span class="comment">//获取请求参数</span></span><br><span class="line">    <span class="comment">//对参数进行处理</span></span><br><span class="line">    <span class="comment">//查询数据库，判断用户名是否注册，密码等</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><br>register.html<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span>,<span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>注册页面<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/register.html&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        邮箱：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入邮箱&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//接口</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/login.html&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> filePath=path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;views&#x27;</span>,<span class="string">&#x27;login.html&#x27;</span>);</span><br><span class="line">    <span class="keyword">let</span> content=fs.<span class="title function_">readFileSync</span>(filePath,<span class="string">&#x27;utf-8&#x27;</span>);</span><br><span class="line">    res.<span class="title function_">send</span>(content);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//重定向</span></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/register.html&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//使用重定向</span></span><br><span class="line">    res.<span class="title function_">redirect</span>(<span class="string">&#x27;/login.html&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="all方法"><a href="#all方法" class="headerlink" title="all方法"></a>all方法</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用all()进行合并</span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&#x27;/register.html&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//获取请求方法</span></span><br><span class="line">    <span class="keyword">let</span> method=req.<span class="property">method</span></span><br><span class="line">    <span class="comment">//判断请求方式</span></span><br><span class="line">    <span class="keyword">if</span>(method == <span class="string">&#x27;GET&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> filePath=path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;views&#x27;</span>,<span class="string">&#x27;register.html&#x27;</span>);</span><br><span class="line">        <span class="keyword">let</span> content=fs.<span class="title function_">readFileSync</span>(filePath,<span class="string">&#x27;utf-8&#x27;</span>);</span><br><span class="line">        res.<span class="title function_">send</span>(content);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(method == <span class="string">&#x27;POST&#x27;</span>)&#123;</span><br><span class="line">        res.<span class="title function_">redirect</span>(<span class="string">&#x27;/login.html&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="使用express获取静态资源"><a href="#使用express获取静态资源" class="headerlink" title="使用express获取静态资源"></a>使用express获取静态资源</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取静态资源</span></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">static</span>(path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;public&#x27;</span>)));<span class="comment">//指定再本地public下寻找静态资源</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>欢迎来到我的世界！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/img/1.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="使用express渲染模板页面"><a href="#使用express渲染模板页面" class="headerlink" title="使用express渲染模板页面"></a>使用express渲染模板页面</h4><p><a href="http://aui.github.io/art-template/express/">安装模板:</a><br>先cd到express目录<br>再执行以下命令<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install --save art-template</span><br><span class="line">npm install --save express-art-template</span><br></pre></td></tr></table></figure><br>代码展示<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express=<span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path=<span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> app=<span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// view engine setup</span></span><br><span class="line"><span class="comment">//模板引擎初始化工作</span></span><br><span class="line">app.<span class="title function_">engine</span>(<span class="string">&#x27;html&#x27;</span>, <span class="built_in">require</span>(<span class="string">&#x27;express-art-template&#x27;</span>));</span><br><span class="line"><span class="comment">//项目环境的设置</span></span><br><span class="line"><span class="comment">//production生产模式，线上模式</span></span><br><span class="line"><span class="comment">//development开发模式</span></span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">&#x27;view options&#x27;</span>, &#123;   </span><br><span class="line">    <span class="attr">debug</span>: process.<span class="property">env</span>.<span class="property">NODE_ENV</span> !== <span class="string">&#x27;production&#x27;</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//设置在哪一个目录下查找html文件</span></span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">&#x27;views&#x27;</span>, path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;views&#x27;</span>));</span><br><span class="line"><span class="comment">//设置模板的后缀名</span></span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">&#x27;view engine&#x27;</span>, <span class="string">&#x27;html&#x27;</span>);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> datalist=&#123;</span><br><span class="line">        <span class="attr">name</span>:<span class="string">&#x27;张三&#x27;</span>,</span><br><span class="line">        <span class="attr">age</span>:<span class="number">20</span>,</span><br><span class="line">        <span class="attr">job</span>:<span class="string">&#x27;前端工程师&#x27;</span>,</span><br><span class="line">        <span class="attr">childrens</span>:[<span class="string">&#x27;大毛&#x27;</span>,<span class="string">&#x27;二毛&#x27;</span>,<span class="string">&#x27;三毛&#x27;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">render</span>(<span class="string">&#x27;index.html&#x27;</span>,datalist);</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3001</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;express启动成功&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><br>html:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span>,<span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>欢迎来到我的世界！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;img src=&quot;/img/1.jpg&quot; alt=&quot;&quot;&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>个人信息<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>姓名：&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>年龄：&#123;&#123;age&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;&#123;if age &gt; 18&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>成年人<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;&#123;/if&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>家庭情况<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;&#123;each childrens&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>第&#123;&#123;$index+1&#125;&#125;个孩子是&#123;&#123;$value&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;&#123;/each&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js(6.书写一个web服务器)</title>
      <link href="/posts/9da3dae3.html"/>
      <url>/posts/9da3dae3.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303142200924.jpg" alt=""></p><h3 id="书写一个web服务器"><a href="#书写一个web服务器" class="headerlink" title="书写一个web服务器"></a>书写一个web服务器</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入模块</span></span><br><span class="line"><span class="keyword">const</span> http=<span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs=<span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path=<span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="comment">//端口号</span></span><br><span class="line"><span class="keyword">const</span> port=<span class="number">8080</span>;</span><br><span class="line"><span class="comment">//创建服务器对象</span></span><br><span class="line"><span class="keyword">const</span> server=http.<span class="title function_">createServer</span>(<span class="function">(<span class="params">request,response</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//每收到一次请求就会执行一次</span></span><br><span class="line">    <span class="comment">//判断浏览器的请求</span></span><br><span class="line">    <span class="keyword">let</span> reqUrl=request.<span class="property">url</span>;</span><br><span class="line">    <span class="keyword">if</span>(reqUrl==<span class="string">&#x27;/&#x27;</span> || reqUrl==<span class="string">&#x27;/index.html&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> filePath=path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;assets&#x27;</span>,<span class="string">&#x27;html&#x27;</span>,<span class="string">&#x27;index.html&#x27;</span>);</span><br><span class="line">        <span class="keyword">let</span> content=fs.<span class="title function_">readFileSync</span>(filePath);</span><br><span class="line">        response.<span class="title function_">end</span>(content);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(reqUrl==<span class="string">&#x27;/cate.html&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> filePath=path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;assets&#x27;</span>,<span class="string">&#x27;html&#x27;</span>,<span class="string">&#x27;cate.html&#x27;</span>);</span><br><span class="line">        <span class="keyword">let</span> content=fs.<span class="title function_">readFileSync</span>(filePath);</span><br><span class="line">        response.<span class="title function_">end</span>(content);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(reqUrl.<span class="title function_">endsWith</span>(<span class="string">&#x27;.css&#x27;</span>))&#123;</span><br><span class="line">        <span class="keyword">let</span> filePath=path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;assets&#x27;</span>,<span class="string">&#x27;css&#x27;</span>,<span class="string">&#x27;index.css&#x27;</span>);</span><br><span class="line">        <span class="keyword">let</span> content=fs.<span class="title function_">readFileSync</span>(filePath);</span><br><span class="line">        response.<span class="title function_">end</span>(content);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        response.<span class="title function_">end</span>(<span class="string">&#x27;404,报错了&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//服务器监听</span></span><br><span class="line">server.<span class="title function_">listen</span>(port,<span class="function">(<span class="params">error</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;服务器运行成功&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="npm的使用-基于nodejs包管理器"><a href="#npm的使用-基于nodejs包管理器" class="headerlink" title="npm的使用(基于nodejs包管理器)"></a><a href="https://www.npmjs.com/">npm的使用(基于nodejs包管理器)</a></h3><p>第三方模块，别人写好的，需要安装</p><h4 id="npm使用"><a href="#npm使用" class="headerlink" title="npm使用"></a>npm使用</h4><p>项目初始化 package.json记录项目相关信息<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init</span><br></pre></td></tr></table></figure><br>eg:下载md5<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install md5</span><br></pre></td></tr></table></figure><br>使用第三方模块：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> md5=<span class="built_in">require</span>(<span class="string">&#x27;md5&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">md5</span>(<span class="string">&#x27;123456&#x27;</span>));<span class="comment">//e10adc3949ba59abbe56e057f20f883e</span></span><br></pre></td></tr></table></figure></p><h3 id="yarn-基于nodejs的包管理器"><a href="#yarn-基于nodejs的包管理器" class="headerlink" title="yarn(基于nodejs的包管理器)"></a><a href="https://www.yarnpkg.cn/">yarn(基于nodejs的包管理器)</a></h3><p><a href="https://yarn.bootcss.com/">中文版</a><br>安装 -g代表全局安装<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g yarn</span><br></pre></td></tr></table></figure><br>项目初始化<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn init</span><br></pre></td></tr></table></figure><br>eg:下载md5<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm add md5</span><br></pre></td></tr></table></figure><br>使用第三方模块：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> md5=<span class="built_in">require</span>(<span class="string">&#x27;md5&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">md5</span>(<span class="string">&#x27;123456&#x27;</span>));<span class="comment">//e10adc3949ba59abbe56e057f20f883e</span></span><br></pre></td></tr></table></figure></p><h3 id="async和await使用-异步的终极方案"><a href="#async和await使用-异步的终极方案" class="headerlink" title="async和await使用(异步的终极方案)"></a>async和await使用(异步的终极方案)</h3><h4 id="eg"><a href="#eg" class="headerlink" title="eg"></a>eg</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs=<span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> path=<span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line">fileone=path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;1.txt&#x27;</span>);</span><br><span class="line">filetwo=path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;2.txt&#x27;</span>);</span><br><span class="line">filethree=path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;3.txt&#x27;</span>);</span><br><span class="line">filedata=path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;data.txt&#x27;</span>);</span><br><span class="line"><span class="comment">//封装一个函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">readFilePromise</span>(<span class="params">fileName</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="comment">//异步操作</span></span><br><span class="line">        fs.<span class="title function_">readFile</span>(fileName,<span class="string">&#x27;utf-8&#x27;</span>,<span class="function">(<span class="params">error,data</span>)=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(error)&#123;</span><br><span class="line">                <span class="title function_">reject</span>(error);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="title function_">resolve</span>(data); <span class="comment">//data就是读取到的内容</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//await必须要放在async function函数内部</span></span><br><span class="line"><span class="comment">//async function需要调用,多了一个await 外观同步执行，实质上是异步</span></span><br><span class="line"><span class="comment">//执行第一个异步操作后，再执行第二个异步操作</span></span><br><span class="line"><span class="comment">//async await一般后面就是接promise对象</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">func</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">/* 不使用await的p1,p2,p3输出</span></span><br><span class="line"><span class="comment">    Promise &#123; &lt;pending&gt; &#125;</span></span><br><span class="line"><span class="comment">    Promise &#123; &lt;pending&gt; &#125;</span></span><br><span class="line"><span class="comment">    Promise &#123; &lt;pending&gt; &#125;</span></span><br><span class="line"><span class="comment">        使用await的p1,p2,p3输出,能直接读取到内容</span></span><br><span class="line"><span class="comment">    1hello</span></span><br><span class="line"><span class="comment">    2nihao</span></span><br><span class="line"><span class="comment">    3hhalala</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">let</span> p1=<span class="keyword">await</span> <span class="title function_">readFilePromise</span>(fileone)   <span class="comment">//直接拿到promise对象成功的数据</span></span><br><span class="line">    <span class="keyword">let</span> p2=<span class="keyword">await</span> <span class="title function_">readFilePromise</span>(filetwo)</span><br><span class="line">    <span class="keyword">let</span> p3=<span class="keyword">await</span> <span class="title function_">readFilePromise</span>(filethree)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(p1);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(p2);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(p3);</span><br><span class="line">    fs.<span class="title function_">writeFile</span>(filedata,p1+p2+p3,<span class="string">&#x27;utf-8&#x27;</span>,<span class="function">(<span class="params">error</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;写入成功&#x27;</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">func</span>();</span><br></pre></td></tr></table></figure><h4 id="Async-Await-简介"><a href="#Async-Await-简介" class="headerlink" title="Async/Await 简介"></a>Async/Await 简介</h4><p>对于从未听说过 async/await 的朋友，下面是简介:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">async/await 是写异步代码的新方式，以前的方法有回调函数和Promise。</span><br><span class="line">async/await 是基于 Promise 实现的，它不能用于普通的回调函数。</span><br><span class="line">async/await 与 Promise 一样，是非阻塞的。</span><br><span class="line">async/await 使得异步代码看起来像同步代码，这正是它的魔力所在。</span><br></pre></td></tr></table></figure></p><h4 id="Async-Await-语法"><a href="#Async-Await-语法" class="headerlink" title="Async/Await 语法"></a>Async/Await 语法</h4><p>示例中，getJSON 函数返回一个 promise，这个 promise 成功 resolve 时会返回一个 json 对象。我们只是调用这个函数，打印返回的 JSON 对象，然后返回”done”。</p><p>使用 Promise 是这样的:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">makeRequest</span> = (<span class="params"></span>) =&gt;</span><br><span class="line">    <span class="title function_">getJSON</span>().<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;done&quot;</span>;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="title function_">makeRequest</span>();</span><br></pre></td></tr></table></figure></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">makeRequest</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">await</span> <span class="title function_">getJSON</span>());</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;done&quot;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">makeRequest</span>();</span><br></pre></td></tr></table></figure><p>它们有一些细微不同:</p><p>函数前面多了一个 async 关键字。await 关键字只能用在 async 定义的函数内。async 函数会隐式地返回一个 promise，该 promise 的 reosolve 值就是函数 return 的值。(示例中 reosolve 值就是字符串”done”)</p><p>第 1 点暗示我们不能在最外层代码中使用 await，因为不在 async 函数内。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不能在最外层代码中使用await</span></span><br><span class="line"><span class="keyword">await</span> <span class="title function_">makeRequest</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这是会出事情的</span></span><br><span class="line"><span class="title function_">makeRequest</span>().<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 代码</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><br>await getJSON()表示 console.log 会等到 getJSON 的 promise 成功 reosolve 之后再执行。</p><h4 id="为什么-Async-Await-更好？"><a href="#为什么-Async-Await-更好？" class="headerlink" title="为什么 Async/Await 更好？"></a>为什么 Async/Await 更好？</h4><ol><li>简洁<br>由示例可知，使用 Async/Await 明显节约了不少代码。我们不需要写.then，不需要写匿名函数处理 Promise 的 resolve 值，也不需要定义多余的 data 变量，还避免了嵌套代码。这些小的优点会迅速累计起来，这在之后的代码示例中会更加明显。</li><li>错误处理<br>Async/Await 让 try/catch 可以同时处理同步和异步错误。在下面的 promise 示例中，try/catch 不能处理 JSON.parse 的错误，因为它在 Promise 中。我们需要使用.catch，这样错误处理代码非常冗余。并且，在我们的实际生产代码会更加复杂。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">makeRequest</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="title function_">getJSON</span>().<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// JSON.parse可能会出错</span></span><br><span class="line">            <span class="keyword">const</span> data = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(result);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 取消注释，处理异步代码的错误</span></span><br><span class="line">        <span class="comment">// .catch((err) =&gt; &#123;</span></span><br><span class="line">        <span class="comment">//   console.log(err)</span></span><br><span class="line">        <span class="comment">// &#125;)</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>使用 async/await 的话，catch 能处理 JSON.parse 错误:<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">makeRequest</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// this parse may fail</span></span><br><span class="line">        <span class="keyword">const</span> data = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="keyword">await</span> <span class="title function_">getJSON</span>());</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li>条件语句<br>下面示例中，需要获取数据，然后根据返回数据决定是直接返回，还是继续获取更多的数据。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">makeRequest</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">getJSON</span>().<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (data.<span class="property">needsAnotherRequest</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">makeAnotherRequest</span>(data).<span class="title function_">then</span>(<span class="function"><span class="params">moreData</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(moreData);</span><br><span class="line">                <span class="keyword">return</span> moreData;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">            <span class="keyword">return</span> data;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>这些代码看着就头痛。嵌套（6 层），括号，return 语句很容易让人感到迷茫，而它们只是需要将最终结果传递到最外层的 Promise。</li></ol><p>上面的代码使用 async/await 编写可以大大地提高可读性:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">makeRequest</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> data = <span class="keyword">await</span> <span class="title function_">getJSON</span>();</span><br><span class="line">    <span class="keyword">if</span> (data.<span class="property">needsAnotherRequest</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> moreData = <span class="keyword">await</span> <span class="title function_">makeAnotherRequest</span>(data);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(moreData);</span><br><span class="line">        <span class="keyword">return</span> moreData;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><ol><li>中间值<br>你很可能遇到过这样的场景，调用 promise1，使用 promise1 返回的结果去调用 promise2，然后使用两者的结果去调用 promise3。你的代码很可能是这样的:<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">makeRequest</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">promise1</span>().<span class="title function_">then</span>(<span class="function"><span class="params">value1</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">promise2</span>(value1).<span class="title function_">then</span>(<span class="function"><span class="params">value2</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">promise3</span>(value1, value2);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>如果 promise3 不需要 value1，可以很简单地将 promise 嵌套铺平。如果你忍受不了嵌套，你可以将 value 1 &amp; 2 放进 Promise.all 来避免深层嵌套：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">makeRequest</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">promise1</span>()</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function"><span class="params">value1</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">all</span>([value1, <span class="title function_">promise2</span>(value1)]);</span><br><span class="line">        &#125;)</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function">(<span class="params">[value1, value2]</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">promise3</span>(value1, value2);</span><br><span class="line">        &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>这种方法为了可读性牺牲了语义。除了避免嵌套，并没有其他理由将 value1 和 value2 放在一个数组中。</li></ol><p>使用 async/await 的话，代码会变得异常简单和直观。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">makeRequest</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> value1 = <span class="keyword">await</span> <span class="title function_">promise1</span>();</span><br><span class="line">    <span class="keyword">const</span> value2 = <span class="keyword">await</span> <span class="title function_">promise2</span>(value1);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">promise3</span>(value1, value2);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ol><li>错误栈<br>下面示例中调用了多个 Promise，假设 Promise 链中某个地方抛出了一个错误:<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">makeRequest</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">callAPromise</span>()</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function">() =&gt;</span> <span class="title function_">callAPromise</span>())</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function">() =&gt;</span> <span class="title function_">callAPromise</span>())</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function">() =&gt;</span> <span class="title function_">callAPromise</span>())</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function">() =&gt;</span> <span class="title function_">callAPromise</span>())</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;oops&quot;</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">makeRequest</span>().<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">    <span class="comment">// output</span></span><br><span class="line">    <span class="comment">// Error: oops at callAPromise.then.then.then.then.then (index.js:8:13)</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>Promise 链中返回的错误栈没有给出错误发生位置的线索。更糟糕的是，它会误导我们；错误栈中唯一的函数名为 callAPromise，然而它和错误没有关系。(文件名和行号还是有用的)。</li></ol><p>然而，async/await 中的错误栈会指向错误所在的函数:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">makeRequest</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">callAPromise</span>();</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">callAPromise</span>();</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">callAPromise</span>();</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">callAPromise</span>();</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">callAPromise</span>();</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;oops&quot;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">makeRequest</span>().<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">    <span class="comment">// output</span></span><br><span class="line">    <span class="comment">// Error: oops at makeRequest (index.js:7:9)</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><br>在开发环境中，这一点优势并不大。但是，当你分析生产环境的错误日志时，它将非常有用。这时，知道错误发生在 makeRequest 比知道错误发生在 then 链中要好。</p><ol><li>调试<br>最后一点，也是非常重要的一点在于，async/await 能够使得代码调试更简单。2 个理由使得调试 Promise 变得非常痛苦:</li></ol><p>不能在返回表达式的箭头函数中设置断点<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303142143534.png" alt=""><br>如果你在.then 代码块中设置断点，使用 Step Over 快捷键，调试器不会跳到下一个.then，因为它只会跳过异步代码。<br>使用 await/async 时，你不再需要那么多箭头函数，这样你就可以像调试同步代码一样跳过 await 语句。<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303142143147.png" alt=""><br>结论<br>Async/Await 是近年来 JavaScript 添加的最革命性的特性之一。它会让你发现 Promise 的语法有多糟糕，而且提供了一个直观的替代方法。</p><p>忧虑<br>对于 Async/Await，也许你有一些合理的怀疑：</p><p>它使得异步代码不再明显: 我们已经习惯了用回调函数或者.then 来识别异步代码，我们可能需要花数个星期去习惯新的标志。但是，C#拥有这个特性已经很多年了，熟悉它的朋友应该知道暂时的稍微不方便是值得的。<br>Node 7 不是 LTS（长期支持版本）: 但是，Node 8 下个月就会发布，将代码迁移到新版本会非常简单。(Fundebug 注：Node 8 是 LTS，已经于 2017 年 10 月正式发布。)<br><a href="https://zhuanlan.zhihu.com/p/23249103">资料1</a><br><a href="https://blog.fundebug.com/2017/04/04/nodejs-async-await/">资料2</a></p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js(5.网络)</title>
      <link href="/posts/b27a53d.html"/>
      <url>/posts/b27a53d.html</url>
      
        <content type="html"><![CDATA[<h3 id="IP地址和端口"><a href="#IP地址和端口" class="headerlink" title="IP地址和端口"></a>IP地址和端口</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">IP地址：用来标识网络上不同的设备</span><br><span class="line">端口号：标识同一台设备上不同的网络进程</span><br><span class="line">网络进程：可以联网的，运行起来的程序</span><br><span class="line">0-65535</span><br><span class="line">0-1024(知名端口)</span><br><span class="line">1025-65535</span><br><span class="line">端口号被占用就换一个</span><br><span class="line">端口号也有唯一性，针对同一台设备</span><br></pre></td></tr></table></figure><h3 id="http模块的使用"><a href="#http模块的使用" class="headerlink" title="http模块的使用"></a>http模块的使用</h3><p>搭建后端服务器<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//搭建后端服务器</span></span><br><span class="line"><span class="comment">//1.导入HTTP模块</span></span><br><span class="line"><span class="keyword">const</span> http=<span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line"><span class="comment">//2.定义服务程序的端口号</span></span><br><span class="line"><span class="keyword">const</span> port=<span class="number">8080</span>;</span><br><span class="line"><span class="comment">//3.创建服务器对象</span></span><br><span class="line"><span class="comment">//createServer：创建服务器对象</span></span><br><span class="line"><span class="keyword">const</span> server=http.<span class="title function_">createServer</span>(<span class="function">(<span class="params">request,response</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="comment">//每收到一次请求就会执行一次</span></span><br><span class="line">        <span class="comment">//request:请求对象  response:响应对象</span></span><br><span class="line">        response.<span class="title function_">end</span>(<span class="string">&#x27;hello nodejs http&#x27;</span>)<span class="comment">//表示响应工作结束，这个方法后面不要再写响应的一些操作</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//4.调用服务器的监听方法，让服务器监听浏览器的请求</span></span><br><span class="line"><span class="comment">//listen: 监听端口</span></span><br><span class="line">server.<span class="title function_">listen</span>(port,<span class="function">(<span class="params">error</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//用来标识监听有没有出错</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(error);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;服务器已经运行成功了&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">一个端口号只能被一个服务器使用，如果端口高号被占用就换一个</span></span><br><span class="line"><span class="comment">end永远放在响应的最后面，多次调用时没有效果的</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></p><h3 id="获取请求的一些信息"><a href="#获取请求的一些信息" class="headerlink" title="获取请求的一些信息"></a>获取请求的一些信息</h3><h4 id="获取请求路径"><a href="#获取请求路径" class="headerlink" title="获取请求路径"></a>获取请求路径</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//request.url:获取请求路径</span></span><br><span class="line"><span class="keyword">let</span> reUrl=request.<span class="property">url</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reUrl);     <span class="comment">//  /favicon.ico</span></span><br></pre></td></tr></table></figure><h4 id="获取请求路径-1"><a href="#获取请求路径-1" class="headerlink" title="获取请求路径"></a>获取请求路径</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//request.url:获取请求路径</span></span><br><span class="line"><span class="keyword">let</span> reUrl=request.<span class="property">url</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reUrl);     <span class="comment">//  /favicon.ico</span></span><br></pre></td></tr></table></figure><h4 id="获取请求方式"><a href="#获取请求方式" class="headerlink" title="获取请求方式"></a>获取请求方式</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//request.method获取请求方式</span></span><br><span class="line"><span class="keyword">let</span> reqMethod=request.<span class="property">method</span>;   </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reqMethod); <span class="comment">//GET</span></span><br></pre></td></tr></table></figure><h4 id="获取get请求参数"><a href="#获取get请求参数" class="headerlink" title="获取get请求参数"></a>获取get请求参数</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入新的模块-&gt;通过该模块拿到路径</span></span><br><span class="line"><span class="keyword">const</span> url=<span class="built_in">require</span>(<span class="string">&#x27;url&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> parse=url.<span class="title function_">parse</span>(reUrl,<span class="literal">true</span>);<span class="comment">//true解析成一个对象 false解析成一个字符串</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(parse.<span class="property">query</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(parse.<span class="property">query</span>.<span class="property">name</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(parse.<span class="property">query</span>.<span class="property">age</span>);</span><br></pre></td></tr></table></figure><h4 id="获取post请求参数"><a href="#获取post请求参数" class="headerlink" title="获取post请求参数"></a>获取post请求参数</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//request:请求对象  response:响应对象</span></span><br><span class="line"><span class="comment">//获取账号和密码，获取post请求的参数</span></span><br><span class="line"><span class="comment">//以事件的方式来接收,事件名data</span></span><br><span class="line">request.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>,<span class="function">(<span class="params">postData</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(postData.<span class="title function_">toString</span>());</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="nodemon包的使用"><a href="#nodemon包的使用" class="headerlink" title="nodemon包的使用"></a>nodemon包的使用</h3><p>监听代码改动自动更新<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g nodemon </span><br></pre></td></tr></table></figure><br>再VSCODE拓展中找到code Runner—&gt;设置处选择拓展设置—&gt;找到Code-runner:Executor Map并点击再setting.json中编辑—&gt;将”javascript”: “node”改为”javascript”: “nodemon”</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js(4.模块)</title>
      <link href="/posts/3d2cba76.html"/>
      <url>/posts/3d2cba76.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://nodejs.cn/api/">node.js官方api文档</a></p><p>node.js内置模块，自定义模块(自己书写的模块)，第三方模块(使用npm去安装使用)</p><h3 id="node-js常用内置模块"><a href="#node-js常用内置模块" class="headerlink" title="node.js常用内置模块"></a>node.js常用内置模块</h3><h4 id="buffer数据类型"><a href="#buffer数据类型" class="headerlink" title="buffer数据类型"></a>buffer数据类型</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> buf1=<span class="title class_">Buffer</span>.<span class="title function_">from</span>([<span class="number">97</span>,<span class="number">98</span>,<span class="number">99</span>]);<span class="comment">//创建一个buffer对象</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(buf1);  <span class="comment">//&lt;Buffer 61 62 63&gt; 16进制</span></span><br><span class="line"><span class="comment">//通过toString()转换</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(buf1.<span class="title function_">toString</span>());   <span class="comment">//abc</span></span><br><span class="line"><span class="keyword">let</span> buf2=<span class="title class_">Buffer</span>.<span class="title function_">from</span>(<span class="string">&#x27;hello&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(buf2);  <span class="comment">//&lt;Buffer 68 65 6c 6c 6f&gt;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(buf2.<span class="title function_">toString</span>());   <span class="comment">//hello</span></span><br></pre></td></tr></table></figure><h4 id="fs-文件操作"><a href="#fs-文件操作" class="headerlink" title="fs: 文件操作"></a>fs: 文件操作</h4><h5 id="同步读取文件信息："><a href="#同步读取文件信息：" class="headerlink" title="同步读取文件信息："></a>同步读取文件信息：</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//同步读取文件信息</span></span><br><span class="line"><span class="comment">//引入fs模块 和 path模块</span></span><br><span class="line"><span class="keyword">const</span> fs=<span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path=<span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> filePath=path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;hello.txt&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用fs里面的方法</span></span><br><span class="line"><span class="comment">//sync同步  需要读取完成前面的数据才会读取后面的信息</span></span><br><span class="line"><span class="keyword">let</span> content1=fs.<span class="title function_">readFileSync</span>(filePath);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(content1.<span class="title function_">toString</span>());    <span class="comment">//hello~node 读取hello.txt文件内容</span></span><br><span class="line"><span class="keyword">let</span> content2=fs.<span class="title function_">readFileSync</span>(filePath,<span class="string">&#x27;utf-8&#x27;</span>);</span><br><span class="line"><span class="comment">//使用utf-8转换buffer</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(content2);  <span class="comment">//hello~node </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;你好&#x27;</span>);</span><br></pre></td></tr></table></figure><h5 id="异步读取文件信息："><a href="#异步读取文件信息：" class="headerlink" title="异步读取文件信息："></a>异步读取文件信息：</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//异步读取文件信息</span></span><br><span class="line"><span class="comment">//引入fs模块 和 path模块</span></span><br><span class="line"><span class="keyword">const</span> fs=<span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path=<span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> filePath=path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;hello.txt&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//异步读取，需要三个参数 路径；编码；回调函数 </span></span><br><span class="line">fs.<span class="title function_">readFile</span>(filePath,<span class="string">&#x27;utf-8&#x27;</span>,<span class="function">(<span class="params">error,data</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(error)&#123;<span class="comment">//如果读取文件成功，error是null</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(error);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;你好&#x27;</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">你好</span></span><br><span class="line"><span class="comment">hello~node</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h5 id="异步写入文件信息："><a href="#异步写入文件信息：" class="headerlink" title="异步写入文件信息："></a>异步写入文件信息：</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//异步写入</span></span><br><span class="line"><span class="comment">//引入fs模块 和 path模块</span></span><br><span class="line"><span class="keyword">const</span> fs=<span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path=<span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> filePath=path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;hello.txt&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//writeFile：覆盖写  参数:文件路径，写入的内容，&#x27;utf-8&#x27;,回调函数</span></span><br><span class="line">fs.<span class="title function_">writeFile</span>(filePath,<span class="string">&#x27;hello world!&#x27;</span>,<span class="string">&#x27;utf-8&#x27;</span>,<span class="function">(<span class="params">error</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(error)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(error);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;写入成功&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//常用的方法</span></span><br><span class="line"><span class="comment">//renameSync：修改文件名 参数：旧文件名，新文件名</span></span><br><span class="line">fs.<span class="title function_">renameSync</span>(<span class="string">&#x27;001/hello.txt&#x27;</span>,<span class="string">&#x27;001/hello01.txt&#x27;</span>);</span><br><span class="line"><span class="comment">//readdirSync获取当前路径下的所有的文件名</span></span><br><span class="line"><span class="keyword">let</span> paths=fs.<span class="title function_">readdirSync</span>(__dirname);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(paths);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">[</span></span><br><span class="line"><span class="comment">  &#x27;001.docx&#x27;,</span></span><br><span class="line"><span class="comment">  &#x27;buffer数据类型.js&#x27;,</span></span><br><span class="line"><span class="comment">  &#x27;demo.js&#x27;,</span></span><br><span class="line"><span class="comment">  &#x27;fs-同步读取文件信息.js&#x27;,</span></span><br><span class="line"><span class="comment">  &#x27;fs-异步读取文件信息&#x27;,</span></span><br><span class="line"><span class="comment">  &#x27;hello.js&#x27;,</span></span><br><span class="line"><span class="comment">  &#x27;hello.txt&#x27;,</span></span><br><span class="line"><span class="comment">  &#x27;m1.js&#x27;,</span></span><br><span class="line"><span class="comment">  &#x27;module&#x27;,</span></span><br><span class="line"><span class="comment">  &#x27;path内置模块.js&#x27;,</span></span><br><span class="line"><span class="comment">  &#x27;异步写入.js&#x27;</span></span><br><span class="line"><span class="comment">]</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//str类型操作</span></span><br><span class="line"><span class="keyword">let</span> str=<span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">endsWith</span>(<span class="string">&#x27;lo&#x27;</span>));<span class="comment">//true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">endsWith</span>(<span class="string">&#x27;w&#x27;</span>));<span class="comment">//false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">substring</span>(<span class="number">2</span>));<span class="comment">//llo 从下标2开始截取到最后</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">substring</span>(<span class="number">2</span>,<span class="number">3</span>));<span class="comment">//l 从下标2-&gt;3不包含3</span></span><br></pre></td></tr></table></figure><h5 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//把当前文件夹下的js文件的名字都添加前缀node-</span></span><br><span class="line"><span class="comment">//引入fs模块</span></span><br><span class="line"><span class="keyword">const</span> fs=<span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path=<span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> paths=fs.<span class="title function_">readdirSync</span>(__dirname);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(paths.<span class="title function_">at</span>(<span class="number">1</span>));</span><br><span class="line"><span class="comment">//循环，拿到列表里的每一位</span></span><br><span class="line">paths.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(item.<span class="title function_">endsWith</span>(<span class="string">&#x27;.js&#x27;</span>))&#123;</span><br><span class="line">        fs.<span class="title function_">renameSync</span>(path.<span class="title function_">join</span>(__dirname,item),__dirname+<span class="string">&#x27;/&#x27;</span>+<span class="string">&#x27;node-&#x27;</span>+item)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//把当前文件夹的js文件的名字都删除前缀node-</span></span><br><span class="line">paths.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(item.<span class="title function_">startsWith</span>(<span class="string">&#x27;node-&#x27;</span>))&#123;</span><br><span class="line">        fs.<span class="title function_">renameSync</span>(item,item.<span class="title function_">substring</span>(<span class="string">&#x27;node-&#x27;</span>.<span class="property">length</span>))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="http-网络操作"><a href="#http-网络操作" class="headerlink" title="http:网络操作"></a>http:网络操作</h4><h4 id="path-路径操作"><a href="#path-路径操作" class="headerlink" title="path:路径操作"></a><a href="https://nodejs.cn/api/path.html">path:路径操作</a></h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入path模块</span></span><br><span class="line"><span class="keyword">const</span> path=<span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//俩个特殊的变量</span></span><br><span class="line"><span class="comment">//当前执行的文件绝对路径，不包含文件名</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(__dirname);     <span class="comment">//d:\code_trying\VSCode\node.js\001</span></span><br><span class="line"><span class="comment">//当前执行的文件绝对路径，包含文件名</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(__filename);    <span class="comment">//d:\code_trying\VSCode\node.js\001\path内置模块.js</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//extname方法：获取指定文件的扩展名（后缀名）</span></span><br><span class="line"><span class="keyword">let</span> extname=path.<span class="title function_">extname</span>(__filename);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(extname);       <span class="comment">//.js</span></span><br><span class="line"><span class="comment">//basename方法：获取指定文件名</span></span><br><span class="line"><span class="keyword">let</span> basename=path.<span class="title function_">basename</span>(__filename);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(basename);      <span class="comment">//path内置模块.js</span></span><br><span class="line"><span class="comment">//dirname方法：获取指定文件当前所在的绝对路径</span></span><br><span class="line"><span class="keyword">let</span> dirname=path.<span class="title function_">dirname</span>(__filename);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(dirname);       <span class="comment">//d:\code_trying\VSCode\node.js\001</span></span><br><span class="line"><span class="comment">//parse方法：获取文件信息</span></span><br><span class="line"><span class="keyword">let</span> parse=path.<span class="title function_">parse</span>(__filename);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(parse);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">  root: &#x27;d:\\&#x27;,</span></span><br><span class="line"><span class="comment">  dir: &#x27;d:\\code_trying\\VSCode\\node.js\\001&#x27;,</span></span><br><span class="line"><span class="comment">  base: &#x27;path内置模块.js&#x27;,</span></span><br><span class="line"><span class="comment">  ext: &#x27;.js&#x27;,</span></span><br><span class="line"><span class="comment">  name: &#x27;path内置模块&#x27;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(parse.<span class="property">name</span>);    <span class="comment">//path内置模块</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//拼接操作(可以拿到某一个文件的完整态)</span></span><br><span class="line"><span class="keyword">let</span> fullpath1=path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;path.js&#x27;</span>);           <span class="comment">//d:\code_trying\VSCode\node.js\001\path.js</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(fullpath1);</span><br><span class="line"><span class="comment">//获取module文件夹下的m1.js</span></span><br><span class="line"><span class="keyword">let</span> fullpath2=path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;module&#x27;</span>,<span class="string">&#x27;m1.js&#x27;</span>);    <span class="comment">//d:\code_trying\VSCode\node.js\001\module\m1.js</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(fullpath2);</span><br></pre></td></tr></table></figure><h4 id="querystring-查询参数-查询字符串-解析？后面的参数"><a href="#querystring-查询参数-查询字符串-解析？后面的参数" class="headerlink" title="querystring: 查询参数(查询字符串)解析？后面的参数"></a>querystring: 查询参数(查询字符串)解析？后面的参数</h4><h4 id="url-解析"><a href="#url-解析" class="headerlink" title="url: 解析"></a>url: 解析</h4>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多线程</title>
      <link href="/posts/5729df21.html"/>
      <url>/posts/5729df21.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、线程简介"><a href="#一、线程简介" class="headerlink" title="一、线程简介"></a>一、线程简介</h2><h3 id="1-多任务"><a href="#1-多任务" class="headerlink" title="1.多任务"></a>1.多任务</h3><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304031538778.png" alt="多任务"></p><p>现实中太多这样同时做多件事情的例子了，看起来是多个任务都在做，其实本质上我们的大脑在同一时间依旧只做了一件事情。</p><h3 id="2-多线程"><a href="#2-多线程" class="headerlink" title="2.多线程"></a>2.多线程</h3><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304031537042.png" alt="多线程"></p><p>原来是一条路，慢慢因为车太多了，道路阻塞，效率极低。为了提高使用的效率，能够充分利用道路，于是加了多个车道。从此，妈妈再也不用担心道路阻塞了。</p><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304031538209.png" alt="普通方法调用和多线程"></p><h3 id="3-进程、程序、线程"><a href="#3-进程、程序、线程" class="headerlink" title="3.进程、程序、线程"></a>3.进程、程序、线程</h3><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304031539329.png" alt="在这里插入图片描述"></p><h3 id="4-Process与Thread"><a href="#4-Process与Thread" class="headerlink" title="4.Process与Thread"></a>4.Process与Thread</h3><p>说起进程,就不得不说下程序。程序是指令和数据的有序集合，其本身没有任何运行的含义，是一个静态的概念。</p><p>而进程则是执行程序的依次执行过程，它是一个动态的概念。是系统资源分配的单位。</p><p>通常在一个进程中可以包含若干个线程，当然一个进程中至少有一个线程，不然没有存在的意义。线程是CPU调度和执行的单位。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">注意：</span><br><span class="line">​ 很多多线程是模拟出来的，真正的多线程是指有多个cpu，即多核，如服务器。如果是模拟出来的多线程，即在一个cpu的情况下，在同一个时间点，cpu只能执行一个代码，因为切换的很快，所以就有同时执行的错局。</span><br></pre></td></tr></table></figure><h3 id="5-核心概念"><a href="#5-核心概念" class="headerlink" title="5.核心概念"></a>5.核心概念</h3><p>线程就是独立的执行路径<br>在程序运行时,即使没有自己创建线程,后台也会有多个线程,比如主线程,GC线程<br>main()称之为主线程,为系统的入口,用于执行整个程序<br>在一个进程中,如果开辟了多个线程,线程的运行是由调度器（cpu）安排调度的,调度器是与操作系统紧密相关的,先后顺序是不能人为干预的<br>对同一份资源操作时mm会存在资源抢夺的问题,需要加入并发控制<br>线程会带来额外的开销,如CPU调度时间,并发控制开销<br>每个线程在自己的工作内存交互,内存控制不当会造成数据不一致</p><h2 id="二、线程实现"><a href="#二、线程实现" class="headerlink" title="二、线程实现"></a>二、线程实现</h2><h3 id="1-线程创建"><a href="#1-线程创建" class="headerlink" title="1.线程创建"></a>1.线程创建</h3><h4 id="1-1继承Thread类-重要"><a href="#1-1继承Thread类-重要" class="headerlink" title="1.1继承Thread类(重要)"></a>1.1继承Thread类(重要)</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">自定义线程类继承`Thread`类</span><br><span class="line"></span><br><span class="line">重写`run()`方法，编写线程执行体</span><br><span class="line"></span><br><span class="line">创建线程对象，调用`start()`方法启动线程</span><br></pre></td></tr></table></figure><p><strong>实现：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">testThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">200</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;我在看代码----&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">testThread</span> <span class="variable">testThread1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">testThread</span>();</span><br><span class="line">        testThread1.run();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">600</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;我在学习多线程----&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>总结：</strong></p><p>线程不一定立即执行，CPU安排调度<br><strong>案例：(下载图片)</strong></p><p><a href="https://commons.apache.org/proper/commons-io/">1.commoms-io包下载(下载Binaries)</a></p><p>2.把commons-io-2.6.jar包复制到指定的Module的lib目录中</p><p>3.将commons-io-2.6.jar加入到classpath中</p><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304031607009.png" alt="image-20230403160747297"></p><p>4.代码编写</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.io.FileUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="comment">//练习Thread,实现多线程同步下载图片</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">testThread2</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String url; <span class="comment">//网络图片地址</span></span><br><span class="line">    <span class="keyword">private</span> String name; <span class="comment">//图片名</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">testThread2</span><span class="params">(String url,String name)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.url = url;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//下载图片线程的执行体</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">WebDownloader</span> <span class="variable">webDownloader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WebDownloader</span>();</span><br><span class="line">        webDownloader.downloader(url,name);</span><br><span class="line">        System.out.println(<span class="string">&quot;下载了文件名为:&quot;</span>+name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">testThread2</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">testThread2</span>(<span class="string">&quot;https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304022214490.jpg&quot;</span>, <span class="string">&quot;1.jpg&quot;</span>);</span><br><span class="line">        <span class="type">testThread2</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">testThread2</span>(<span class="string">&quot;https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/%E5%9B%BE%E7%89%871.png&quot;</span>, <span class="string">&quot;2.png&quot;</span>);</span><br><span class="line">        <span class="type">testThread2</span> <span class="variable">t3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">testThread2</span>(<span class="string">&quot;https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304022215946.png&quot;</span>, <span class="string">&quot;3.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line">        t3.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//下载器</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">WebDownloader</span>&#123;</span><br><span class="line">    <span class="comment">//下载方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">downloader</span><span class="params">(String url,String name)</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            FileUtils.copyURLToFile(<span class="keyword">new</span> <span class="title class_">URL</span>(url),<span class="keyword">new</span> <span class="title class_">File</span>(name));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.out.println(<span class="string">&quot;IO异常，downloader方法出现问题&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-2实现Runnable接口-重点"><a href="#1-2实现Runnable接口-重点" class="headerlink" title="1.2实现Runnable接口(重点)"></a>1.2实现Runnable接口(重点)</h4><p><strong>推荐使用Runnable对象,因为Java单继承的局限性</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">自定义线程类实现`Runnable`接口</span><br><span class="line"></span><br><span class="line">实现`run()`方法,编写线程执行体</span><br><span class="line"></span><br><span class="line">创建线程对象,调用`start()`方法启动对象</span><br></pre></td></tr></table></figure><p><strong>实现：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo3_CreateRunnable</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//run方法线程体</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;我在看代码----&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建runnable接口的实现类对象</span></span><br><span class="line">        <span class="type">Demo3_CreateRunnable</span> <span class="variable">testThread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Demo3_CreateRunnable</span>();</span><br><span class="line">        <span class="comment">//创建线程对象,通过线程对象来开启我们的线程,代理</span></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(testThread);</span><br><span class="line">        <span class="comment">//调用start（）开启线程</span></span><br><span class="line">        thread.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//new Thread(testThread).start();</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">200</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;我在学习多线程----&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>案例：</strong></p><p>火车票:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 多个线程同时操作同一个对象  买火车票案例</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//发现问题:多个线程操作同一个资源的情况下,线程不安全,数据紊乱</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RunnableThreadTest</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="comment">//票数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">ticketnum</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(ticketnum&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">200</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(Thread.currentThread().getName()+ <span class="string">&quot;---&gt;拿到了第&quot;</span> + ticketnum-- + <span class="string">&quot;张票&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">RunnableThreadTest</span> <span class="variable">runnableThreadTest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RunnableThreadTest</span>();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(runnableThreadTest,<span class="string">&quot;张三&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(runnableThreadTest,<span class="string">&quot;李四&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(runnableThreadTest,<span class="string">&quot;王五&quot;</span>).start();</span><br><span class="line"><span class="comment">//        输出，会发现有重复的票</span></span><br><span class="line"><span class="comment">//        李四---&gt;拿到了第10张票</span></span><br><span class="line"><span class="comment">//        张三---&gt;拿到了第8张票</span></span><br><span class="line"><span class="comment">//        王五---&gt;拿到了第9张票</span></span><br><span class="line"><span class="comment">//        张三---&gt;拿到了第7张票</span></span><br><span class="line"><span class="comment">//        李四---&gt;拿到了第6张票</span></span><br><span class="line"><span class="comment">//        王五---&gt;拿到了第7张票</span></span><br><span class="line"><span class="comment">//        王五---&gt;拿到了第5张票</span></span><br><span class="line"><span class="comment">//        李四---&gt;拿到了第5张票</span></span><br><span class="line"><span class="comment">//        张三---&gt;拿到了第4张票</span></span><br><span class="line"><span class="comment">//        李四---&gt;拿到了第2张票</span></span><br><span class="line"><span class="comment">//        王五---&gt;拿到了第1张票</span></span><br><span class="line"><span class="comment">//        张三---&gt;拿到了第3张票</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>龟兔赛跑:</p><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304040951461.png" alt="在这里插入图片描述"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 模拟龟兔赛跑</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RunnableGuiTu</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line">    <span class="comment">//胜利者</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String winner;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line">            <span class="comment">//模拟兔子休息</span></span><br><span class="line">            <span class="keyword">if</span> (Thread.currentThread().getName().equals(<span class="string">&quot;兔子&quot;</span>) &amp;&amp; i % <span class="number">10</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Thread.sleep(<span class="number">1</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//判断比赛是否结束</span></span><br><span class="line">            <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> gameOver(i);</span><br><span class="line">            <span class="comment">//如果比赛结束,停止程序</span></span><br><span class="line">            <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot;---&gt;跑了&quot;</span> + i + <span class="string">&quot;步&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断是否完成</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">gameOver</span><span class="params">(<span class="type">int</span> steps)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (winner != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (steps &gt;= <span class="number">100</span>) &#123;</span><br><span class="line">                winner = Thread.currentThread().getName();</span><br><span class="line">                System.out.println(<span class="string">&quot;winner is &quot;</span> + winner);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">RunnableGuiTu</span> <span class="variable">race</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RunnableGuiTu</span>();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(race, <span class="string">&quot;兔子&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(race, <span class="string">&quot;乌龟&quot;</span>).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-3实现Callable接口（了解）"><a href="#1-3实现Callable接口（了解）" class="headerlink" title="1.3实现Callable接口（了解）"></a>1.3实现Callable接口（了解）</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">实现Callable接口，需要返回值类型</span><br><span class="line"></span><br><span class="line">重写call方法，需要抛出异常</span><br><span class="line"></span><br><span class="line">创建目标对象</span><br><span class="line"></span><br><span class="line">创建执行服务：ExecutorService ser = Executors.newFixedThreadPool(1);</span><br><span class="line"></span><br><span class="line">提交执行：Future result1 = ser.submit(11);</span><br><span class="line"></span><br><span class="line">获取结果：boolean r1 = result1.get()</span><br><span class="line"></span><br><span class="line">关闭服务：ser.shutdownNow();</span><br></pre></td></tr></table></figure><p><strong>实现</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.concurrent.*;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 实现Callable接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CallableTest</span> <span class="keyword">implements</span> <span class="title class_">Callable</span>&lt;Boolean&gt; &#123;</span><br><span class="line">    <span class="keyword">private</span> String url; <span class="comment">//网络图片地址</span></span><br><span class="line">    <span class="keyword">private</span> String name; <span class="comment">//图片名</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CallableTest</span><span class="params">(String url,String name)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.url = url;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//下载图片线程的执行体</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Boolean <span class="title function_">call</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">WebDownloader</span> <span class="variable">webDownloader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WebDownloader</span>();</span><br><span class="line">        webDownloader.downloader(url, name);</span><br><span class="line">        System.out.println(<span class="string">&quot;下载了文件名为:&quot;</span> + name);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ExecutionException, InterruptedException &#123;</span><br><span class="line">        <span class="type">CallableTest</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CallableTest</span>(<span class="string">&quot;https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304022214490.jpg&quot;</span>, <span class="string">&quot;1.jpg&quot;</span>);</span><br><span class="line">        <span class="type">CallableTest</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CallableTest</span>(<span class="string">&quot;https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/%E5%9B%BE%E7%89%871.png&quot;</span>, <span class="string">&quot;2.png&quot;</span>);</span><br><span class="line">        <span class="type">CallableTest</span> <span class="variable">t3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CallableTest</span>(<span class="string">&quot;https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304022215946.png&quot;</span>, <span class="string">&quot;3.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建执行服务</span></span><br><span class="line">        <span class="type">ExecutorService</span> <span class="variable">ser</span> <span class="operator">=</span> Executors.newFixedThreadPool(<span class="number">3</span>);</span><br><span class="line">        <span class="comment">//提交执行</span></span><br><span class="line">        Future&lt;Boolean&gt; r = ser.submit(t1);</span><br><span class="line">        Future&lt;Boolean&gt; r1 = ser.submit(t2);</span><br><span class="line">        Future&lt;Boolean&gt; r2 = ser.submit(t3);</span><br><span class="line">        <span class="comment">//获取结果</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">res</span> <span class="operator">=</span> r.get();</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">res1</span> <span class="operator">=</span> r1.get();</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">res2</span> <span class="operator">=</span> r2.get();</span><br><span class="line">        <span class="comment">//关闭服务</span></span><br><span class="line">        ser.shutdown();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//class WebDownloader在前面下载图片已经定义了，这里就不用再次写，直接使用就好</span></span><br></pre></td></tr></table></figure><p><strong>好处</strong></p><p>可以定义返回值</p><p>可以抛出异常</p><h4 id="1-4Thread和Runnable对比"><a href="#1-4Thread和Runnable对比" class="headerlink" title="1.4Thread和Runnable对比"></a>1.4Thread和Runnable对比</h4><p>继承Thred类:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">子类继承Thread类具备多线程能力</span><br><span class="line">启动线程:子类对象.start()</span><br><span class="line">不建议使用:避免OOP单继承局限性</span><br></pre></td></tr></table></figure><p>实现Runnable接口:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">实现接口Runnable具有多线程能力</span><br><span class="line">启动线程:传入目标对象+Thread对象.start()</span><br><span class="line">推荐使用:避免单继承局限性,灵活方便,方便同一个对象被多个线程使用</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304041419873.png" alt="img"></p><h3 id="2-静态代理"><a href="#2-静态代理" class="headerlink" title="2.静态代理"></a>2.静态代理</h3><p>​    <img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304041419275.png" alt="在这里插入图片描述"></p><p><strong>实现: 结婚案例</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DemoMarry</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">WeddingCompany</span> <span class="variable">weddingCompany</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WeddingCompany</span>(<span class="keyword">new</span> <span class="title class_">You</span>());</span><br><span class="line">        weddingCompany.happyMarry();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//结婚 函数式接口</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Marry</span>&#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">happyMarry</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//真实角色:你去结婚</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">You</span> <span class="keyword">implements</span> <span class="title class_">Marry</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">happyMarry</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;UnSpMan要结婚了,超开心&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//代理角色:帮助你结婚</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">WeddingCompany</span> <span class="keyword">implements</span> <span class="title class_">Marry</span>&#123;</span><br><span class="line">    <span class="comment">//代理--&gt;真实目标角色角色,帮谁结婚</span></span><br><span class="line">    <span class="keyword">private</span> Marry target;</span><br><span class="line">    <span class="comment">//构造函数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">WeddingCompany</span><span class="params">(Marry target)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.target = target;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">happyMarry</span><span class="params">()</span> &#123;</span><br><span class="line">        before();</span><br><span class="line">        <span class="built_in">this</span>.target.happyMarry();</span><br><span class="line">        after();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;结婚之后,收尾款&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">after</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;结婚之前,布置现场&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>优化:使用线程,Lamda表达式</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 线程中的代理模式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo8_StaticProxy</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(()-&gt; System.out.println(<span class="string">&quot;我爱你&quot;</span>)).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">WeddingCompany</span>(<span class="keyword">new</span> <span class="title class_">You</span>()).happyMarry();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//WeddingCompany...上一个文件定义过了这里就直接使用了</span></span><br></pre></td></tr></table></figure><p><strong>总结</strong></p><p>真实对象和代理对象都要实现一个接口<br>代理对象要代理真实角色</p><p><strong>好处</strong></p><p>代理对象可以做很多真实对象做不了的事情<br>真实对象专注做自己的事</p><h3 id="3-Lamda表达式"><a href="#3-Lamda表达式" class="headerlink" title="3.Lamda表达式"></a>3.Lamda表达式</h3><p><strong>介绍</strong></p><ul><li><p>λ 希腊字母表中排序第十一位的字母，英语名称为 Lamda</p></li><li><p>避免匿名内部类定义过多</p></li><li><p>其实质属于函数式编程的概念</p></li><li><p>去掉了一堆没有意义的代码,只留下核心逻辑</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(params)-&gt; expression[表达式]</span><br><span class="line"></span><br><span class="line">(params) -&gt; statement[语句]</span><br><span class="line"></span><br><span class="line">[(params)-&gt; &#123;statements&#125;</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a -&gt; System.out.println(<span class="string">&quot;i like lamda--&gt;&quot;</span>+a)</span><br></pre></td></tr></table></figure><p>new Thread (()-&gt;System.out.println(“多线程学习。。。。”)).start();</p><p>理解Functional Interface (函数式接口) 是学习Java8 lamda表达式的关键</p><h4 id="函数式接口的定义"><a href="#函数式接口的定义" class="headerlink" title="函数式接口的定义:"></a>函数式接口的定义:</h4><p> 任何接口,如果只包含唯一一个抽象方法,那么它就是一个函数式接口.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对于函数式接口,我们可以通过Lamda表达式来创建该接口的对象.</p><p><strong>实现：</strong></p><p><strong>案例1:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 推导lamda表达式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo9_Lamda</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">ILike</span> <span class="variable">like</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Like</span>();</span><br><span class="line">        like.lamda();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1.定义一个函数式接口</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">ILike</span> &#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">lamda</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.实现类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Like</span> <span class="keyword">implements</span> <span class="title class_">ILike</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">lamda</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;I like lamda&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>优化1</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo10_Lamda1</span> &#123;</span><br><span class="line">    <span class="comment">//3. 静态内部类</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Like1</span> <span class="keyword">implements</span> <span class="title class_">ILike</span> &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">lamda</span><span class="params">()</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;I like lamda1&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//3.静态内部类</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">ILike</span> <span class="variable">like</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Like1</span>();</span><br><span class="line">        like.lamda();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>优化2</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo11_Lamda2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//4.局部内部类</span></span><br><span class="line">        <span class="keyword">class</span> <span class="title class_">Like2</span> <span class="keyword">implements</span> <span class="title class_">ILike</span> &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">lamda</span><span class="params">()</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;I like lamda2&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">ILike</span> <span class="variable">like</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Like2</span>();</span><br><span class="line">        like.lamda();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>优化3</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo12_Lamda3</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//5.匿名内部类,没有类的名称,必须借助接口或者父类</span></span><br><span class="line">        <span class="type">ILike</span> <span class="variable">like</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ILike</span> () &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">lamda</span><span class="params">()</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;I like lamda3&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        like.lamda();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>最终版</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo13_Lamda4</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//6.lamda简化</span></span><br><span class="line">        <span class="type">ILike</span> <span class="variable">like</span> <span class="operator">=</span> () -&gt;&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;I like lamda4&quot;</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        like.lamda();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>案例2:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo14_LamdaCase2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 1.lamda</span></span><br><span class="line">        <span class="type">ILove</span> <span class="variable">love</span> <span class="operator">=</span> (<span class="type">int</span> a) -&gt; &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;I love you --&gt;&quot;</span> + a);</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 2.lamda简化1.0</span></span><br><span class="line">        love = (a) -&gt; &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;I love you --&gt;&quot;</span> + a);</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 3.lamda简化2.0</span></span><br><span class="line">        love = a -&gt; &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;I love you --&gt;&quot;</span> + a);</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 3.lamda简化3.0</span></span><br><span class="line">        love = a -&gt; System.out.println(<span class="string">&quot;I love you --&gt;&quot;</span> + a);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**总结:</span></span><br><span class="line"><span class="comment">         * &#123;&#125;简略的条件是只能有一行代码,多行&#123;&#125;就不能简略了</span></span><br><span class="line"><span class="comment">         * 前提是接口为函数式接口(只能有一个方法)</span></span><br><span class="line"><span class="comment">         * 多个参数也可以去掉参数类型,要去掉就都去掉,必须加上()</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        love.love(<span class="number">520</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">ILove</span> &#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">love</span><span class="params">(<span class="type">int</span> a)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、线程状态"><a href="#三、线程状态" class="headerlink" title="三、线程状态"></a>三、线程状态</h2><h3 id="1-线程五大状态"><a href="#1-线程五大状态" class="headerlink" title="1.线程五大状态:"></a>1.线程五大状态:</h3><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304041544931.png" alt="在这里插入图片描述"></p><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304041544001.png" alt="img"></p><h3 id="2-线程方法"><a href="#2-线程方法" class="headerlink" title="2.线程方法"></a>2.线程方法</h3><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304041545645.png" alt="在这里插入图片描述"></p><h4 id="2-1停止线程"><a href="#2-1停止线程" class="headerlink" title="2.1停止线程"></a>2.1停止线程</h4><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304041545302.png" alt="在这里插入图片描述"></p><p><strong>停止线程案例:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试stop</span></span><br><span class="line"><span class="comment"> * 1.建议线程正常停止--&gt;利用次数,不建议死循环</span></span><br><span class="line"><span class="comment"> * 2.建议使用标志位--&gt;设置一个标志位</span></span><br><span class="line"><span class="comment"> * 3.不要使用stop或者destroy等过时或者JDK不建议使用的方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo15_StopThread</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line">    <span class="comment">// 1. 设置一个标志位</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (flag) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;run...Thread&quot;</span> + i++);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. 设置一个公开的方法停止线程,转换标志位</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.flag = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Demo15_StopThread</span> <span class="variable">stop</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Demo15_StopThread</span>();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(stop).start();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;main...&quot;</span> + i);</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">900</span>) &#123;</span><br><span class="line">                <span class="comment">//调用stop()切换标志位,让线程终止</span></span><br><span class="line">                stop.stop();</span><br><span class="line">                System.out.println(<span class="string">&quot;该线程停止了&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-2线程休眠"><a href="#2-2线程休眠" class="headerlink" title="2.2线程休眠"></a>2.2线程休眠</h4><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304041922826.png" alt="img"></p><p><strong>线程休眠案例:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 模拟网络延迟:放大问题的发生性</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo16_SleepThread</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//票数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">ticketNums</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (ticketNums &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//捕获异常</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">200</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot;---&gt;拿到了第&quot;</span> + ticketNums-- + <span class="string">&quot;张票&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Demo4_TrainTicketsCase</span> <span class="variable">ticket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Demo4_TrainTicketsCase</span>();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(ticket, <span class="string">&quot;小红&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(ticket, <span class="string">&quot;老师&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(ticket, <span class="string">&quot;黄牛1&quot;</span>).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 模拟倒计时</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo17_SleepThread2</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            tenDown();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//模拟倒计时</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">tenDown</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">10</span>;<span class="comment">//10秒</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">            System.out.println(num--);</span><br><span class="line">            <span class="keyword">if</span> (num &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 每一秒获取当前时间</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo18_SleepThread3</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//获取系统当前时间</span></span><br><span class="line">        <span class="type">Date</span> <span class="variable">startTime</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>(System.currentTimeMillis());</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                <span class="comment">//更新系统时间</span></span><br><span class="line">                System.out.println(<span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;HH:mm:ss&quot;</span>).format(startTime));</span><br><span class="line">                startTime = <span class="keyword">new</span> <span class="title class_">Date</span>(System.currentTimeMillis());</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-3线程礼让"><a href="#2-3线程礼让" class="headerlink" title="2.3线程礼让"></a>2.3线程礼让</h4><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304042032691.png" alt="在这里插入图片描述"></p><p><strong>案例:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试礼让线程</span></span><br><span class="line"><span class="comment"> * 礼让不一定成功,看cpu心情</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo19_YieldThread</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">MyYeild</span> <span class="variable">myYeild</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyYeild</span>();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(myYeild, <span class="string">&quot;a&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(myYeild, <span class="string">&quot;b&quot;</span>).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyYeild</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + <span class="string">&quot;线程开始执行&quot;</span>);</span><br><span class="line">        Thread.<span class="keyword">yield</span>();<span class="comment">//礼让</span></span><br><span class="line">        System.out.println(Thread.currentThread().getName() + <span class="string">&quot;线程停止执行&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-4线程插队"><a href="#2-4线程插队" class="headerlink" title="2.4线程插队"></a>2.4线程插队</h4><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304042033425.png" alt="在这里插入图片描述"></p><p><strong>案例:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试join</span></span><br><span class="line"><span class="comment"> * 插队</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo20_JoinThread</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">500</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;线程vip&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="comment">//启动我们的线程</span></span><br><span class="line">        <span class="type">Demo20_JoinThread</span> <span class="variable">joinThread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Demo20_JoinThread</span>();</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(joinThread);</span><br><span class="line">        thread.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//主线程</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">500</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">200</span>) &#123;</span><br><span class="line">                thread.join();<span class="comment">//插队</span></span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;main&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-线程状态观测"><a href="#3-线程状态观测" class="headerlink" title="3.线程状态观测"></a>3.线程状态观测</h3><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304051102151.png" alt="在这里插入图片描述"></p><p><strong>实现:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 观察测试线程状态</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo21_ThreadState</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;//&quot;</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//观察状态</span></span><br><span class="line">        Thread.<span class="type">State</span> <span class="variable">state</span> <span class="operator">=</span> thread.getState();</span><br><span class="line">        System.out.println(state);</span><br><span class="line">        <span class="comment">//观察启动后</span></span><br><span class="line">        thread.start();</span><br><span class="line">        state = thread.getState();</span><br><span class="line">        System.out.println(state);<span class="comment">//Run</span></span><br><span class="line">        <span class="keyword">while</span> (state != Thread.State.TERMINATED) &#123;<span class="comment">//只要现成不终止,就一直输出状态</span></span><br><span class="line">            Thread.sleep(<span class="number">100</span>);</span><br><span class="line">            state = thread.getState();<span class="comment">//更新线程状态</span></span><br><span class="line">            System.out.println(state);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//死亡后的线程不能再启动了,启动会报异常</span></span><br><span class="line">        <span class="comment">//thread.start();</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-线程优先级"><a href="#4-线程优先级" class="headerlink" title="4.线程优先级"></a>4.线程优先级</h3><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304051103574.png" alt="在这里插入图片描述"></p><p><strong>实现:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 线程优先级</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo22_ThreadPriority</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//主线程默认优先级</span></span><br><span class="line">        System.out.println(Thread.currentThread().getName()+<span class="string">&quot;--&gt;&quot;</span>+Thread.currentThread().getPriority());</span><br><span class="line"></span><br><span class="line">        <span class="type">MyPriority</span> <span class="variable">myPriority</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyPriority</span>();</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(myPriority);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(myPriority);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(myPriority);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread4</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(myPriority);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread5</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(myPriority);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//先设置优先级,再启动</span></span><br><span class="line">        thread1.start();</span><br><span class="line"></span><br><span class="line">        thread2.setPriority(<span class="number">1</span>);</span><br><span class="line">        thread2.start();</span><br><span class="line"></span><br><span class="line">        thread3.setPriority(<span class="number">4</span>);</span><br><span class="line">        thread3.start();</span><br><span class="line"></span><br><span class="line">        thread4.setPriority(Thread.MAX_PRIORITY);<span class="comment">//MAX_PRIORITY=10</span></span><br><span class="line">        thread4.start();</span><br><span class="line"></span><br><span class="line">        thread5.setPriority(<span class="number">8</span>);</span><br><span class="line">        thread5.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyPriority</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(Thread.currentThread().getName()+<span class="string">&quot;--&gt;&quot;</span>+Thread.currentThread().getPriority());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-守护-daemon-线程"><a href="#5-守护-daemon-线程" class="headerlink" title="5.守护(daemon)线程"></a>5.守护(daemon)线程</h3><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304051104671.png" alt="在这里插入图片描述"></p><p><strong>实现:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试守护线程</span></span><br><span class="line"><span class="comment"> * 上帝守护你</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo23_DaemonThread</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">God</span> <span class="variable">god</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">God</span>();</span><br><span class="line">        <span class="type">You</span> <span class="variable">you</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">You</span>();</span><br><span class="line"></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(god);</span><br><span class="line">        <span class="comment">//默认false表示是用户线程,正常的线程都是用户线程...</span></span><br><span class="line">        thread.setDaemon(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//上帝守护线程启动</span></span><br><span class="line">        thread.start();</span><br><span class="line">        <span class="comment">//你 用户线程启动</span></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(you).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//上帝</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">God</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;上帝保佑着你&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//你</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">You</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">36500</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;你一生都开心的活着&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;====goodbye!world====&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四、线程同步"><a href="#四、线程同步" class="headerlink" title="四、线程同步"></a>四、线程同步</h2><h3 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1.介绍"></a>1.介绍</h3><p><strong>多个线程操作同一个资源 </strong></p><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304051307902.png" alt="在这里插入图片描述"></p><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304051307286.png" alt="在这里插入图片描述"></p><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304051307637.png" alt="在这里插入图片描述"></p><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304051308777.png" alt="在这里插入图片描述"></p><h3 id="2-不安全的线程案例"><a href="#2-不安全的线程案例" class="headerlink" title="2.不安全的线程案例"></a>2.不安全的线程案例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//不安全买票</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo24_UnsafeBuyTicket</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">BuyTicket</span> <span class="variable">buyTicket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BuyTicket</span>();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(buyTicket, <span class="string">&quot;张三&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(buyTicket, <span class="string">&quot;李四&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(buyTicket, <span class="string">&quot;王五&quot;</span>).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BuyTicket</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line">    <span class="comment">//票</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">ticketNums</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//买票</span></span><br><span class="line">        <span class="keyword">while</span> (flag) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                buy();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//买票</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">buy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//判断是否有票</span></span><br><span class="line">        <span class="keyword">if</span> (ticketNums &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//延迟</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">1</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//买票</span></span><br><span class="line">        System.out.println(Thread.currentThread().getName() + <span class="string">&quot;拿到&quot;</span> + ticketNums--);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 不安全的取钱</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo25_UnsafeBank</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Account</span> <span class="variable">account</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Account</span>(<span class="number">100</span>, <span class="string">&quot;结婚基金&quot;</span>);</span><br><span class="line">        <span class="type">Drawing</span> <span class="variable">you</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Drawing</span>(account, <span class="number">50</span>, <span class="string">&quot;展堂&quot;</span>);</span><br><span class="line">        <span class="type">Drawing</span> <span class="variable">girlfriend</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Drawing</span>(account, <span class="number">100</span>, <span class="string">&quot;sad&quot;</span>);</span><br><span class="line">        you.start();</span><br><span class="line">        girlfriend.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//账户</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Account</span> &#123;</span><br><span class="line">    <span class="type">int</span> money;<span class="comment">//余额</span></span><br><span class="line">    String cardName;<span class="comment">//卡名</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Account</span><span class="params">(<span class="type">int</span> money, String cardName)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.money = money;</span><br><span class="line">        <span class="built_in">this</span>.cardName = cardName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//银行:模拟取款</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Drawing</span> <span class="keyword">extends</span> <span class="title class_">Thread</span> &#123;</span><br><span class="line">    Account account;<span class="comment">//账户</span></span><br><span class="line">    <span class="type">int</span> drawingMoney;<span class="comment">//取金额</span></span><br><span class="line">    <span class="type">int</span> nowMoney;<span class="comment">//你手里的钱</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Drawing</span><span class="params">(Account account, <span class="type">int</span> drawingMoney, String name)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name);</span><br><span class="line">        <span class="built_in">this</span>.account = account;</span><br><span class="line">        <span class="built_in">this</span>.drawingMoney = drawingMoney;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//取钱</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//判断是否有钱</span></span><br><span class="line">        <span class="keyword">if</span> (account.money - drawingMoney &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot;余额不足,不能进行取钱&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">1000</span>);<span class="comment">//放大问题的发生性</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//卡内金额 = 余额-你的钱</span></span><br><span class="line">        account.money = account.money - drawingMoney;</span><br><span class="line">        <span class="comment">//你手里的钱</span></span><br><span class="line">        nowMoney = nowMoney + drawingMoney;</span><br><span class="line">        System.out.println(account.cardName + <span class="string">&quot;余额为:&quot;</span> + account.money);</span><br><span class="line">        <span class="comment">//this.getName()==Thread.currentThread().getName()</span></span><br><span class="line">        System.out.println(<span class="built_in">this</span>.getName() + <span class="string">&quot;手里的钱:&quot;</span> + nowMoney);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//线程不安全的集合</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo26_UnsafeList</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        List&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Thread</span>(()-&gt;&#123;</span><br><span class="line">                list.add(Thread.currentThread().getName());</span><br><span class="line">            &#125;).start();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(list.size());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-同步方法"><a href="#3-同步方法" class="headerlink" title="3.同步方法"></a>3.同步方法</h3><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304051906665.png" alt="在这里插入图片描述"></p><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304051907802.png" alt="在这里插入图片描述"></p><p>​    同步方法,锁的是this</p><p><strong>实现:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//安全买票</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo27_SafeBuyTicket</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">BuyTicket1</span> <span class="variable">buyTicket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BuyTicket1</span>();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(buyTicket, <span class="string">&quot;张三&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(buyTicket, <span class="string">&quot;李四&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(buyTicket, <span class="string">&quot;王五&quot;</span>).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BuyTicket1</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line">    <span class="comment">//票</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">ticketNums</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//买票</span></span><br><span class="line">        <span class="keyword">while</span> (flag) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                buy();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//synchronized 同步方法,锁的是this</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">buy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//判断是否有票</span></span><br><span class="line">        <span class="keyword">if</span> (ticketNums &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//延迟</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">1</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//买票</span></span><br><span class="line">        System.out.println(Thread.currentThread().getName() + <span class="string">&quot;拿到&quot;</span> + ticketNums--);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-同步块"><a href="#4-同步块" class="headerlink" title="4.同步块"></a>4.同步块</h3><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304051914950.png" alt="在这里插入图片描述"></p><p>锁的对象就是变量的量,需要增删改查的对象</p><p><strong>实现:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 安全的取钱 同步块</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo28_SafeBank</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Account1</span> <span class="variable">account</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Account1</span>(<span class="number">100</span>, <span class="string">&quot;结婚基金&quot;</span>);</span><br><span class="line">        <span class="type">Drawing1</span> <span class="variable">you</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Drawing1</span>(account, <span class="number">50</span>, <span class="string">&quot;展堂&quot;</span>);</span><br><span class="line">        <span class="type">Drawing1</span> <span class="variable">girlfriend</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Drawing1</span>(account, <span class="number">100</span>, <span class="string">&quot;sad&quot;</span>);</span><br><span class="line">        you.start();</span><br><span class="line">        girlfriend.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//账户</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Account1</span> &#123;</span><br><span class="line">    <span class="type">int</span> money;<span class="comment">//余额</span></span><br><span class="line">    String cardName;<span class="comment">//卡名</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Account1</span><span class="params">(<span class="type">int</span> money, String cardName)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.money = money;</span><br><span class="line">        <span class="built_in">this</span>.cardName = cardName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//银行:模拟取款</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Drawing1</span> <span class="keyword">extends</span> <span class="title class_">Thread</span> &#123;</span><br><span class="line">    Account1 account;<span class="comment">//账户</span></span><br><span class="line">    <span class="type">int</span> drawingMoney;<span class="comment">//取金额</span></span><br><span class="line">    <span class="type">int</span> nowMoney;<span class="comment">//你手里的钱</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Drawing1</span><span class="params">(Account1 account, <span class="type">int</span> drawingMoney, String name)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name);</span><br><span class="line">        <span class="built_in">this</span>.account = account;</span><br><span class="line">        <span class="built_in">this</span>.drawingMoney = drawingMoney;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//取钱</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//锁的对象就是变量的量,需要增删改查的对象</span></span><br><span class="line">        <span class="keyword">synchronized</span> (account) &#123;</span><br><span class="line">            <span class="comment">//判断是否有钱</span></span><br><span class="line">            <span class="keyword">if</span> (account.money - drawingMoney &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(Thread.currentThread().getName() + <span class="string">&quot;余额不足,不能进行取钱&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);<span class="comment">//放大问题的发生性</span></span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//卡内金额 = 余额-你的钱</span></span><br><span class="line">            account.money = account.money - drawingMoney;</span><br><span class="line">            <span class="comment">//你手里的钱</span></span><br><span class="line">            nowMoney = nowMoney + drawingMoney;</span><br><span class="line">            System.out.println(account.cardName + <span class="string">&quot;余额为:&quot;</span> + account.money);</span><br><span class="line">            <span class="comment">//this.getName()==Thread.currentThread().getName()</span></span><br><span class="line">            System.out.println(<span class="built_in">this</span>.getName() + <span class="string">&quot;手里的钱:&quot;</span> + nowMoney);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//线程安全的集合 同步块</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo29_SafeList</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        List&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; &#123;</span><br><span class="line">                <span class="keyword">synchronized</span> (list) &#123;</span><br><span class="line">                    list.add(Thread.currentThread().getName());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).start();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">300</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(list.size());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>JUC安全集合类型扩充</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//测试JUC安全类型的集合</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo30_ThreadJuc</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        CopyOnWriteArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">CopyOnWriteArrayList</span>&lt;String&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; &#123;</span><br><span class="line">                list.add(Thread.currentThread().getName());</span><br><span class="line">            &#125;).start();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(list.size());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-死锁"><a href="#5-死锁" class="headerlink" title="5.死锁"></a>5.死锁</h3><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304052023868.png" alt="在这里插入图片描述"></p><p><strong>案例:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 死锁:多个线程互相抱着对方需要的资源,然后形成僵持</span></span><br><span class="line"><span class="comment"> * 解决:一个锁只锁一个对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Demo31_DeadLock</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Makeup</span> <span class="variable">makeup</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Makeup</span>(<span class="number">0</span>, <span class="string">&quot;灰姑娘&quot;</span>);</span><br><span class="line">        <span class="type">Makeup</span> <span class="variable">makeup1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Makeup</span>(<span class="number">1</span>, <span class="string">&quot;白雪公主&quot;</span>);</span><br><span class="line">        makeup.start();</span><br><span class="line">        makeup1.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//口红</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Lipstick</span> &#123; &#125;</span><br><span class="line"><span class="comment">//镜子</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Mirror</span> &#123; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Makeup</span> <span class="keyword">extends</span> <span class="title class_">Thread</span> &#123;</span><br><span class="line">    <span class="comment">//需要的资源只有一份,用static保证只有一份</span></span><br><span class="line">    <span class="keyword">static</span> <span class="type">Lipstick</span> <span class="variable">lipstick</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Lipstick</span>();</span><br><span class="line">    <span class="keyword">static</span> <span class="type">Mirror</span> <span class="variable">mirror</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Mirror</span>();</span><br><span class="line">    <span class="type">int</span> choice;<span class="comment">//选择</span></span><br><span class="line">    String girlName;<span class="comment">//使用化妆品的人</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Makeup</span><span class="params">(<span class="type">int</span> choice, String girlName)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.choice = choice;</span><br><span class="line">        <span class="built_in">this</span>.girlName = girlName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//化妆</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            makeup();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">makeup</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="keyword">if</span> (choice == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (lipstick) &#123;<span class="comment">//获得口红的锁</span></span><br><span class="line">                System.out.println(<span class="built_in">this</span>.girlName + <span class="string">&quot;获得口红的锁&quot;</span>);</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                <span class="keyword">synchronized</span> (mirror) &#123;<span class="comment">//一秒钟后想获得镜子</span></span><br><span class="line">                    System.out.println(<span class="built_in">this</span>.girlName + <span class="string">&quot;获得镜子的锁&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (mirror) &#123;<span class="comment">//获得口红镜子</span></span><br><span class="line">                System.out.println(<span class="built_in">this</span>.girlName + <span class="string">&quot;获得镜子的锁&quot;</span>);</span><br><span class="line">                Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">                <span class="keyword">synchronized</span> (lipstick) &#123;<span class="comment">//二秒钟后想获得的锁</span></span><br><span class="line">                    System.out.println(<span class="built_in">this</span>.girlName + <span class="string">&quot;获得口红的锁&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>解决</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 死锁:多个线程互相抱着对方需要的资源,然后形成僵持</span></span><br><span class="line"><span class="comment"> * 解决:一个锁只锁一个对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Demo31_DeadLock</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Makeup</span> <span class="variable">makeup</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Makeup</span>(<span class="number">0</span>, <span class="string">&quot;灰姑娘&quot;</span>);</span><br><span class="line">        <span class="type">Makeup</span> <span class="variable">makeup1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Makeup</span>(<span class="number">1</span>, <span class="string">&quot;白雪公主&quot;</span>);</span><br><span class="line">        makeup.start();</span><br><span class="line">        makeup1.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//口红</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Lipstick</span> &#123; &#125;</span><br><span class="line"><span class="comment">//镜子</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Mirror</span> &#123; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Makeup</span> <span class="keyword">extends</span> <span class="title class_">Thread</span> &#123;</span><br><span class="line">    <span class="comment">//需要的资源只有一份,用static保证只有一份</span></span><br><span class="line">    <span class="keyword">static</span> <span class="type">Lipstick</span> <span class="variable">lipstick</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Lipstick</span>();</span><br><span class="line">    <span class="keyword">static</span> <span class="type">Mirror</span> <span class="variable">mirror</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Mirror</span>();</span><br><span class="line">    <span class="type">int</span> choice;<span class="comment">//选择</span></span><br><span class="line">    String girlName;<span class="comment">//使用化妆品的人</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Makeup</span><span class="params">(<span class="type">int</span> choice, String girlName)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.choice = choice;</span><br><span class="line">        <span class="built_in">this</span>.girlName = girlName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//化妆</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            makeup();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">makeup</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="keyword">if</span> (choice == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (lipstick) &#123;<span class="comment">//获得口红的锁</span></span><br><span class="line">                System.out.println(<span class="built_in">this</span>.girlName + <span class="string">&quot;获得口红的锁&quot;</span>);</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">synchronized</span> (mirror) &#123;<span class="comment">//一秒钟后想获得镜子</span></span><br><span class="line">                System.out.println(<span class="built_in">this</span>.girlName + <span class="string">&quot;获得镜子的锁&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (mirror) &#123;<span class="comment">//获得口红镜子</span></span><br><span class="line">                System.out.println(<span class="built_in">this</span>.girlName + <span class="string">&quot;获得镜子的锁&quot;</span>);</span><br><span class="line">                Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">synchronized</span> (lipstick) &#123;<span class="comment">//二秒钟后想获得的锁</span></span><br><span class="line">                System.out.println(<span class="built_in">this</span>.girlName + <span class="string">&quot;获得口红的锁&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>死锁避免办法</strong></p><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304052025686.png" alt="在这里插入图片描述"></p><h3 id="6-Lock-锁"><a href="#6-Lock-锁" class="headerlink" title="6.Lock(锁)"></a>6.Lock(锁)</h3><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304052025010.png" alt="在这里插入图片描述"></p><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304052025367.png" alt="在这里插入图片描述"></p><p><strong>实现</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//测试Lock锁</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo32_ThreadLock</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">TestLock</span> <span class="variable">testLock</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestLock</span>();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(testLock).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(testLock).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(testLock).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TestLock</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">tickerNums</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    <span class="comment">//定义Lock锁</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">ReentrantLock</span> <span class="variable">lock</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ReentrantLock</span>();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="comment">//加锁</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                lock.lock();</span><br><span class="line">                <span class="keyword">if</span> (tickerNums &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.println(tickerNums--);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                <span class="comment">//解锁</span></span><br><span class="line">                lock.unlock();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-synchroized与Lock对比"><a href="#7-synchroized与Lock对比" class="headerlink" title="7.synchroized与Lock对比"></a>7.synchroized与Lock对比</h3><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304052026458.png" alt="在这里插入图片描述"></p><h2 id="五、线程通信问题"><a href="#五、线程通信问题" class="headerlink" title="五、线程通信问题"></a>五、线程通信问题</h2><p><strong>生产者消费者模式的问题</strong></p><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304061447693.png" alt="在这里插入图片描述"></p><h3 id="1-线程通信方法"><a href="#1-线程通信方法" class="headerlink" title="1.线程通信方法"></a>1.线程通信方法</h3><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304061448379.png" alt="在这里插入图片描述"></p><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304061448775.png" alt="在这里插入图片描述"></p><h3 id="2-线程通信问题解决方式"><a href="#2-线程通信问题解决方式" class="headerlink" title="2.线程通信问题解决方式"></a>2.线程通信问题解决方式</h3><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304061448774.png" alt="在这里插入图片描述"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试:生产者消费者模型--&gt;利用缓冲区解决:管程法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo33_ThreadPC</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">SynContainer</span> <span class="variable">synContainer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SynContainer</span>();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Producer</span>(synContainer).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Consumer</span>(synContainer).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//生产者</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Producer</span> <span class="keyword">extends</span> <span class="title class_">Thread</span> &#123;</span><br><span class="line">    <span class="comment">//容缓冲区</span></span><br><span class="line">    SynContainer container;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Producer</span><span class="params">(SynContainer container)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.container = container;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//生产</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">            container.push(<span class="keyword">new</span> <span class="title class_">Product</span>(i));</span><br><span class="line">            System.out.println(<span class="string">&quot;生产了&quot;</span> + i + <span class="string">&quot;件产品&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//消费者</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Consumer</span> <span class="keyword">extends</span> <span class="title class_">Thread</span> &#123;</span><br><span class="line">    <span class="comment">//容缓冲区</span></span><br><span class="line">    SynContainer container;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Consumer</span><span class="params">(SynContainer container)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.container = container;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//消费</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;消费了--&gt;&quot;</span> + container.pop().id + <span class="string">&quot;件产品&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//产品</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Product</span> &#123;</span><br><span class="line">    <span class="type">int</span> id;<span class="comment">//产品编号</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Product</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//缓冲区</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SynContainer</span> &#123;</span><br><span class="line">    <span class="comment">//需要一个容器大小</span></span><br><span class="line">    Product[] products = <span class="keyword">new</span> <span class="title class_">Product</span>[<span class="number">10</span>];</span><br><span class="line">    <span class="comment">//容器计数器</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//生产者放入产品</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">push</span><span class="params">(Product product)</span> &#123;</span><br><span class="line">        <span class="comment">//如果容器满了,需要等待消费者消费</span></span><br><span class="line">        <span class="comment">/*如果是if的话，假如消费者1消费了最后一个，这是index变成0此时释放锁被消费者2拿到而不是生产者拿到，这时消费者的wait是在if里所以它就直接去消费index-1下标越界，如果是while就会再去判断一下index得值是不是变成0了*/</span></span><br><span class="line">        <span class="keyword">while</span> (count == products.length) &#123;</span><br><span class="line">            <span class="comment">//通知消费者消费,等待生产</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="built_in">this</span>.wait();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果没有满,需要丢入产品</span></span><br><span class="line">        products[count] = product;</span><br><span class="line">        count++;</span><br><span class="line">        <span class="comment">//通知消费者消费</span></span><br><span class="line">        <span class="built_in">this</span>.notifyAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//消费者消费产品</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> Product <span class="title function_">pop</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//判断是否能消费</span></span><br><span class="line">        <span class="keyword">while</span> (count &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">//等待生产者生产</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="built_in">this</span>.wait();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果可以消费</span></span><br><span class="line">        count--;</span><br><span class="line">        <span class="type">Product</span> <span class="variable">product</span> <span class="operator">=</span> products[count];</span><br><span class="line">        <span class="comment">//吃完了 通知生产者生产</span></span><br><span class="line">        <span class="built_in">this</span>.notifyAll();</span><br><span class="line">        <span class="keyword">return</span> product;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304061449224.png" alt="在这里插入图片描述"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试:并发协作模型“生产者/消费者模式”--&gt;信号灯法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> Communite;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo34_ThreadIPc</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">TV</span> <span class="variable">tv</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TV</span>();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">player</span>(tv).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">watcher</span>(tv).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//演员</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">player</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line">    TV tv;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">player</span><span class="params">(TV tv)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.tv = tv;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="built_in">this</span>.tv.play(<span class="string">&quot;快乐大本营&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">this</span>.tv.play(<span class="string">&quot;痘印记录美好生活&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//观众</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">watcher</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line">    TV tv;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">watcher</span><span class="params">(TV tv)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.tv = tv;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">            tv.watch();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//演出</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TV</span>&#123;</span><br><span class="line">    <span class="comment">//演员表演，观众等待 T</span></span><br><span class="line">    <span class="comment">//观众观看，演员等待 F</span></span><br><span class="line">    String voice;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="comment">//表演</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">play</span><span class="params">(String voice)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!flag)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="built_in">this</span>.wait();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;演员表演了:&quot;</span>+voice);</span><br><span class="line">        <span class="comment">//通知观众观看</span></span><br><span class="line">        <span class="built_in">this</span>.notifyAll();<span class="comment">//通知唤醒</span></span><br><span class="line">        <span class="built_in">this</span>.voice = voice;</span><br><span class="line">        <span class="built_in">this</span>.flag = !<span class="built_in">this</span>.flag;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//观看</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">watch</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="built_in">this</span>.wait();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;观众观看了&quot;</span>+voice);</span><br><span class="line">        <span class="comment">//通知演员表演</span></span><br><span class="line">        <span class="built_in">this</span>.notifyAll();</span><br><span class="line">        <span class="built_in">this</span>.flag = !<span class="built_in">this</span>.flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="六、线程池"><a href="#六、线程池" class="headerlink" title="六、线程池"></a>六、线程池</h2><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304061950051.png" alt="在这里插入图片描述"></p><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304061950110.png" alt="在这里插入图片描述"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//测试线程池</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo35_ThreadPool</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 1. 创建服务,擦行间线程池</span></span><br><span class="line">        <span class="comment">// newFixedThreadPool(线程池大小)</span></span><br><span class="line">        <span class="type">ExecutorService</span> <span class="variable">service</span> <span class="operator">=</span> Executors.newFixedThreadPool(<span class="number">10</span>);</span><br><span class="line">        <span class="comment">//执行</span></span><br><span class="line">        service.execute(<span class="keyword">new</span> <span class="title class_">MyThread</span>());</span><br><span class="line">        service.execute(<span class="keyword">new</span> <span class="title class_">MyThread</span>());</span><br><span class="line">        service.execute(<span class="keyword">new</span> <span class="title class_">MyThread</span>());</span><br><span class="line">        service.execute(<span class="keyword">new</span> <span class="title class_">MyThread</span>());</span><br><span class="line">        service.execute(<span class="keyword">new</span> <span class="title class_">MyThread</span>());</span><br><span class="line">        service.execute(<span class="keyword">new</span> <span class="title class_">MyThread</span>());</span><br><span class="line">        <span class="comment">//关闭连接</span></span><br><span class="line">        service.shutdown();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyThread</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(Thread.currentThread().getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js(3.自定义模块)</title>
      <link href="/posts/fdd77561.html"/>
      <url>/posts/fdd77561.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141246709.jpg" alt=""><br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141244023.jpg" alt=""></p><h4 id="CommonJs的模块的使用"><a href="#CommonJs的模块的使用" class="headerlink" title="CommonJs的模块的使用"></a>CommonJs的模块的使用</h4><h5 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getsum</span>(<span class="params">a,b</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//导出方式一</span></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">a</span>=a;</span><br><span class="line"><span class="built_in">exports</span>.<span class="property">getsum</span>=getsum;</span><br><span class="line"></span><br><span class="line"><span class="comment">//导出方式二</span></span><br><span class="line"><span class="comment">//通过module.exports等于一个对象，来导出数据</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>=&#123;</span><br><span class="line">    a,getsum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> m1=<span class="built_in">require</span>(<span class="string">&#x27;./m1.js&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(m1);                <span class="comment">//&#123; a: 10, getsum: [Function: getsum] &#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(m1.<span class="property">a</span>);              <span class="comment">// 10</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(m1.<span class="title function_">getsum</span>(<span class="number">1</span>,<span class="number">2</span>));    <span class="comment">// 3</span></span><br></pre></td></tr></table></figure><h5 id="模块里面的this的指向问题"><a href="#模块里面的this的指向问题" class="headerlink" title="模块里面的this的指向问题"></a>模块里面的this的指向问题</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);              <span class="comment">// &#123;&#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">exports</span>===<span class="variable language_">this</span>)     <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h5 id="全局对象"><a href="#全局对象" class="headerlink" title="全局对象"></a>全局对象</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//node 里面没有window对象，但是有全局对象global</span></span><br><span class="line"><span class="comment">//nodejs声明这个变量，不会被添加到global全局对象中</span></span><br><span class="line"><span class="keyword">let</span> b=<span class="number">10</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">global</span>.<span class="property">b</span>);          <span class="comment">//undefined</span></span><br><span class="line"><span class="comment">//可以给global添加成员</span></span><br><span class="line"><span class="variable language_">global</span>.<span class="property">c</span>=<span class="number">30</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">global</span>.<span class="property">c</span>);          <span class="comment">//30</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络编程</title>
      <link href="/posts/f6491cfb.html"/>
      <url>/posts/f6491cfb.html</url>
      
        <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>计算机网络：</p><p>计算机网络是指将地理位置不同的计算机及其外部部件，通过通信线路连接起来，在网络编程协议下，实现不同计算机之间的信息共享以及信息交流的计算机系统。</p><p>网络编程的目的：</p><p>1.传播交流信息（无线电台）：数据交换，通信。</p><p>2.想要达到这些效果需要做什么：</p><p>如何准确地定位网络上的一台主机 192.168.16.124：端口，定位到这个计算机上的某个资源<br>找到了这个主机，如何传输数据呢？<br>javaweb：网页编程 B/S</p><p>网络编程：TCP/IP C/S</p><h2 id="网络通信的要素"><a href="#网络通信的要素" class="headerlink" title="网络通信的要素"></a>网络通信的要素</h2><p>TCP/IP参考模型：<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311654834.png" alt=""></p><p>网络编程针对传输层 TCP，UDP</p><p>小结：</p><pre><code>1.网络编程两个主要问题    如何准确定位到网络上的一台或多台主机    找到主机之后如何进行通信2.网络编程中的要素    IP和端口号    网络通信协议：TCP,UDP3.万物皆对象</code></pre><h2 id="IP地址"><a href="#IP地址" class="headerlink" title="IP地址"></a>IP地址</h2><p>ip地址：InterAddress</p><p>唯一定位一台网络上的计算机</p><p>127.0.0.1：本机，localhost</p><p>（C:\Windows\System32\drivers\etc\hosts 可以更改名称）</p><p>ip地址分类</p><pre><code>IPv4 / IPv6    ==IPV4：==127.0.0.1，四个字节组成。0 ~ 255， 42亿~；30亿都在北美，亚洲4亿。2001年就用尽了；    ==IPV6：==fe80::755f:fc6c:2ebc:b6e6%18，128位。8个无符号整数！可以给地球上每粒沙子分配；</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2001:0bb2:aaaa:0015:0000:0000:1aaa:1312</span><br></pre></td></tr></table></figure><pre><code>公网（互联网） / 私网（局域网）    ABCD类地址    192.168.xx.xx，专门给组织内部使用</code></pre><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311658571.png" alt=""></p><pre><code>域名：记忆IP问题    IP：www.vip.com</code></pre><p>练习：InetAddress类的常用方法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询本机地址</span></span><br><span class="line"><span class="type">InetAddress</span> <span class="variable">inetAddress1</span> <span class="operator">=</span> InetAddress.getByName(<span class="string">&quot;127.0.0.1&quot;</span>);</span><br><span class="line">System.out.println(inetAddress1);</span><br><span class="line"></span><br><span class="line"><span class="type">InetAddress</span> <span class="variable">inetAddress3</span> <span class="operator">=</span> InetAddress.getByName(<span class="string">&quot;localhost&quot;</span>);</span><br><span class="line">System.out.println(inetAddress3);</span><br><span class="line"></span><br><span class="line"><span class="type">InetAddress</span> <span class="variable">inetAddress4</span> <span class="operator">=</span> InetAddress.getLocalHost();</span><br><span class="line">System.out.println(inetAddress4);</span><br><span class="line"></span><br><span class="line"><span class="comment">//查询网站ip地址</span></span><br><span class="line"><span class="type">InetAddress</span> <span class="variable">address</span> <span class="operator">=</span> InetAddress.getByName(<span class="string">&quot;www.baidu.com&quot;</span>);</span><br><span class="line">System.out.println(address);</span><br><span class="line"></span><br><span class="line"><span class="comment">//常用方法</span></span><br><span class="line">System.out.println(address.getHostAddress()); <span class="comment">// ip地址（常用）</span></span><br><span class="line">System.out.println(address.getAddress()); <span class="comment">//返回原生地址，没什么用</span></span><br><span class="line">System.out.println(address.getCanonicalHostName()); <span class="comment">//规范的名字</span></span><br><span class="line">System.out.println(address.getHostName()); <span class="comment">//域名（或者本机电脑的名字）</span></span><br></pre></td></tr></table></figure></p><h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><p>端口表示计算机上的一个程序的进程；</p><p>不同的进程有不同的端口号！用来区分软件！</p><p>被规定0 ~ 65535（电脑最多跑的进程数）</p><p>TCP，UDP：65535 * 2 ，单个协议下，端口号不能冲突（tcp:80 udp:80可以）</p><p>分类：</p><p>公有端口 0~1023</p><pre><code>HTTP：80HTTPS：443FTP：21Telent：23</code></pre><p>程序注册端口：1024~49151，分配给用户或者程序</p><pre><code>Tomcat：8080，MySQL：3306，Oracle：1521</code></pre><p>动态、私有：49152~65535<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano #查看所有的端口</span><br><span class="line">netstat -ano | finstr <span class="string">&quot;5900&quot;</span> #查看指定的端口</span><br><span class="line">tasklist | findstr <span class="string">&quot;8696&quot;</span> #查看指定端口的进程</span><br><span class="line">ctrl + shift + ESC #打开任务管理器，死机也能用</span><br></pre></td></tr></table></figure><br>练习：InetSocketAddress类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建套接字地址:IP地址和端口号</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestInetSocketAddress</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">InetSocketAddress</span> <span class="variable">socketAddress</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InetSocketAddress</span>(<span class="string">&quot;127.0.0.1&quot;</span>,<span class="number">8080</span>);</span><br><span class="line">        System.out.println(socketAddress);</span><br><span class="line"></span><br><span class="line">        System.out.println(socketAddress.getAddress()); <span class="comment">//地址</span></span><br><span class="line">        System.out.println(socketAddress.getHostName());</span><br><span class="line">        System.out.println(socketAddress.getPort()); <span class="comment">//端口号</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="通信协议"><a href="#通信协议" class="headerlink" title="通信协议"></a>通信协议</h2><p>协议：约定，就好比我们现在说的是普通话。</p><p><strong>网络通信协议：</strong>速率，传输码率，传输控制……</p><p><strong>问题：</strong>非常的复杂？</p><p> 大事化小：分层！</p><p>TCP/IP协议簇：</p><p>重要的两个协议：</p><p>TCP：用户传输协议<br>UDP：用户数据报协议</p><p>出名的协议：TCP，IP（网络互连协议），实际上是一组协议</p><p>TCP，UDP对比：</p><p>TCP：打电话</p><pre><code>连接：稳定三次握手 四次挥手客户端，服务端传输完成，释放连接、效率低</code></pre><p>UDP：发短信</p><pre><code>连接：不稳定客户端，服务端没有明显的界限不管有没有准备好，都可以发给你（导弹）DDOS：洪水攻击！饱和攻击</code></pre><p>扩展：三次握手，四次挥手<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">最少需要三次，保证稳定连接！</span><br><span class="line">A：你瞅啥？ #第一次握手：客户端向服务端申请连接</span><br><span class="line">B：瞅你咋地？#第二次握手：服务端向客户端返回确认同意连接</span><br><span class="line">A：干一场！ #第三次握手：客户端发送确认报文段，完成连接</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">A：我要走了</span><br><span class="line">B：你真的要走了吗？</span><br><span class="line">B：你真的真的要走了吗？</span><br><span class="line">A：我真的要走了</span><br></pre></td></tr></table></figure></p><h2 id="TCP协议"><a href="#TCP协议" class="headerlink" title="TCP协议"></a>TCP协议</h2><p>客户端：</p><p>1.连接服务器 Socket(address,port)</p><p>2.发送消息<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.要知道服务器的地址，端口号</span></span><br><span class="line"><span class="type">InetAddress</span> <span class="variable">address</span> <span class="operator">=</span> InetAddress.getByName(<span class="string">&quot;127.0.0.1&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">port</span> <span class="operator">=</span> <span class="number">9999</span>;</span><br><span class="line"><span class="comment">//2.创建一个Socket连接</span></span><br><span class="line"><span class="type">Socket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Socket</span>(address, port);</span><br><span class="line"><span class="comment">//3.发送消息</span></span><br><span class="line"><span class="type">OutputStream</span> <span class="variable">os</span> <span class="operator">=</span> socket.getOutputStream();</span><br><span class="line">os.write(<span class="string">&quot;Hello World&quot;</span>.getBytes()); <span class="comment">//返回字节数组（将String编码为字节序列 存到字节数组）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//关闭连接</span></span><br><span class="line">socket.close();</span><br><span class="line">os.close();</span><br></pre></td></tr></table></figure><br>服务器：</p><p>1.建立服务的端口 ServerSocket</p><p>2.等待用户的连接 accept()</p><p>3.接收用户的消息<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.创建服务端 端口</span></span><br><span class="line"><span class="type">ServerSocket</span> <span class="variable">serverSocket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServerSocket</span>(<span class="number">9999</span>);</span><br><span class="line"><span class="comment">//2.等待客户端连接</span></span><br><span class="line"><span class="type">Socket</span> <span class="variable">socket</span> <span class="operator">=</span> serverSocket.accept();</span><br><span class="line"><span class="comment">//3.读取客户端的消息</span></span><br><span class="line"><span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> socket.getInputStream();</span><br><span class="line"></span><br><span class="line"><span class="comment">//管道流(过滤一下，防止中文乱码)</span></span><br><span class="line"><span class="type">ByteArrayOutputStream</span> <span class="variable">baos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line"><span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>]; <span class="comment">//新建缓冲区</span></span><br><span class="line"><span class="type">int</span> len;</span><br><span class="line"><span class="keyword">while</span>((len = is.read(buffer))!=-<span class="number">1</span>)&#123;</span><br><span class="line">    baos.write(buffer,<span class="number">0</span>,len);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(baos.toString()); <span class="comment">//打印信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//关闭连接，先开后关</span></span><br><span class="line">baos.close();</span><br><span class="line">is.close();</span><br><span class="line">socket.close();</span><br><span class="line">serverSocket.close();</span><br></pre></td></tr></table></figure></p><h3 id="TCP文件上传"><a href="#TCP文件上传" class="headerlink" title="TCP文件上传"></a>TCP文件上传</h3><p>服务器：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mine.lesson2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TcpServerDemo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">//1.创建服务器端口</span></span><br><span class="line">        <span class="type">ServerSocket</span> <span class="variable">serverSocket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServerSocket</span>(<span class="number">9000</span>);</span><br><span class="line">        <span class="comment">//2.等待用户连接</span></span><br><span class="line">        <span class="type">Socket</span> <span class="variable">socket</span> <span class="operator">=</span> serverSocket.accept();</span><br><span class="line">        <span class="comment">//3.获取输入流</span></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> socket.getInputStream();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.文件输出</span></span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;receive.jpg&quot;</span>));</span><br><span class="line">        <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="type">int</span> len;</span><br><span class="line">        <span class="keyword">while</span>((len=is.read(buffer))!=-<span class="number">1</span>)&#123;</span><br><span class="line">            fos.write(buffer,<span class="number">0</span>,len);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//通知客户端接收完毕</span></span><br><span class="line">        <span class="type">OutputStream</span> <span class="variable">os</span> <span class="operator">=</span> socket.getOutputStream();</span><br><span class="line">        os.write(<span class="string">&quot;接收完毕，可以断开连接了&quot;</span>.getBytes());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//关闭所有连接</span></span><br><span class="line">        os.close();</span><br><span class="line">        fos.close();</span><br><span class="line">        is.close();</span><br><span class="line">        socket.close();</span><br><span class="line">        serverSocket.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>客户端：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mine.lesson2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"><span class="keyword">import</span> java.net.UnknownHostException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TcpClientDemo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">//1.新建一个Socket连接</span></span><br><span class="line">        <span class="type">Socket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Socket</span>(InetAddress.getByName(<span class="string">&quot;127.0.0.1&quot;</span>),<span class="number">9000</span>);</span><br><span class="line">        <span class="comment">//2.创建一个输出流</span></span><br><span class="line">        <span class="type">OutputStream</span> <span class="variable">os</span> <span class="operator">=</span> socket.getOutputStream();</span><br><span class="line">        <span class="comment">//3.读取文件</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;刀妹06.jpg&quot;</span>));</span><br><span class="line">        <span class="comment">//4.写出文件</span></span><br><span class="line">        <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="type">int</span> len;</span><br><span class="line">        <span class="keyword">while</span>((len=fis.read(buffer))!=-<span class="number">1</span>)&#123;</span><br><span class="line">            os.write(buffer,<span class="number">0</span>,len);   <span class="comment">// 写出文件</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//通知服务器我传输结束了</span></span><br><span class="line">        socket.shutdownOutput(); <span class="comment">//传输完了</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//确定服务器接收完，才能够断开连接</span></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> socket.getInputStream();</span><br><span class="line">        <span class="comment">//String&lt;==&gt;byte[]</span></span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">baos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">byte</span>[] buffer2 = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="type">int</span> len2;</span><br><span class="line">        <span class="keyword">while</span> ((len2=is.read(buffer2))!=-<span class="number">1</span>)&#123;</span><br><span class="line">            baos.write(buffer2,<span class="number">0</span>,len2);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(baos.toString()); <span class="comment">//转为字符串</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//关闭连接</span></span><br><span class="line">        baos.close();</span><br><span class="line">        is.close();</span><br><span class="line">        fis.close();</span><br><span class="line">        os.close();</span><br><span class="line">        socket.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="初识Tomcat"><a href="#初识Tomcat" class="headerlink" title="初识Tomcat"></a>初识Tomcat</h3><p>服务端：</p><pre><code>自定义 CTomcat服务器 S：Java后端开发</code></pre><p>客户端：</p><pre><code>自定义 C浏览器 B</code></pre><h2 id="UDP"><a href="#UDP" class="headerlink" title="UDP"></a>UDP</h2><p>数据报包（DatagramSocket）发送与接收</p><p>发送端：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mine.lesson3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">//不需要连接服务器</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UdpClientDemo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">//1.新建一个Socket</span></span><br><span class="line">        <span class="type">DatagramSocket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramSocket</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.建个包 DatagramPacket</span></span><br><span class="line">        String msg=<span class="string">&quot;你好，服务器！&quot;</span>;</span><br><span class="line">        <span class="type">InetAddress</span> <span class="variable">address</span> <span class="operator">=</span> InetAddress.getByName(<span class="string">&quot;localhost&quot;</span>);</span><br><span class="line">        <span class="type">int</span> port=<span class="number">9090</span>;</span><br><span class="line">        <span class="type">DatagramPacket</span> <span class="variable">packet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramPacket</span>(msg.getBytes(), <span class="number">0</span>, msg.getBytes().length, address, port);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.发送包</span></span><br><span class="line">        socket.send(packet);</span><br><span class="line"></span><br><span class="line">        socket.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接收端：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mine.lesson3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UdpServerDemo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">//开放端口</span></span><br><span class="line">        <span class="type">DatagramSocket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramSocket</span>(<span class="number">9090</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//接收数据包</span></span><br><span class="line">        <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="type">DatagramPacket</span> <span class="variable">packet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramPacket</span>(buffer, <span class="number">0</span>, buffer.length);</span><br><span class="line"></span><br><span class="line">        socket.receive(packet); <span class="comment">//阻塞接收</span></span><br><span class="line"></span><br><span class="line">        System.out.println(packet.getAddress().getHostAddress());</span><br><span class="line">        System.out.println(<span class="keyword">new</span> <span class="title class_">String</span>(packet.getData(),<span class="number">0</span>,packet.getLength())); <span class="comment">//byte[]-&gt;String</span></span><br><span class="line">        socket.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>UDP聊天实现</p><p>循环发送消息</p><p>发送方：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">DatagramSocket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramSocket</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//准备数据：从控制台接收数据</span></span><br><span class="line">    <span class="type">BufferedReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">    <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> reader.readLine();</span><br><span class="line">    <span class="type">byte</span>[] datas = data.getBytes();</span><br><span class="line">    <span class="comment">//打包</span></span><br><span class="line">    <span class="type">DatagramPacket</span> <span class="variable">packet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramPacket</span>(datas, <span class="number">0</span>, datas.length, <span class="keyword">new</span> <span class="title class_">InetSocketAddress</span>(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">6666</span>));</span><br><span class="line"></span><br><span class="line">    socket.send(packet);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(data.equals(<span class="string">&quot;bye&quot;</span>)) <span class="keyword">break</span>; <span class="comment">//bye退出循环接收</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">socket.close();</span><br></pre></td></tr></table></figure><p>接收者：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">DatagramSocket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramSocket</span>(<span class="number">6666</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//准备接收数据</span></span><br><span class="line">    <span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">    <span class="type">DatagramPacket</span> <span class="variable">packet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramPacket</span>(bytes, <span class="number">0</span>, bytes.length);</span><br><span class="line">    socket.receive(packet); <span class="comment">//阻塞式接收包裹</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//断开连接：如果接收到 bye就退出循环</span></span><br><span class="line">    <span class="type">byte</span>[] data = packet.getData();</span><br><span class="line">    <span class="type">String</span> <span class="variable">receiveData</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(data, <span class="number">0</span>, data.length);</span><br><span class="line">    System.out.println(receiveData);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (receiveData.equals(<span class="string">&quot;bye&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">socket.close();</span><br></pre></td></tr></table></figure><br>多线程在线咨询<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304021637379.png" alt=""></p><h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p>统一资源定位符：定位资源的，定位互联网上的某一个资源</p><p><code>DNS域名解析 www.baidu.com xxx.x.xx.xx</code></p><p><code>协议：//ip地址：端口/项目名/资源</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;http://localhost:8080/helloworld/index.jsp?username=root&quot;</span>);</span><br><span class="line">System.out.println(url.getProtocol());  <span class="comment">//协议名</span></span><br><span class="line">System.out.println(url.getHost());  <span class="comment">//主机IP</span></span><br><span class="line">System.out.println(url.getPort());   <span class="comment">//端口号</span></span><br><span class="line">System.out.println(url.getPath());   <span class="comment">//文件</span></span><br><span class="line">System.out.println(url.getFile());   <span class="comment">//文件全路径</span></span><br><span class="line">System.out.println(url.getQuery());   <span class="comment">//参数</span></span><br></pre></td></tr></table></figure><p>下载文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">URLDown</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">//1.下载地址（可以写自己想下的资源链接）</span></span><br><span class="line">        <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;https://m701.music.126.net/20210505164644/b272db6641b6e975c78e51e182d1211d/jdyyaac/obj/w5rDlsOJwrLDjj7CmsOj/8698723658/63d4/2446/ae0d/788e204c24f3497eb896a9112fa6baac.m4a&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.连接到这个资源 HTTP</span></span><br><span class="line">        <span class="type">HttpURLConnection</span> <span class="variable">urlConnection</span> <span class="operator">=</span> (HttpURLConnection) url.openConnection();</span><br><span class="line"></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> urlConnection.getInputStream();</span><br><span class="line"></span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;mine.m4a&quot;</span>);</span><br><span class="line">        <span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="type">int</span> len;</span><br><span class="line">        <span class="keyword">while</span> ((len=inputStream.read(bytes))!=-<span class="number">1</span>)&#123;</span><br><span class="line">            fos.write(bytes,<span class="number">0</span>,len); <span class="comment">//写出这个数据到文件</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        fos.close();</span><br><span class="line">        inputStream.close();</span><br><span class="line">        urlConnection.disconnect(); <span class="comment">//断开连接</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js(2.NVM下载)</title>
      <link href="/posts/189e69f4.html"/>
      <url>/posts/189e69f4.html</url>
      
        <content type="html"><![CDATA[<h4 id="NVM下载"><a href="#NVM下载" class="headerlink" title="NVM下载"></a>NVM下载</h4><p><a href="https://github.com/coreybutler/nvm-windows/releases">下载链接</a><br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141038072.png" alt="1"></p><h4 id="nvm安装"><a href="#nvm安装" class="headerlink" title="nvm安装"></a>nvm安装</h4><p>如果电脑上之前已经单独安装了node，先卸载，然后解压nvm-setup.zip安装包，进入解压的文件夹，双击exe后缀文件进行安装<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141039878.png" alt="2"><br>下面这个界面是选择安装nvm的路径，自己可以更改安装路径，一般默认路径<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141041936.png" alt="3"><br>下面这个是nodejs的安装位置，如果没有nodejs文件夹就新建一个(后来发现他会自动生成一个快捷方式)<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141041401.png" alt="4"><br>安装完毕后输入 nvm -v 查看版本<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141042952.png" alt="5"></p><h4 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h4><p>如果安装到D盘，则需要配置相对应的环境，如图：（输入相对应的文件位置）<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141103776.png" alt=""><br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141104618.png" alt=""></p><h4 id="设置setting-txt-可忽略不设置"><a href="#设置setting-txt-可忽略不设置" class="headerlink" title="设置setting.txt(可忽略不设置)"></a>设置setting.txt(可忽略不设置)</h4><p>安装完毕后，找到安装的路径，一些简单配置，打开setting.txt<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141044276.png" alt="6"><br>在后面添加这两行代码<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node_mirror: https://npm.taobao.org/mirrors/node/</span><br><span class="line">npm_mirror: https://npm.taobao.org/mirrors/npm/</span><br></pre></td></tr></table></figure><br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141045299.png" alt="7"></p><h4 id="nvm的使用"><a href="#nvm的使用" class="headerlink" title="nvm的使用"></a>nvm的使用</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">nvm off                     // 禁用node.js版本管理(不卸载任何东西)</span><br><span class="line">nvm on                      // 启用node.js版本管理</span><br><span class="line">nvm install <span class="tag">&lt;<span class="name">version</span>&gt;</span>       // 安装node.js的命名 version是版本号 例如：nvm install 8.12.0</span><br><span class="line">nvm uninstall <span class="tag">&lt;<span class="name">version</span>&gt;</span>     // 卸载node.js是的命令，卸载指定版本的nodejs，当安装失败时卸载使用</span><br><span class="line">nvm ls                      // 显示所有安装的node.js版本</span><br><span class="line">nvm list available          // 显示可以安装的所有node.js的版本</span><br><span class="line">nvm use <span class="tag">&lt;<span class="name">version</span>&gt;</span>           // 切换到使用指定的nodejs版本</span><br><span class="line">nvm v                       // 显示nvm版本</span><br><span class="line">nvm install stable          // 安装最新稳定版</span><br></pre></td></tr></table></figure><p>见下图：<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141047624.png" alt="8"><br>如果使用node -v，提示node:command not found,则需要nvm use node版本号，见下图<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141048177.png" alt="9"><br>下面显示当前使用的node版本是14.16.1<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141049252.png" alt="10"></p><h4 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h4><h5 id="问题1"><a href="#问题1" class="headerlink" title="问题1"></a>问题1</h5><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141127264.png" alt=""><br>解决方法<br>在c盘默认安装路径上将nodejs文件夹 删除<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141127910.png" alt=""><br>之后重新use node版本，查看版本成功</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NVM下载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JDK安装</title>
      <link href="/posts/e0a83b49.html"/>
      <url>/posts/e0a83b49.html</url>
      
        <content type="html"><![CDATA[<h2 id="下载JDK"><a href="#下载JDK" class="headerlink" title="下载JDK"></a>下载JDK</h2><p>进入官网</p><p><a href="https://www.oracle.com/java/technologies/downloads/#java8-windows">Java Downloads | Oracle</a><br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311724820.png" alt=""></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>打开下载好的文件，进入JDK 8安装界面<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311726391.png" alt=""><br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311726204.png" alt=""><br>单击【下一步】按钮进入JDK自定义安装界面，如右图。<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311727354.png" alt=""><br>在本步骤图中，左侧有三个功能模块，每个模板具有特定功能如下：</p><p>开发工具：开发工具是JDK中的核心功能模块，包含一系列可执行程序，如javac.exe、java.exe等，还包含了一个专用的JRE环境。</p><p>源代码：是Java提供公共API类的源代码。</p><p>公共JRE：是Java程序的运行环境。由于开发工具中已经包含了一个JRE，因此没有必要再安装公共的JRE环境，此项可以不作选择。</p><p>开发人员可以根据自己的需求选择所要安装的模块，这里我们选择开发工具模块。另外，在图中所示的界面右侧有一个【更改】按钮，单击该按钮进入更改JDK安装目录的界面，如右图。<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311731897.png" alt=""><br>选择安装路径之后，单击【下一步】按钮开始安装JDK。</p><p>安装完JDK之后，开始安装Java<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311732374.png" alt=""></p><h2 id="JDK目录介绍-可先跳过"><a href="#JDK目录介绍-可先跳过" class="headerlink" title="JDK目录介绍(可先跳过)"></a>JDK目录介绍(可先跳过)</h2><p>​ JDK安装完毕后，会在磁盘上生成一个目录，该目录被称为JDK安装目录，如下图。<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311733399.png" alt=""><br>1）bin目录：该目录用于存放一些可执行程序，如javac.exe（Java编译器）、java.exe（Java运行工具）、jar.exe（打包工具）和javadoc.exe（文档生成工具）等。其中最重要的就是javac.exe和java.exe。</p><pre><code>javac.exe是Java编译器，它可以将编写好的Java文件编译成Java字节码文件（可执行的Java程序）。Java源文件的扩展名为.java，如HelloWorld.java。编译后生成对应的Java字节码文件，字节码文件的扩展名为.class，如HelloWorld.class。java.exe是Java运行工具，它会启动一个Java虚拟机（JVM）进程，Java虚拟机相当于一个虚拟的操作系统，专门负责运行由Java编译器生成的字节码文件（.class文件）。</code></pre><p>（2）db目录：db目录是一个小型的数据库。从JDK 6开始，Java中引入了一个新的成员JavaDB，这是一个纯 Java 实现、开源的数据库管理系统。这个数据库不仅轻便，而且支持JDBC 4所有的规范，在学习JDBC时，不需要再额外地安装一个数据库软件，选择直接使用JavaDB即可。</p><p>（3）jre目录：jre是Java Runtime Environment的缩写，意为Java程序运行时环境。该目录是Java运行时环境的根目录，它包含Java虚拟机、运行时的类包、Java应用启动器以及一个bin目录，但不包含开发环境中的开发工具。</p><p>（4）include目录：由于JDK是使用C和C++开发的，因此在启动时需要引入一些C语言的头文件，该目录就是用于存放这些头文件的。</p><p>（5）lib目录：lib是library的缩写，意为Java类库或库文件，是开发工具使用的归档包文件。</p><p>（6）src.zip文件与javafx-src.zip文件：这两个文件中放置的是JDK核心类的源代码和JavaFX源代码，通过这两个文件可以查看Java基础类的源代码。</p><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><h3 id="JAVA-HOME环境变量配置"><a href="#JAVA-HOME环境变量配置" class="headerlink" title="JAVA_HOME环境变量配置"></a>JAVA_HOME环境变量配置</h3><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311736009.png" alt=""></p><p>完成创建</p><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311736993.png" alt=""></p><h3 id="修改PATH变量"><a href="#修改PATH变量" class="headerlink" title="修改PATH变量"></a>修改PATH变量</h3><p>​ path环境变量用于保存一系列命令（可执行程序）路径，每个路径之间以分号分隔。当在命令行窗口运行一个可执行文件时，操作系统首先会在当前目录下查找是否存在该文件，如果未找到，操作系统会继续在path环境变量中定义的路径下寻找这个文件，如果仍未找到，系统会报错。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%JAVA_HOME%\bin</span><br></pre></td></tr></table></figure><br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311737612.png" alt=""></p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>如果按照上图配置，在控制台下输入javac，出现javac不是内部或外部命令，可将上图配置修改为：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">%JAVA_HOME%\bin</span><br><span class="line">%JAVA_HOME%\jre\bin</span><br></pre></td></tr></table></figure><br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311738730.png" alt=""></p><h2 id="测试java是否安装成功"><a href="#测试java是否安装成功" class="headerlink" title="测试java是否安装成功"></a>测试java是否安装成功</h2><p>在命令行窗口中，输入:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311738892.png" alt=""></p><h2 id="java快捷键"><a href="#java快捷键" class="headerlink" title="java快捷键"></a>java快捷键</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">alt+insert 选择生成一些基本的功能函数如:构造函数，返回函数等</span><br><span class="line">ctrl+d 复制一行</span><br><span class="line">ctrl+/ 注释一行</span><br><span class="line">ctrl+shift+/ 多行注释</span><br><span class="line">sout 输出语句</span><br><span class="line">psvm main方法</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js(1.Node.js下载)</title>
      <link href="/posts/c5e4639a.html"/>
      <url>/posts/c5e4639a.html</url>
      
        <content type="html"><![CDATA[<h4 id="Node-js下载"><a href="#Node-js下载" class="headerlink" title="Node.js下载"></a>Node.js下载</h4><p><a href="https://nodejs.org/en/">下载链接</a></p><h4 id="一路next"><a href="#一路next" class="headerlink" title="一路next"></a>一路next</h4><h4 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h4><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303132338907.png" alt="1"></p><h4 id="验证是否安装成功"><a href="#验证是否安装成功" class="headerlink" title="验证是否安装成功"></a>验证是否安装成功</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>如下图所示，即为安装成功：<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303140956163.png" alt="2"></p><h4 id="修改模块下载位置"><a href="#修改模块下载位置" class="headerlink" title="修改模块下载位置"></a>修改模块下载位置</h4><p>使用npm get prefix查看npm全局模块的存放路径<br>使用npm get cache查看npm缓存默认存放路径<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm get prefix</span><br><span class="line">npm get cache</span><br></pre></td></tr></table></figure><br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303140957517.png" alt="3"><br>如上图所示，npm 全局模块存放位置以及cache的存放位置，默认是在 C 盘 “C:Users用户AppData” 下。</p><h5 id="在-nodejs-安装目录下，创建-“node-global”-和-“node-cache”-两个文件夹"><a href="#在-nodejs-安装目录下，创建-“node-global”-和-“node-cache”-两个文件夹" class="headerlink" title="在 nodejs 安装目录下，创建 “node_global” 和 “node_cache” 两个文件夹"></a>在 nodejs 安装目录下，创建 “node_global” 和 “node_cache” 两个文件夹</h5><p>!<img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303140957013.png" alt="4"></p><h5 id="修改默认文件夹"><a href="#修改默认文件夹" class="headerlink" title="修改默认文件夹"></a>修改默认文件夹</h5><p>设置全局模块的安装路径到 “node_global” 文件夹<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set prefix &quot;D:\Node.js\node_global&quot;</span><br></pre></td></tr></table></figure><br>设置缓存到 “node_cache” 文件夹<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set cache &quot;D:\Node.js\node_cache&quot;</span><br></pre></td></tr></table></figure><br>如下图所示：<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303140958772.png" alt="5"></p><h5 id="注意：由于-node-全局模块大多数都是可以通过命令行访问的，还要把【node-global】的路径“E-devTools-odejs-ode-global”加入到【系统变量-】下的【PATH】-变量中，方便直接使用命令行运行，如下图所示："><a href="#注意：由于-node-全局模块大多数都是可以通过命令行访问的，还要把【node-global】的路径“E-devTools-odejs-ode-global”加入到【系统变量-】下的【PATH】-变量中，方便直接使用命令行运行，如下图所示：" class="headerlink" title="注意：由于 node 全局模块大多数都是可以通过命令行访问的，还要把【node_global】的路径“E:devTools odejs ode_global”加入到【系统变量 】下的【PATH】 变量中，方便直接使用命令行运行，如下图所示："></a>注意：由于 node 全局模块大多数都是可以通过命令行访问的，还要把【node_global】的路径“E:devTools odejs ode_global”加入到【系统变量 】下的【PATH】 变量中，方便直接使用命令行运行，如下图所示：</h5><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303140958092.png" alt="6"></p><h5 id="测试默认位置是否更改成功"><a href="#测试默认位置是否更改成功" class="headerlink" title="测试默认位置是否更改成功"></a>测试默认位置是否更改成功</h5><p>经过上面的步骤，nodejs下载的模块就会自动下载到我们自定义的目录，接下来我们测试一下是否更改成功。输入下面的命令：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install express -g</span><br></pre></td></tr></table></figure><br>或者<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install express --global</span><br></pre></td></tr></table></figure><br>注意：“-g”等同于“–global”，“-g” 是全局安装，不加“-g”就是默认下载到当前目录。“-g” 表示安装到之前设置的【node_global】目录下，同时nodejs会自动地在node_global文件夹下创建【node_modules】子文件夹， 即自动下载到“D:\Node.js\node_global\Node_modules” 路径下。<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303140959085.png" alt="7"><br>express模块成功，然后在文件管理器中查看是否保存到上面自定义的路径下。<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141000250.png" alt="8"><br>可以看到，express模块已经成功地下载到【E:devTools odejs ode_global ode_modules】下。<br>注意:若执行命令npm install express -g出现如下报错：<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141000973.png" alt="9"><br>是由于对文件夹操作的权限不够，右击Nodejs文件夹-&gt;属性-&gt;安全，点击编辑，将所有权限都即可。<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141000277.png" alt="10"><br>※执行npm install express -g仍然出错的话继续将nodejs下【node_cache】、【node_global】、【node_modules】这三个文件夹的所有权限勾选，再次执行：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install express -g</span><br></pre></td></tr></table></figure><br>即可下载成功。</p><h4 id="设置淘宝镜像"><a href="#设置淘宝镜像" class="headerlink" title="设置淘宝镜像"></a>设置淘宝镜像</h4><h5 id="将npm默认的registry修改为淘宝registry"><a href="#将npm默认的registry修改为淘宝registry" class="headerlink" title="将npm默认的registry修改为淘宝registry"></a>将npm默认的registry修改为淘宝registry</h5><p>说明：npm 默认的 registry ,也就是下载 npm 包时会从国外的服务器下载，国内下载会很慢，一般更换为淘宝镜像：<a href="https://registry.npm.taobao.org。">https://registry.npm.taobao.org。</a><br>1.查看当前使用的镜像路径<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config get registry</span><br></pre></td></tr></table></figure><br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141001192.png" alt="11"><br>2.更换npm为淘宝镜像<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org/</span><br></pre></td></tr></table></figure><br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141001941.png" alt="12"><br>3 检查镜像是否配置成功<br>再次执行npm config get registry，检查当前的镜像路径：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config get registry</span><br></pre></td></tr></table></figure><br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141001048.png" alt="13"><br>如上图所示，npm默认的registry已修改为淘宝registry。</p><h5 id="全局安装基于淘宝源的cnpm"><a href="#全局安装基于淘宝源的cnpm" class="headerlink" title="全局安装基于淘宝源的cnpm"></a>全局安装基于淘宝源的cnpm</h5><p>说明：由于npm的服务器在海外，所以访问速度比较慢，访问不稳定 ，cnpm的服务器是由淘宝团队提供，服务器在国内，cnpm是npm镜像，一般会同步更新，相差在10分钟，所以cnpm在安装一些软件时候会比较有优势。但是cnpm一般只用于模块安装，在项目创建与卸载等相关操作时仍使用npm。<br>1 全局安装基于淘宝源的cnpm<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141001238.png" alt="14"><br>2 本地查看cnpm模块<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141002503.png" alt="15"><br>3 执行命令查看cnpm是否安装成功<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm -v</span><br></pre></td></tr></table></figure><br>如下图所示，即代表cnpm配置成功。<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141002821.png" alt="16"></p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图像增强（空域）</title>
      <link href="/posts/6ac4f9a8.html"/>
      <url>/posts/6ac4f9a8.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://ww2.mathworks.cn/help/index.html?s_tid=CRUX_lftnav">MATLAB官方帮助文档</a><br>1</p><h2 id="一、图像增强的概念及分类"><a href="#一、图像增强的概念及分类" class="headerlink" title="一、图像增强的概念及分类"></a>一、图像增强的概念及分类</h2><p>概念：通过对图像的各种加工，获得视觉效果更好，或看起来更有用的图像。突出有用信息，增强后的图像不要求保真。<br>分类：空域增强、频率增强、彩色增强<br>空域增强的方法：空域（灰度）变换、空域滤波</p><p><img src="https://img-blog.csdnimg.cn/20191019104840386.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDU4Njc1MA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="灰度变换"><a href="#灰度变换" class="headerlink" title="灰度变换"></a>灰度变换</h2><h3 id="1-灰度级映射"><a href="#1-灰度级映射" class="headerlink" title="1.灰度级映射"></a>1.灰度级映射</h3><p>变换中对每一点作处理，每一个灰度值映射到另一灰度值</p><p>​                    g(x, y) = T [ f(x, y) ]</p><h3 id="常用的映射"><a href="#常用的映射" class="headerlink" title="常用的映射"></a>常用的映射</h3><h4 id="1-图像求反"><a href="#1-图像求反" class="headerlink" title="1.图像求反"></a>1.图像求反</h4><p>​                    g(x,y) = (L-1)– f(x,y)</p><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304082140165.png" alt="在这里插入图片描述"></p><p>目的：灰度值反向，即黑变白，白变黑</p><h4 id="2-增强对比度"><a href="#2-增强对比度" class="headerlink" title="2.增强对比度"></a>2.增强对比度</h4><p>采用分段形式，小于f1的灰度范围压缩，f1到f2之间灰度范围增加（增强对比度），大于f2的灰度范围压缩</p><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304082141371.png" alt="在这里插入图片描述"></p><p><strong>代码实现：</strong></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%对I进行灰度线性变换 [low_in high_in]为需要变换的灰度级范围 变换时采用imdouble型</span></span><br><span class="line">J = imadjust(I,[low_in high_in],[low_out high_out])</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">I=imread(<span class="string">&#x27;cat.png&#x27;</span>);</span><br><span class="line">I=rgb2gray(I);</span><br><span class="line">I=im2double(I);</span><br><span class="line"></span><br><span class="line"><span class="comment">%做出经过灰度线性变换和未经过灰度线性变换的直方图</span></span><br><span class="line">subplot(<span class="number">221</span>);</span><br><span class="line">hist(I);</span><br><span class="line">title(<span class="string">&#x27;orignal&#x27;</span>)</span><br><span class="line"><span class="comment">%进行灰度线性变换</span></span><br><span class="line">I0=imadjust(I,[<span class="number">0.2</span>,<span class="number">0.8</span>]);</span><br><span class="line">subplot(<span class="number">222</span>);</span><br><span class="line">hist(I0);</span><br><span class="line">title(<span class="string">&#x27;operated&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">%做出经过变换后的图像</span></span><br><span class="line">subplot(<span class="number">223</span>);</span><br><span class="line">imshow(I);</span><br><span class="line">subplot(<span class="number">224</span>);</span><br><span class="line">imshow(I0);</span><br></pre></td></tr></table></figure><p>结果：</p><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304081849988.png" alt=""></p><p>1.将[0.2,0.8]范围的灰度级映射到[0,1]，可以发现亮度提高，但是原图像中高亮度区域信息丢失<br>2.与直方图对应，可以发现原图中[0.8,1]的部分全部映射到1处</p><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304081853184.png" alt=""></p><p>采用默认参数则默认将灰度级存在的范围映射到[0,1]，上图可以发现是从[0,0.9]映射到[0,1]</p><h4 id="3-对数变换"><a href="#3-对数变换" class="headerlink" title="3.对数变换"></a>3.对数变换</h4><p>借助对数变换实现动态范围压缩，低灰度区域拓展（黑），高灰度区域（白）压缩，体现就是原黑色区域对比度增强。<br>还有一个应用就是压缩动态范围，频谱分析时可能需要使用，防止丢失细节。</p><p>​                        g(x, y) = a + blog[ f (x, y) +1]</p><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304082141357.png" alt="在这里插入图片描述"></p><h4 id="4-幂次（伽马）变换"><a href="#4-幂次（伽马）变换" class="headerlink" title="4.幂次（伽马）变换"></a>4.幂次（伽马）变换</h4><p><code>γ&lt;1</code>：拓展低亮度区，压缩高亮度区<br><code>γ&gt;1</code>：压缩低亮度区，拓展高亮度区<br><code>γ=1</code>：图像无变化</p><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304082141454.png" alt="在这里插入图片描述"></p><p><strong>代码实现：</strong></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%和灰度线性变化用的是同一个函数，这里多了一个gamma参数</span></span><br><span class="line">J = imadjust(I,[low_in high_in],[low_out high_out],<span class="built_in">gamma</span>)</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">I=imread(<span class="string">&#x27;view.png&#x27;</span>);</span><br><span class="line">I=rgb2gray(I);</span><br><span class="line">I=im2double(I);</span><br><span class="line"></span><br><span class="line"><span class="comment">%做出原始图像</span></span><br><span class="line">subplot(<span class="number">221</span>);</span><br><span class="line">imshow(I);</span><br><span class="line">title(<span class="string">&#x27;orignal&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">%参数为3的伽马变换</span></span><br><span class="line">subplot(<span class="number">222</span>);</span><br><span class="line">I0=imadjust(I,[],[],<span class="number">3</span>);</span><br><span class="line">imshow(I0);</span><br><span class="line">title(<span class="string">&#x27;gamma 3&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">%参数为4的伽马变换</span></span><br><span class="line">subplot(<span class="number">223</span>);</span><br><span class="line">I1=imadjust(I,[],[],<span class="number">4</span>);</span><br><span class="line">imshow(I1);</span><br><span class="line">title(<span class="string">&#x27;gamma 4&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">%参数为5的伽马变换</span></span><br><span class="line">subplot(<span class="number">224</span>);</span><br><span class="line">I2=imadjust(I,[],[],<span class="number">5</span>);</span><br><span class="line">imshow(I2);</span><br><span class="line">title(<span class="string">&#x27;gamma 5&#x27;</span>);</span><br></pre></td></tr></table></figure><p><strong>结果:</strong></p><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304082141734.png" alt="在这里插入图片描述"></p><p>可以发现，当作gamma&gt;1的变换时，起到的是扩展亮度区域的作用</p><h3 id="2-直方图均衡化"><a href="#2-直方图均衡化" class="headerlink" title="2.直方图均衡化"></a>2.直方图均衡化</h3><p>目的：借助直方图实现灰度映射</p><h4 id="1-直方图概念"><a href="#1-直方图概念" class="headerlink" title="1.直方图概念"></a>1.直方图概念</h4><p>数字图像中每一灰度级与其出现的频度之间的关系，类似概率密度函数。</p><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304082141703.png" alt="在这里插入图片描述"></p><p>其中，N表示像素点的总数，nk表示灰度大小为fk的像素点的总数，相除即得灰度大小为fk出现的概率值<br>注：直方图是统计概念，每个图像都有一个直方图，但相同的直方图可以有完全不同的图像（像素的分布位置不同）</p><h4 id="2-直方图分析"><a href="#2-直方图分析" class="headerlink" title="2.直方图分析"></a>2.直方图分析</h4><p>对于暗色图像，其直方图集中在灰度级低的一侧。<br>对于明亮图像，其直方图集中在灰度级高的一侧。</p><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304082141400.png" alt="在这里插入图片描述"></p><p>如果一幅图像的像素占有尽可能多的灰度级并且分布均匀，则这样的图像有高对比度和多变的灰度色调。</p><h4 id="3-直方图均衡化"><a href="#3-直方图均衡化" class="headerlink" title="3.直方图均衡化"></a>3.直方图均衡化</h4><p>目的：拉伸原始直方图，使其变换为均匀形式，使图像的熵最大，图像包含的平均信息量最大。<br>即使用一个灰度映射函数，能够使变换后的图像的直方图达到均匀的状态。<br>累计分布函数（CDF，类似于概率分布函数）能完成此功能。</p><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304082141577.png" alt="在这里插入图片描述"></p><p>注：<br>1.可以证明，对于连续情况，使用累计分布函数进行灰度映射得到的图像，其直方图为均匀的，但由于数字图像的离散性，故得到的图像的直方图并不是完全均匀的。<br>2.但是，数字图像的直方图均衡化具有展开输入图像直方图的趋势，均衡后的图像的灰度级跨越更宽灰度级范围，即增强了对比度。<br>3.定性的理解，对于灰度级大量分布的范围（灰度级坐标），其累计分布函数在该范围斜率大，结果就是拓展该范围的灰度级。<br><strong>代码实现：</strong></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%基于向量 x 中的元素创建直方图条形图 x要为double型</span></span><br><span class="line">hist(x)</span><br><span class="line"></span><br><span class="line"><span class="comment">%直方图均衡化</span></span><br><span class="line">B=histeq(A0);</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">A=imread(<span class="string">&#x27;woman.png&#x27;</span>);</span><br><span class="line">A0=rgb2gray(A);</span><br><span class="line">A1=double(A0);</span><br><span class="line"></span><br><span class="line"><span class="comment">%直方图均衡化</span></span><br><span class="line">B=histeq(A0);</span><br><span class="line">B=double(B);</span><br><span class="line"></span><br><span class="line"><span class="comment">%作出均衡化后的直方图</span></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line">hist(B)</span><br><span class="line">title(<span class="string">&#x27;hist operated&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">%作出均衡化前的直方图</span></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>);</span><br><span class="line">hist(A1)</span><br><span class="line">title(<span class="string">&#x27;hist original&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">%作出均衡化后的图</span></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line">imshow(B,[]);</span><br><span class="line">title(<span class="string">&#x27;operated&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">%作出均衡化之前的图</span></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>);</span><br><span class="line">imshow(A0,[]);</span><br><span class="line">title(<span class="string">&#x27;orignal&#x27;</span>);</span><br></pre></td></tr></table></figure><p><strong>结果：</strong></p><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304082141126.png" alt="在这里插入图片描述"></p><p>可以发现，经过直方图均衡化的图像对比度增强且其直方图的灰度级明显拓展。</p><h4 id="4-直方图规定化"><a href="#4-直方图规定化" class="headerlink" title="4.直方图规定化"></a>4.直方图规定化</h4><p>目的：直方图均衡化可以自动增强整个图像对比度，但增强效果不容易控制。实际中有时需要把直方图换成规定形式。</p><h2 id="二、图像间算术与逻辑运算"><a href="#二、图像间算术与逻辑运算" class="headerlink" title="二、图像间算术与逻辑运算"></a>二、图像间算术与逻辑运算</h2><h3 id="1-算术运算"><a href="#1-算术运算" class="headerlink" title="1.算术运算"></a>1.算术运算</h3><h4 id="1-1-图像的相加（平均）运算"><a href="#1-1-图像的相加（平均）运算" class="headerlink" title="1.1.图像的相加（平均）运算"></a>1.1.图像的相加（平均）运算</h4><p>目的：消除噪声<br>原理：图像噪声不相关，随着叠加图像增加，噪声在每个像素的影响逐步减小</p><h4 id="1-2-图像相减运算"><a href="#1-2-图像相减运算" class="headerlink" title="1.2.图像相减运算"></a>1.2.图像相减运算</h4><p>目的：图像差异，边缘检测，运动目标信息检测等</p><h3 id="2-逻辑运算"><a href="#2-逻辑运算" class="headerlink" title="2.逻辑运算"></a>2.逻辑运算</h3><p>与、或、非、异或</p><h2 id="三、空间滤波"><a href="#三、空间滤波" class="headerlink" title="三、空间滤波"></a>三、空间滤波</h2><h3 id="1-概述"><a href="#1-概述" class="headerlink" title="1.概述"></a>1.概述</h3><p>空间模板邻域操作<br><strong>分类</strong><br>按特点：线性、非线性<br>按功能：<br>平滑：模糊、消除噪声；减弱或消除傅里叶高频分量<br>锐化：增强细节、边缘；减弱或消除傅里叶低频分量</p><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304082141150.png" alt="在这里插入图片描述"></p><h3 id="2-滤波器机理"><a href="#2-滤波器机理" class="headerlink" title="2.滤波器机理"></a>2.滤波器机理</h3><p>在待处理图像中逐点地移动掩模。在每一点 (x，y)处，滤波器在该点的响应通过事先义的关系来计算 。对于线性空间滤波其响应由滤波器系数与滤波掩模扫过区域的相应像索值的乘积之和给出：</p><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304082142332.png" alt="在这里插入图片描述"></p><p>注：<br>冈萨雷斯的书中定义此操作为相关，其他的一些参考资料则定义为卷积</p><h3 id="3-平滑滤波"><a href="#3-平滑滤波" class="headerlink" title="3.平滑滤波"></a>3.平滑滤波</h3><h4 id="3-1线性平滑滤波器"><a href="#3-1线性平滑滤波器" class="headerlink" title="3.1线性平滑滤波器"></a><strong>3.1线性平滑滤波器</strong></h4><p>原理：<br>线性平滑滤波器的输出（响应）是包含在滤波器模板邻域内的像素的简单平均值，可以将其归入低通滤波器中。<br>目的：<br>降低噪声、模糊处理<br>常用模板：</p><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304082142754.png" alt="在这里插入图片描述"></p><p><strong>代码实现：</strong></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%用多维过滤器h过滤多维数组A，并返回结果B options为形参，对应的是滤波的方法（相关或卷积）</span></span><br><span class="line">B = imfilter(A,h,options,...)</span><br><span class="line"></span><br><span class="line"><span class="comment">%根据矩阵 H 中的系数，对数据矩阵 X 应用有限脉冲响应滤波器</span></span><br><span class="line">Y = filter2(H,X)</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">I=imread(<span class="string">&#x27;children.png&#x27;</span>);</span><br><span class="line">I=rgb2gray(I);</span><br><span class="line"></span><br><span class="line"><span class="comment">%显示原始图像</span></span><br><span class="line">subplot(<span class="number">121</span>);</span><br><span class="line">imshow(I);</span><br><span class="line">title(<span class="string">&#x27;original&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">%显示滤波后的图像 注意滤波后double要转换为uint8型</span></span><br><span class="line">subplot(<span class="number">122</span>);</span><br><span class="line"><span class="comment">%建立系数矩阵</span></span><br><span class="line">H=<span class="built_in">ones</span>(<span class="number">3</span>)./<span class="number">9</span>;</span><br><span class="line"><span class="comment">%I0=filter2(H,I,&#x27;full&#x27;);</span></span><br><span class="line">I0=imfilter(I,H,<span class="string">&#x27;corr&#x27;</span>);</span><br><span class="line">I0=uint8(I0);</span><br><span class="line">imshow(I0);</span><br><span class="line">title(<span class="string">&#x27;operated&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304082142287.png" alt="在这里插入图片描述"></p><p>可以发现，线性滤波后的图像明显模糊化。</p><h4 id="3-2非线性中值滤波器"><a href="#3-2非线性中值滤波器" class="headerlink" title="3.2非线性中值滤波器"></a><strong>3.2非线性中值滤波器</strong></h4><p>原理：<br>它的响应基于图像滤波器包围的图像区域中像素的排序，然后由统计结果决定的值代替中心像素的值。（采用的是中间值）<br>目的：消除椒盐噪声</p><p><strong>代码实现：</strong></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">I=imread(<span class="string">&#x27;children.png&#x27;</span>);</span><br><span class="line">I=rgb2gray(I);</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">121</span>);</span><br><span class="line"><span class="comment">%加入椒盐噪声</span></span><br><span class="line">I0=imnoise(I,<span class="string">&#x27;salt &amp; pepper&#x27;</span>); </span><br><span class="line">imshow(I0);</span><br><span class="line">title(<span class="string">&#x27;with noise&#x27;</span>);</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">122</span>);</span><br><span class="line"><span class="comment">%进行中值滤波 选定3*3的邻域</span></span><br><span class="line">I1=medfilt2(I0,[<span class="number">3</span>,<span class="number">3</span>]);</span><br><span class="line">subplot(<span class="number">122</span>);</span><br><span class="line">imshow(I1);</span><br><span class="line">title(<span class="string">&#x27;with median filter&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304082142011.png" alt="在这里插入图片描述"></p><p>中值滤波能够较好地滤去椒盐噪声，但会模糊原图像，且设置的邻域越大，模糊度越高。</p><h3 id="4-锐化滤波"><a href="#4-锐化滤波" class="headerlink" title="4.锐化滤波"></a>4.锐化滤波</h3><p>目的：突出灰度的过渡部分</p><h4 id="4-1线性锐化滤波器"><a href="#4-1线性锐化滤波器" class="headerlink" title="4.1线性锐化滤波器"></a><strong>4.1线性锐化滤波器</strong></h4><p>拉普拉斯算子实现锐化<br>原理：其应用强调的是图像中灰度的突变，并不强调灰度级缓慢变化的区域<br>注：<br>1.如果使用的定义具有负的中心系数，那么必须将原图像减去经拉普拉斯变换后的图像<br>2.如果使用的定义具有正的中心系数，那么必须将原图像加上经拉普拉斯变换后的图像<br>这样才能得到增强的图像<br>模板：<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304082142499.png" alt="在这里插入图片描述"></p><p>此时原图像应该加上经拉普拉斯变换后的图像。</p><p>锐化滤波器的效果也可以用原始图减去平滑图（低通）得到，故高平提升滤波器可表示为：</p><p>​                                High boost = AxOriginal – Low pass = (A-1)xOriginal + High pass<br>​                                            A=1 普通高通滤波，A&gt;1 高频+原图</p><p><strong>代码实现：</strong></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">I=imread(<span class="string">&#x27;children.png&#x27;</span>);</span><br><span class="line">I=rgb2gray(I);</span><br><span class="line"></span><br><span class="line"><span class="comment">%作出原始图像</span></span><br><span class="line">subplot(<span class="number">221</span>);</span><br><span class="line">imshow(I);</span><br><span class="line">title(<span class="string">&#x27;original&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">%锐化滤波矩阵</span></span><br><span class="line">H=[<span class="number">-1</span> <span class="number">-1</span> <span class="number">-1</span>;<span class="number">-1</span> <span class="number">8</span> <span class="number">-1</span>;<span class="number">-1</span> <span class="number">-1</span> <span class="number">-1</span>];</span><br><span class="line"><span class="comment">%经过锐化滤波后的图像</span></span><br><span class="line">I0=imfilter(I,H,<span class="string">&#x27;corr&#x27;</span>);</span><br><span class="line">subplot(<span class="number">222</span>);</span><br><span class="line">imshow(I0);</span><br><span class="line">title(<span class="string">&#x27;sharpen&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">%（1*原图+1*高频）/2</span></span><br><span class="line">I1=(I0+I)/<span class="number">2</span>;</span><br><span class="line">subplot(<span class="number">223</span>);</span><br><span class="line">imshow(I1);</span><br><span class="line">title(<span class="string">&#x27;sharpend+original&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">%（10*原图+1*高频）/11 先转换为double再转换为uint8，防止溢出</span></span><br><span class="line">I2=(double(I0)+<span class="number">10</span>*double(I))/<span class="number">11</span>;</span><br><span class="line">I2=uint8(I2);</span><br><span class="line">subplot(<span class="number">224</span>);</span><br><span class="line">imshow(I2);</span><br><span class="line">title(<span class="string">&#x27;sharpend+10*original&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304082142863.png" alt="在这里插入图片描述"></p><p>利用锐化滤波器可以提取出边缘信息，但是使用了-H和H没有区别，都是原图像加上经过拉普拉斯变换的图像。。。</p><p>利用原图-经过低通滤波后的图像同样可以得到边缘轮廓：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">H2=(<span class="number">1</span>/<span class="number">25</span>)*<span class="built_in">ones</span>(<span class="number">5</span>);</span><br><span class="line"><span class="comment">%经过锐化滤波后的图像</span></span><br><span class="line">I0=imfilter(I,H2,<span class="string">&#x27;corr&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">10</span></span><br><span class="line">    I0=imfilter(I0,H2,<span class="string">&#x27;corr&#x27;</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">I4=I-I0;</span><br><span class="line">subplot(<span class="number">222</span>);</span><br><span class="line">imshow(I4);</span><br><span class="line">title(<span class="string">&#x27;sharpen&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202304082142340.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 数字图像处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数字图像处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typora(破解)</title>
      <link href="/posts/59701b89.html"/>
      <url>/posts/59701b89.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/weixin_52908342/article/details/125962182?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522168042009916800211591741%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=168042009916800211591741&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-1-125962182-null-null.142^v80^insert_down38,201^v4^add_ask,239^v2^insert_chatgpt&amp;utm_term=typora%E7%A0%B4%E8%A7%A3%E7%89%88&amp;spm=1018.2226.3001.4187">原文链接</a><br><a href="https://download.jobpig.top/49.html/">网站：小猪资源站</a></p>]]></content>
      
      
      <categories>
          
          <category> tips </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tips </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/manifest.json"/>
      <url>/manifest.json</url>
      
        <content type="html"><![CDATA[{"name":"UnSpMan`Blog","short_name":"佩奇","theme_color":"#3b70fc","background_color":"#3b70fc","display":"standalone","scope":"/","start_url":"/","icons":[{"src":"/img/siteicon/16.png","sizes":"16x16","type":"image/png"},{"src":"/img/siteicon/32.png","sizes":"32x32","type":"image/png"},{"src":"/img/siteicon/48.png","sizes":"48x48","type":"image/png"},{"src":"/img/siteicon/64.png","sizes":"64x64","type":"image/png"},{"src":"/img/siteicon/128.png","sizes":"128x128","type":"image/png"},{"src":"/img/siteicon/144.png","sizes":"144x144","type":"image/png"},{"src":"/img/siteicon/512.png","sizes":"512x512","type":"image/png"}],"splash_pages":null}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* @font-face {  font-family: Candyhome;  src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/Candyhome.ttf);  font-display: swap;  font-weight: lighter;} */@font-face {    font-family: ZhuZiAYuanJWD;    src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/ZhuZiAWan.woff2);    font-display: swap;    font-weight: lighter;  }    div#menus {    font-family: "ZhuZiAYuanJWD";  }  h1#site-title {    font-family: ZhuZiAYuanJWD;    font-size: 3em !important;  }  a.article-title,  a.blog-slider__title,  a.categoryBar-list-link,  h1.post-title {    font-family: ZhuZiAYuanJWD;  }    .iconfont {    font-family: "iconfont" !important;    font-size: 3em;    /* 可以定义图标大小 */    font-style: normal;    -webkit-font-smoothing: antialiased;    -moz-osx-font-smoothing: grayscale;  }    /* 时间轴生肖icon */  svg.icon {    /* 这里定义svg.icon，避免和Butterfly自带的note标签冲突 */    width: 1em;    height: 1em;    /* width和height定义图标的默认宽度和高度*/    vertical-align: -0.15em;    fill: currentColor;    overflow: hidden;  }    .icon-zhongbiao::before {    color: #f7c768;  }    /* bilibli番剧插件 */  #article-container .bangumi-tab.bangumi-active {    background: var(--anzhiyu-theme);    color: var(--anzhiyu-ahoverbg);    border-radius: 10px;  }  a.bangumi-tab:hover {    text-decoration: none !important;  }  .bangumi-button:hover {    background: var(--anzhiyu-theme) !important;    border-radius: 10px !important;    color: var(--anzhiyu-ahoverbg) !important;  }  a.bangumi-button.bangumi-nextpage:hover {    text-decoration: none !important;  }  .bangumi-button {    padding: 5px 10px !important;  }    a.bangumi-tab {    padding: 5px 10px !important;  }  svg.icon.faa-tada {    font-size: 1.1em;  }  .bangumi-info-item {    border-right: 1px solid #f2b94b;  }  .bangumi-info-item span {    color: #f2b94b;  }  .bangumi-info-item em {    color: #f2b94b;  }    /* 解决artitalk的图标问题 */  #uploadSource > svg {    width: 1.19em;    height: 1.5em;  }    /*top-img黑色透明玻璃效果移除，不建议加，除非你执着于完全一图流或者背景图对比色明显 */  #page-header:not(.not-top-img):before {    background-color: transparent !important;  }    /* 首页文章卡片 */  #recent-posts > .recent-post-item {    background: rgba(255, 255, 255, 0.9);  }    /* 首页侧栏卡片 */  #aside-content .card-widget {    background: rgba(255, 255, 255, 0.9);  }    /* 文章页面正文背景 */  div#post {    background: rgba(255, 255, 255, 0.9);  }    /* 分页页面 */  div#page {    background: rgba(255, 255, 255, 0.9);  }    /* 归档页面 */  div#archive {    background: rgba(255, 255, 255, 0.9);  }    /* 标签页面 */  div#tag {    background: rgba(255, 255, 255, 0.9);  }    /* 分类页面 */  div#category {    background: rgba(255, 255, 255, 0.9);  }    /*夜间模式伪类遮罩层透明*/  [data-theme="dark"] #recent-posts > .recent-post-item {    background: #121212;  }    [data-theme="dark"] .card-widget {    background: #121212 !important;  }    [data-theme="dark"] div#post {    background: #121212 !important;  }    [data-theme="dark"] div#tag {    background: #121212 !important;  }    [data-theme="dark"] div#archive {    background: #121212 !important;  }    [data-theme="dark"] div#page {    background: #121212 !important;  }    [data-theme="dark"] div#category {    background: #121212 !important;  }    [data-theme="dark"] div#category {    background: transparent !important;  }  /* 页脚透明 */  #footer {    background: transparent !important;  }    /* 头图透明 */  #page-header {    background: transparent !important;  }    #rightside > div > button {    border-radius: 5px;  }    /* 滚动条 */    ::-webkit-scrollbar {    width: 10px;    height: 10px;  }    ::-webkit-scrollbar-thumb {    background-color: #3b70fc;    border-radius: 2em;  }    ::-webkit-scrollbar-corner {    background-color: transparent;  }    ::-moz-selection {    color: #fff;    background-color: #3b70fc;  }    /* 音乐播放器 */    /* .aplayer .aplayer-lrc {    display: none !important;  } */    .aplayer.aplayer-fixed.aplayer-narrow .aplayer-body {    left: -66px !important;    transition: all 0.3s;    /* 默认情况下缩进左侧66px，只留一点箭头部分 */  }    .aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover {    left: 0 !important;    transition: all 0.3s;    /* 鼠标悬停是左侧缩进归零，完全显示按钮 */  }    .aplayer.aplayer-fixed {    z-index: 999999 !important;  }    /* 评论框  */  .vwrap {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 30px 0px;  }    /* 设置评论框 */    .vcard {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 0px 0px;  }    /* 鼠标图标 */  body {    cursor: url("/img/x1.cur"), auto;  }  a,  [type="button"]:not(:disabled),  [type="reset"]:not(:disabled),  [type="submit"]:not(:disabled),  button:not(:disabled) {    cursor: url("/img/x2.cur"), auto !important;  }  /* md网站下划线 */  #article-container a:hover {    text-decoration: none !important;  }    #article-container #hpp_talk p img {    display: inline;  }    /* 404页面 */  #error-wrap {    position: absolute;    top: 40%;    right: 0;    left: 0;    margin: 0 auto;    padding: 0 1rem;    max-width: 1000px;    transform: translate(0, -50%);  }    #error-wrap .error-content {    display: flex;    flex-direction: row;    justify-content: center;    align-items: center;    margin: 0 1rem;    height: 18rem;    border-radius: 8px;    background: var(--card-bg);    box-shadow: var(--card-box-shadow);    transition: all 0.3s;  }    #error-wrap .error-content .error-img {    box-flex: 1;    flex: 1;    height: 100%;    border-top-left-radius: 8px;    border-bottom-left-radius: 8px;    background-color: #3b70fc;    background-position: center;    background-size: cover;  }    #error-wrap .error-content .error-info {    box-flex: 1;    flex: 1;    padding: 0.5rem;    text-align: center;    font-size: 14px;    font-family: Titillium Web, "PingFang SC", "Hiragino Sans GB", "Microsoft JhengHei", "Microsoft YaHei", sans-serif;  }  #error-wrap .error-content .error-info .error_title {    margin-top: -4rem;    font-size: 9em;  }  #error-wrap .error-content .error-info .error_subtitle {    margin-top: -3.5rem;    word-break: break-word;    font-size: 1.6em;  }  #error-wrap .error-content .error-info a {    display: inline-block;    margin-top: 0.5rem;    padding: 0.3rem 1.5rem;    background: var(--btn-bg);    color: var(--btn-color);  }    #body-wrap.error .aside-list {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    bottom: 0px;    position: absolute;    padding: 1rem;    width: 100%;    overflow: scroll;  }    #body-wrap.error .aside-list .aside-list-group {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    max-width: 1200px;    margin: 0 auto;  }    #body-wrap.error .aside-list .aside-list-item {    padding: 0.5rem;  }    #body-wrap.error .aside-list .aside-list-item img {    width: 100%;    object-fit: cover;    border-radius: 12px;  }    #body-wrap.error .aside-list .aside-list-item .thumbnail {    overflow: hidden;    width: 230px;    height: 143px;    background: var(--anzhiyu-card-bg);    display: flex;  }    #body-wrap.error .aside-list .aside-list-item .content .title {    -webkit-line-clamp: 2;    overflow: hidden;    display: -webkit-box;    -webkit-box-orient: vertical;    line-height: 1.5;    justify-content: center;    align-items: flex-end;    align-content: center;    padding-top: 0.5rem;    color: white;  }    #body-wrap.error .aside-list .aside-list-item .content time {    display: none;  }    /* 代码框主题 */  #article-container figure.highlight {    border-radius: 10px;  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/ali_font.js"/>
      <url>/js/ali_font.js</url>
      
        <content type="html"><![CDATA[!(function (c) {    var l,      h,      a,      t,      i,      v =        '<svg><symbol id="icon-dragon_chen" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-498.122105 265.620211L431.157895 754.526316V485.052632h-66.074948c-14.470737 110.645895-44.355368 197.066105-102.696421 260.742736l-39.747368-36.432842C306.526316 617.876211 323.368421 462.901895 323.368421 242.526316V215.578947h377.263158v53.894737H377.182316c-0.404211 58.260211-2.209684 112.128-6.359579 161.684211H700.631579v53.894737h-122.152421a481.172211 481.172211 0 0 0 76.826947 119.70021l66.479158-39.855158 27.728842 46.214737-54.460631 32.687158c29.507368 24.953263 63.757474 45.675789 102.80421 58.098526l-16.303158 51.361684c-134.224842-42.711579-222.773895-167.073684-261.551158-268.207157H485.052632v221.857684l68.985263-41.391158 27.728842 46.214737-109.783579 65.886316zM646.736842 377.263158h-215.578947v-53.894737h215.578947v53.894737z" fill="#231F20" ></path></symbol><symbol id="icon-dog_xu" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-375.592421 150.393263c33.684211 44.544 75.210105 74.698105 124.739369 90.812632l11.425684 3.718737 10.401684-6.009264C781.204211 727.740632 808.421053 622.565053 808.421053 592.842105h-53.894737c0 22.069895-19.132632 80.869053-33.711158 103.504842-34.816-14.605474-64.538947-39.262316-89.249684-74.13221 48.316632-55.269053 92.079158-117.328842 120.535579-179.900632l-49.044211-22.285473c-23.767579 52.250947-59.742316 104.717474-100.055579 152.656842-24.010105-50.930526-41.148632-115.927579-51.658105-195.395369H700.631579v-53.894737h-155.189895A1848.050526 1848.050526 0 0 1 538.947368 161.684211h-53.894736c0 58.206316 2.155789 112.074105 6.494315 161.68421H323.368421v26.947368c0 216.549053-13.177263 263.545263-100.702316 359.046737l39.747369 36.432842c63.326316-69.093053 92.806737-118.272 105.714526-206.848H485.052632v-53.894736h-111.319579a1742.147368 1742.147368 0 0 0 3.449263-107.789474h120.158316c12.611368 98.250105 35.031579 177.475368 67.395368 238.187789-61.978947 65.536-128.053895 117.975579-173.298526 142.282106l25.519158 47.481263c47.589053-25.573053 114.095158-77.446737 177.55621-142.821053z m125.170526-411.971368l-80.842105-80.842106-38.103579 38.103579 80.842105 80.842106 38.103579-38.103579z" fill="#231F20" ></path></symbol><symbol id="icon-dog" viewBox="0 0 1024 1024"><path d="M894.814316 904.434526l83.240421-183.134315-13.824-13.204211c-0.485053-0.458105-45.648842-47.589053-47.939369-185.263158-0.134737-7.922526-0.134737-33.953684-0.134736-55.996631-30.693053 15.306105-70.090105 19.887158-106.09179 19.887157-92.752842 0-163.624421-23.983158-210.647579-71.275789a192.512 192.512 0 0 1-27.944421-36.513684H377.263158v377.263158c342.662737 0 403.105684 51.092211 494.592 128.377263 7.922526 6.682947 15.521684 13.312 22.959158 19.86021z" fill="#85C3DE" ></path><path d="M326.063158 282.947368c0 34.250105-13.231158 44.463158-29.642105 44.463158s-29.642105-10.213053-29.642106-44.463158c0-34.223158 13.231158-44.463158 29.642106-44.463157s29.642105 10.24 29.642105 44.463157zM269.473684 430.295579v311.646316L190.275368 916.210526h59.203369L323.368421 753.637053V377.263158h-26.947368c-119.403789 0-172.732632-53.382737-185.505685-107.789474h35.624421c51.092211 0 68.581053-15.764211 120.535579-62.544842 12.773053-11.506526 28.079158-25.276632 47.023158-41.741474l18.351158-15.952842-69.658947-99.139368-44.085895 30.989474 41.768421 59.472842c-11.183158 9.862737-20.884211 18.593684-29.480421 26.327579C180.736 212.156632 176.235789 215.578947 146.539789 215.578947H53.894737v26.947369c0 88.710737 66.910316 178.149053 215.578947 187.769263z m216.710737-161.414737c2.290526 71.733895 28.698947 136.326737 75.048421 182.918737C618.711579 509.628632 702.437053 538.947368 810.091789 538.947368c18.593684 0 36.190316-1.158737 52.628211-3.449263 3.745684 111.265684 33.630316 170.334316 51.496421 196.015158l-38.507789 84.722526C782.174316 742.049684 688.774737 700.631579 377.263158 700.631579v53.894737c34.277053 0 65.697684 0.512 94.639158 1.509052L374.595368 970.105263h59.203369l96.013474-211.240421c66.182737 4.338526 117.005474 11.829895 157.911578 22.016L626.229895 916.210526h59.176421l54.16421-119.134315c47.616 18.405053 79.737263 42.091789 113.125053 69.739789L805.753263 970.105263h59.203369l113.071157-248.778105-13.824-13.204211c-0.485053-0.458105-45.648842-47.589053-47.939368-185.263158C985.168842 498.553263 1024 447.811368 1024 377.263158c0-95.205053-66.506105-161.684211-161.684211-161.684211v53.894737c65.482105 0 107.789474 42.307368 107.789474 107.789474 0 89.088-87.013053 107.789474-160.013474 107.789474-92.752842 0-163.624421-23.983158-210.647578-71.27579-30.315789-30.504421-45.891368-65.832421-53.35579-98.735158 11.210105 6.952421 22.932211 13.338947 35.274105 19.186527l23.04-48.720843c-92.106105-43.654737-148.992-128.646737-219.243789-243.981473l-46.026105 28.05221c49.448421 81.246316 92.968421 148.506947 147.051789 199.302737z" fill="#231F20" ></path></symbol><symbol id="icon-goat" viewBox="0 0 1024 1024"><path d="M548.378947 646.736842a952.32 952.32 0 0 1 140.90779-161.68421H107.789474c0 107.600842 0 107.600842-63.649685 169.283368l-13.069473 12.665263L66.721684 754.526316h417.172211c20.345263-41.472 43.654737-77.446737 64.485052-107.789474z" fill="#F7C768" ></path><path d="M608.256 144.734316C555.762526 115.577263 506.098526 107.789474 485.052632 107.789474V53.894737c32.579368 0 91.270737 11.452632 149.369263 43.735579 75.290947 41.822316 130.694737 94.531368 171.385263 150.878316C755.873684 288.013474 697.101474 323.368421 646.736842 323.368421h-107.789474v-53.894737h107.789474c20.506947 0 48.424421-11.210105 80.437895-31.285895a471.04 471.04 0 0 0-118.918737-93.453473zM832.673684 342.231579c-16.384 0-29.642105 10.24-29.642105 44.463158 0 34.250105 13.231158 44.463158 29.642105 44.463158s29.642105-10.213053 29.642105-44.463158c0-34.223158-13.231158-44.463158-29.642105-44.463158zM1024 619.789474C1024 347.109053 901.066105 122.448842 686.753684 3.395368l-26.165895 47.104C914.324211 191.461053 964.688842 440.400842 969.647158 592.842105h-84.506947c-17.92-35.624421-45.352421-69.12-87.013053-101.995789l-16.788211-13.285053-16.734315 13.392842c-66.128842 52.897684-134.629053 127.083789-187.311158 209.677474H102.965895l-8.272842-20.318316C159.043368 617.013895 161.684211 603.109053 161.684211 485.052632v-53.894737h485.052631v-53.894737H161.684211c0-80.384 14.309053-110.026105 66.586947-137.916632l-25.384421-47.535158C123.365053 234.226526 107.789474 291.920842 107.789474 377.263158v107.789474c0 107.600842 0 107.600842-63.649685 169.283368l-13.069473 12.665263L110.618947 862.315789h58.206316l-43.897263-107.789473h103.477895l43.897263 107.789473h58.206316l-43.897263-107.789473h259.47621C508.981895 824.939789 485.052632 899.152842 485.052632 970.105263h53.894736c0-68.688842 27.270737-144.060632 68.958316-215.578947H687.157895c7.410526 0 13.473684 6.063158 13.473684 13.473684V862.315789h53.894737v-94.315789c0-37.160421-30.208-67.368421-67.368421-67.368421h-44.65179c40.771368-58.017684 89.438316-111.427368 138.913684-153.626947C841.512421 600.037053 862.315789 655.225263 862.315789 754.526316h53.894737c0-38.912-2.748632-74.482526-11.102315-107.789474H1024v-26.947368z" fill="#231F20" ></path></symbol><symbol id="icon-goat_wei" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 50.202947c52.304842 70.925474 136.973474 152.144842 232.528843 190.383158l19.994947-50.041263c-109.271579-43.708632-202.805895-152.629895-238.780632-217.49221H808.421053v-53.894737H538.947368v-53.894737h215.578948v-53.894737h-215.578948V161.684211h-53.894736v161.68421h-215.578948v53.894737h215.578948v53.894737H215.578947v53.894737h255.757474c-35.974737 64.862316-129.536 173.783579-238.807579 217.49221l20.021895 50.041263c95.528421-38.238316 180.197053-119.484632 232.501895-190.383158V808.421053h53.894736v-246.218106z" fill="#231F20" ></path></symbol><symbol id="icon-dragon" viewBox="0 0 1024 1024"><path d="M366.376421 344.441263l152.980211-152.98021c43.142737-43.142737 141.204211-9.216 270.201263 115.738947-15.225263 9.835789-25.114947 15.818105-44.13979 32.256s-38.076632 35.489684-59.418947 56.832c-4.203789 4.203789-51.173053 53.221053-78.740211 82.027789-10.805895-12.126316-22.743579-24.171789-34.654315-36.082526L493.136842 362.792421l-54.218105 54.218105-72.542316-72.569263zM862.315789 512c0 46.834526-45.352421 80.842105-107.789473 80.842105-108.948211 0-189.359158-28.806737-267.129263-56.697263C414.100211 509.871158 344.872421 485.052632 258.182737 485.052632 80.788211 485.052632 0 588.126316 0 683.897263h53.894737C73.216 659.779368 135.302737 646.736842 177.340632 646.736842c77.338947 0 223.124211 23.282526 291.893894 47.912421C547.462737 722.701474 615.989895 754.526316 734.315789 754.526316 862.315789 754.526316 916.210526 670.315789 916.210526 512h-53.894737z" fill="#FF8787" ></path><path d="M552.421053 1024c-69.766737 0-113.825684-13.958737-156.402527-27.459368-54.487579-17.273263-110.807579-35.004632-232.421052-26.516211l-3.826527-53.733053c131.718737-9.458526 195.934316 10.967579 252.52379 28.887579 42.226526 13.365895 78.686316 24.926316 140.126316 24.926316 92.752842 0 148.210526-57.936842 148.210526-113.960421 0-16.949895-5.524211-101.618526-114.634105-101.618526-64.970105 0-112.747789 23.336421-163.328 48.02021C365.325474 830.571789 300.301474 862.315789 204.288 862.315789 85.908211 862.315789 0 787.294316 0 683.897263 0 588.126316 80.788211 485.052632 258.182737 485.052632c86.689684 0 155.917474 24.818526 229.214316 51.09221 45.810526 16.410947 92.564211 33.172211 145.488842 44.166737 9.000421-7.033263 13.850947-16.276211 13.850947-26.758737 0-37.187368-37.672421-74.859789-74.13221-111.265684l-3.287579-3.287579 38.103579-38.103579 3.260631 3.287579C652.853895 446.275368 700.631579 494.026105 700.631579 553.552842c0 12.719158-2.802526 24.926316-7.976421 36.109474A594.997895 594.997895 0 0 0 754.526316 592.842105c62.437053 0 107.789474-34.007579 107.789473-80.842105 0-58.853053-52.870737-110.268632-108.840421-164.702316l-8.057263-7.841684c-19.024842 16.437895-38.076632 35.489684-59.418947 56.832l-38.103579-38.103579c74.805895-74.832842 134.898526-134.898526 268.314947-141.931789V55.619368c-63.407158 7.787789-120.993684 39.424-121.667368 39.801264l-15.818105 8.811789-14.120421-11.344842C731.701895 66.452211 709.712842 53.894737 673.684211 53.894737c-41.418105 0-74.347789 25.869474-109.190737 53.301895-26.624 20.911158-54.137263 42.549895-86.851369 53.194105L469.342316 161.684211h-69.093053l-105.525895 105.525894-38.103579-38.130526L324.015158 161.684211H161.684211V107.789474h303.104c22.231579-8.272842 43.708632-25.168842 66.398315-42.981053C569.829053 34.438737 613.618526 0 673.684211 0c48.909474 0 81.408 17.946947 110.888421 40.097684C813.702737 26.300632 877.729684 0 943.157895 0h26.947368v323.368421h-53.894737v-53.167158c-54.164211 3.098947-92.914526 15.845053-127.002947 36.675369l1.832421 1.778526C852.587789 368.505263 916.210526 430.376421 916.210526 512c0 60.928-43.708632 109.945263-107.789473 127.622737V700.631579h53.894736v-53.894737h53.894737v53.894737h53.894737v53.894737h-53.894737v53.894737h-53.894737v-53.894737h-53.894736c-29.722947 0-53.894737-24.171789-53.894737-53.894737v-53.894737c-118.325895 0-207.063579-31.797895-285.318737-59.877053C400.437895 562.229895 335.494737 538.947368 258.182737 538.947368 117.059368 538.947368 53.894737 611.732211 53.894737 683.897263 53.894737 757.221053 115.738947 808.421053 204.288 808.421053c11.910737 0 23.228632-0.538947 34.034526-1.536C248.454737 796.321684 269.473684 770.640842 269.473684 739.166316c0-33.118316-43.088842-70.979368-58.152421-81.596632l30.935579-44.139789c8.299789 5.793684 81.111579 58.664421 81.111579 125.736421 0 19.429053-4.527158 37.052632-10.994526 52.304842 30.773895-10.051368 58.314105-23.498105 86.662737-37.349053C452.877474 727.848421 508.577684 700.631579 585.997474 700.631579 702.410105 700.631579 754.526316 778.725053 754.526316 856.144842 754.526316 938.657684 678.912 1024 552.421053 1024z m-21.180632-623.104L493.136842 362.792421l137.889684-137.889684 38.103579 38.103579-137.889684 137.889684z m-126.760421-18.351158l-38.103579-38.103579 152.980211-152.98021 38.103579 38.103579-152.980211 152.98021z m282.004211-218.624c15.494737-9.754947 43.331368-31.447579 43.331368-31.447579-25.734737-27.809684-49.556211-33.333895-67.368421-29.07621-19.240421 4.608-37.753263 24.602947-37.753263 24.602947s42.253474 22.447158 61.790316 35.920842z" fill="#231F20" ></path></symbol><symbol id="icon-horse" viewBox="0 0 1024 1024"><path d="M776.003368 646.736842c16.599579-99.947789 43.439158-181.086316 83.213474-256.538947l6.817684-12.934737H269.473684c-36.756211 0-53.894737 54.945684-53.894737 92.05221 0 46.753684 6.656 77.527579 70.278737 176.074106l84.533895 128.269473L498.876632 646.736842h277.126736z" fill="#FFAF6E" ></path><path d="M1024 0v404.210526c0 33.333895 0 134.736842-92.079158 134.736842h-13.824l-78.362947-109.056c-22.743579 49.906526-40.340211 103.046737-53.490527 162.950737h115.092211C937.310316 592.842105 970.105263 625.637053 970.105263 661.638737c0 60.631579-69.389474 154.300632-77.312 164.75621l-43.008-32.471579C875.466105 759.861895 916.210526 693.813895 916.210526 661.638737c0-5.982316-8.919579-14.901895-14.901894-14.901895h-125.332211C761.128421 736.121263 754.526316 840.569263 754.526316 970.105263h-53.894737c0-283.971368 31.097263-453.605053 110.888421-605.049263l20.318316-38.534737 112.801684 156.995369c14.443789-4.419368 25.465263-20.938105 25.465263-79.306106V0h53.894737z m-161.684211 161.684211h53.894737V0h-53.894737v80.842105c-17.381053-14.955789-38.184421-26.947368-80.842105-26.947368h-134.736842v53.894737h134.736842c37.672421 0 80.842105 40.906105 80.842105 53.894737z m-107.789473 0h-215.578948v53.894736h161.684211l53.894737-53.894736zM300.894316 766.544842L400.680421 916.210526h64.754526l-95.043368-142.551579L498.876632 646.736842h167.855157a1212.631579 1212.631579 0 0 1 9.431579-53.894737h-199.383579l-175.885473 173.702737z m109.97221-184.400842l-37.861052-38.319158-132.419369 130.802526C173.729684 571.095579 161.684211 529.812211 161.684211 469.315368 161.684211 398.578526 199.464421 323.368421 269.473684 323.368421h323.368421l53.894737-53.894737H269.473684c-6.709895 0-13.258105 0.565895-19.698526 1.482105C234.927158 249.451789 204.638316 215.578947 160.633263 215.578947 65.967158 215.578947 0 349.291789 0 469.315368c0 70.170947 16.141474 136.650105 49.232842 202.671158L6.197895 723.833263l41.472 34.41179 66.128842-79.737264-8.704-16.033684C83.105684 622.133895 53.894737 558.214737 53.894737 469.315368 53.894737 368.451368 106.765474 269.473684 160.633263 269.473684c13.231158 0 25.815579 9.889684 35.43579 20.533895C142.874947 321.967158 107.789474 388.500211 107.789474 469.315368c0 78.201263 19.698526 130.937263 93.642105 243.981474l-55.296 54.622316L280.899368 970.105263h64.754527l-130.048-195.072 195.260631-192.889263z" fill="#231F20" ></path></symbol><symbol id="icon-monkey_shen" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#BBC4C9" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 134.736842h161.684211v53.894737h53.894737V269.473684h-215.578948V161.684211h-53.894736v107.789473h-215.578948v431.157895h53.894737v-53.894737h161.684211v215.578947h53.894736v-215.578947z m0-161.68421h161.684211v107.789473h-161.684211v-107.789473z m-215.578947 0h161.684211v107.789473h-161.684211v-107.789473z m215.578947-161.684211h161.684211v107.789474h-161.684211v-107.789474z m-215.578947 0h161.684211v107.789474h-161.684211v-107.789474z" fill="#231F20" ></path></symbol><symbol id="icon-ox_chou" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-161.68421 188.631579h-159.555369c13.985684-172.813474 43.115789-357.429895 70.817684-385.158737L700.631579 269.473684H323.368421v53.894737h107.169684c-1.940211 45.756632-8.192 103.962947-15.76421 161.684211H323.368421v53.894736h83.968c-9.862737 68.446316-20.264421 130.128842-25.734737 161.684211H215.578947v53.894737h592.842106v-53.894737z m-346.543158-161.684211h149.800421a3313.717895 3313.717895 0 0 0-16.842105 161.684211h-158.477474c6.036211-35.247158 16.114526-95.636211 25.519158-161.684211z m22.608842-215.578947h171.735579c-15.198316 41.121684-27.405474 100.594526-36.890948 161.684211h-150.123789c7.383579-57.505684 13.419789-115.361684 15.279158-161.684211z" fill="#231F20" ></path></symbol><symbol id="icon-monkey" viewBox="0 0 1024 1024"><path d="M757.733053 485.052632H565.894737a80.842105 80.842105 0 0 0-80.842105 80.842105v215.578947c0 40.96 43.546947 99.678316 77.446736 139.210105C596.426105 960.215579 603.055158 970.105263 603.055158 970.105263H754.526316s15.144421-18.674526 45.891368-58.071579S862.315789 809.984 862.315789 717.608421c0-89.573053-47.993263-166.346105-104.582736-232.555789z" fill="#C3D686" ></path><path d="M538.947368 1024h-53.894736c0-32.794947 25.869474-87.417263 77.446736-103.316211C528.599579 881.152 485.052632 822.433684 485.052632 781.473684c0-44.570947 36.271158-80.842105 80.842105-80.842105h80.842105v53.894737h-80.842105a26.947368 26.947368 0 0 0-26.947369 26.947368c0 19.725474 36.675368 77.473684 92.133053 134.736842h88.602947c20.210526-14.147368 88.737684-71.464421 88.737685-198.602105 0-108.382316-93.237895-202.967579-168.151579-278.986105-49.502316-50.202947-88.576-89.842526-98.735158-128.61979-11.749053-44.732632-21.584842-112.586105-26.327579-148.318315H377.263158c-45.136842 0-89.519158 8.434526-121.802105 53.894736H431.157895v53.894737c-97.28 0-107.789474 113.071158-107.789474 161.684211v53.894737h53.894737v161.68421h-53.894737v-107.789474h-26.947368c-170.253474 0-188.631579-94.234947-188.631579-134.736842 0-31.043368 35.220211-72.326737 55.727158-93.722947 2.694737-14.686316 5.847579-28.348632 9.431579-41.013895H161.684211V215.578947h31.528421C239.642947 120.993684 317.224421 107.789474 377.263158 107.789474h185.640421l2.802526 23.794526c0.134737 1.050947 12.719158 106.657684 27.944421 164.756211 6.494316 24.872421 44.624842 63.514947 84.965053 104.448C760.481684 483.813053 862.315789 587.129263 862.315789 717.608421c0 92.375579-31.124211 155.028211-61.898105 194.425263C904.919579 892.146526 970.105263 803.004632 970.105263 673.684211c0-91.405474-42.819368-154.381474-84.237474-215.255579C847.791158 402.458947 808.421053 344.576 808.421053 269.473684c0-119.349895 87.093895-161.684211 161.68421-161.68421v53.894737c-32.417684 0-107.789474 10.509474-107.789474 107.789473 0 58.502737 31.555368 104.933053 68.096 158.639158C974.282105 492.597895 1024 565.679158 1024 673.684211c0 177.286737-108.301474 296.421053-269.473684 296.421052h-161.684211c-37.672421 0-53.894737 40.906105-53.894737 53.894737zM229.214316 269.473684a384.808421 384.808421 0 0 0-14.012632 58.341053l-1.401263 8.488421-6.090105 6.117053c-22.878316 22.932211-44.813474 52.601263-46.026105 62.275368 0 56.805053 53.76 75.264 107.789473 79.386947V431.157895c0-58.691368 13.473684-119.619368 46.511158-161.684211h-86.770526zM323.368421 1024h-53.894737c0-32.794947 25.869474-87.417263 77.446737-103.316211C313.020632 881.152 269.473684 822.433684 269.473684 781.473684c0-44.570947 36.271158-80.842105 80.842105-80.842105h45.16379A188.847158 188.847158 0 0 1 565.894737 592.842105h134.736842v53.894737h-134.736842c-74.293895 0-134.736842 60.442947-134.736842 134.736842v26.516211l-53.894737 0.377263V781.473684c0-9.162105 0.646737-18.135579 1.913263-26.947368H350.315789c-14.848 0-26.947368 12.072421-26.947368 26.947368 0 19.725474 36.675368 77.473684 92.133053 134.736842H431.157895v53.894737h-53.894737c-37.672421 0-53.894737 40.906105-53.894737 53.894737z" fill="#231F20" ></path></symbol><symbol id="icon-horse_wu" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#FF8787" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 26.947368h269.473685v-53.894736H538.947368v-161.684211h161.684211v-53.894737H411.001263c12.045474-33.28 20.156632-69.793684 20.156632-107.789473h-53.894737c0 121.963789-105.364211 233.391158-106.415158 234.496l38.858105 37.349052c2.883368-3.018105 43.816421-46.133895 77.392842-110.160842H485.052632v161.684211H215.578947v53.894736h269.473685v323.368421h53.894736V538.947368z" fill="#231F20" ></path></symbol><symbol id="icon-ox" viewBox="0 0 1025 1024"><path d="M540.294737 754.526316h215.578947c20.210526 0 35.112421 1.374316 53.894737 4.581052 91.863579 15.656421 145.354105 67.691789 161.684211 86.069895V916.210526h53.894736V635.580632l-7.895579-7.895579c-9.269895-9.269895-36.513684-49.232842-44.032-196.527158H540.294737a161.684211 161.684211 0 0 0-161.684211 161.68421v131.098948c43.304421 20.210526 97.28 30.585263 161.684211 30.585263z" fill="#FFAF6E" ></path><path d="M1025.347368 635.580632V916.210526h-53.894736v-71.033263c-16.330105-18.405053-69.820632-70.413474-161.684211-86.069895V916.210526h-53.894737v-161.68421h-107.789473v215.578947h-53.894737V700.631579h161.68421c100.998737 0 172.570947 38.669474 215.578948 71.868632v-115.738948c-33.684211-43.627789-51.712-137.458526-53.706106-279.498105H701.978947c-76.934737 0-127.218526-26.219789-175.804631-51.550316a1556.048842 1556.048842 0 0 0-26.839579-13.743158c-26.839579 26.004211-66.209684 44.921263-115.738948 55.511579 24.441263 22.986105 60.874105 52.116211 106.469053 72.838737l-22.312421 49.044211c-76.584421-34.816-129.589895-88.926316-150.824421-113.125053-10.644211 0.619789-21.477053 1.024-32.687158 1.024a473.734737 473.734737 0 0 1-123.365053-15.952842l-93.022315 186.314105 68.581052 53.86779C167.882105 579.557053 237.891368 538.947368 324.715789 538.947368v53.894737c-95.986526 0-170.361263 62.490947-171.088842 63.137684l-16.78821 14.282106-136.838737-107.358316 109.729684-219.809684C46.430316 314.448842 1.347368 267.371789 1.347368 199.868632 1.347368 89.815579 121.586526 53.894737 163.031579 53.894737v53.894737c-14.120421 0-107.789474 17.165474-107.789474 92.079158C55.242105 290.465684 192.188632 323.368421 284.240842 323.368421c67.907368 0 122.421895-12.988632 157.696-35.624421-42.711579-14.336-95.097263-23.120842-169.337263-18.324211l-3.503158-53.786947c95.878737-6.117053 160.148211 8.515368 211.429053 28.833684C484.244211 235.439158 486.4 225.818947 486.4 215.578947c0-48.855579-57.829053-76.288-58.394947-76.557473l22.393263-49.017263C454.063158 91.648 540.294737 131.826526 540.294737 215.578947c0 18.566737-3.422316 35.84-9.997474 51.631158 7.060211 3.584 13.985684 7.168 20.776421 10.698106C597.854316 302.322526 638.248421 323.368421 701.978947 323.368421h269.473685v26.947368c0 214.689684 35.220211 266.590316 45.999157 277.369264l7.895579 7.895579z m-729.384421 25.141894l-98.789052 118.541474 86.797473 137.835789 45.594948-28.725894-65.913263-104.690527 37.052631-44.43621C358.642526 785.192421 439.080421 808.421053 540.294737 808.421053v-53.894737c-99.893895 0-175.077053-24.549053-223.474526-72.946527l-20.857264-20.857263z" fill="#231F20" ></path></symbol><symbol id="icon-rabbit_mao" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#7DD47F" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-377.263158-188.631579h107.789474v323.368421c-20.48 0-39.936-11.264-40.016842-11.317895l-27.728842 46.214737c3.206737 1.940211 32.660211 18.997895 67.745684 18.997895 30.746947 0 53.894737-23.147789 53.894737-53.894737V269.473684h-215.578948v538.947369h53.894737V323.368421z m-107.789473 242.526316v-242.526316h-53.894737v196.904421l-107.789474 40.421053v-243.927579l169.094737-48.316632-14.821053-51.819789L269.473684 276.102737v304.801684l-36.405895 13.662316 18.917053 50.472421 178.741895-67.018105c-5.039158 69.928421-55.269053 106.981053-165.133474 122.933894l7.733895 53.328842C325.712842 746.657684 485.052632 723.536842 485.052632 565.894737z" fill="#231F20" ></path></symbol><symbol id="icon-rabbit" viewBox="0 0 1024 1024"><path d="M680.96 488.744421a1666.667789 1666.667789 0 0 0-54.433684-23.95621c-16.006737 12.234105-33.899789 20.264421-60.631579 20.264421h-80.842105c-36.810105 0-83.644632 30.396632-104.394106 67.772631-42.819368 77.123368-53.409684 117.813895-11.021473 201.701053C397.096421 808.879158 431.157895 876.409263 431.157895 970.105263h338.539789l68.338527-138.859789c20.129684-40.96 24.252632-73.701053 24.252631-110.349474 0.026947-57.397895-25.061053-159.717053-181.328842-232.151579z" fill="#FFBDD8" ></path><path d="M862.315789 720.896c0 36.621474-4.122947 69.389474-24.252631 110.349474L769.697684 970.105263H485.052632v-53.894737h48.370526C507.877053 880.074105 485.052632 833.509053 485.052632 781.473684c0-59.418947 24.171789-113.313684 63.218526-152.360421l38.103579 38.103579A161.091368 161.091368 0 0 0 538.947368 781.473684c0 54.784 35.381895 104.043789 63.514948 134.736842h133.712842l53.490526-108.759579c15.710316-31.851789 18.755368-55.834947 18.755369-86.554947 0-80.976842-63.434105-150.096842-178.607158-195.503158-17.542737 8.138105-38.292211 13.554526-63.919158 13.554526h-80.842105c-13.958737 0-43.924211 15.979789-57.290106 40.016843l-47.104-26.165895C401.408 515.449263 448.242526 485.052632 485.052632 485.052632h80.842105c37.268211 0 57.478737-15.440842 79.090526-36.45979C625.367579 336.195368 549.753263 269.473684 485.052632 269.473684h-107.789474a21.288421 21.288421 0 0 0-5.955369 2.021053A683.762526 683.762526 0 0 0 302.187789 194.021053c-35.84-34.223158-61.763368-58.933895-94.908631-79.440842A42.442105 42.442105 0 0 0 185.478737 107.789474a22.824421 22.824421 0 0 0-17.381053 7.194947c-10.913684 11.425684-6.063158 28.240842 1.428211 39.181474 21.989053 32.121263 47.912421 56.858947 83.752421 91.109052 20.614737 19.671579 49.259789 43.169684 77.392842 63.08379C281.007158 367.400421 215.578947 484.432842 215.578947 592.842105c0 74.482526 24.791579 124.065684 51.065264 176.586106C294.534737 825.209263 323.368421 882.903579 323.368421 970.105263h-53.894737c0-74.482526-24.791579-124.065684-51.065263-176.586105C190.517895 737.738105 161.684211 680.043789 161.684211 592.842105c0-90.866526 42.226526-197.685895 93.453473-274.485894a803.759158 803.759158 0 0 1-39.046737-34.115369C177.852632 247.754105 150.231579 221.399579 125.035789 184.616421c-24.441263-35.759158-22.797474-78.686316 4.069053-106.819368 26.300632-27.567158 70.898526-31.043368 106.522947-9.000421 37.941895 23.444211 65.562947 49.798737 103.774316 86.258526 9.970526 9.512421 33.037474 32.309895 56.93979 60.550737h68.634947c-27.621053-37.780211-60.416-72.730947-88.522105-99.543579-28.833684-27.540211-54.730105-52.116211-84.533895-74.024421L326.305684 0.296421c31.232 23.228632 57.802105 48.532211 87.309474 76.719158 53.840842 51.388632 94.450526 100.594526 121.74821 146.83621 82.836211 26.650947 150.042947 116.870737 165.025685 230.750316l1.724631 13.177263-9.404631 9.404632c-3.772632 3.772632-7.706947 7.653053-11.802948 11.587368C837.227789 561.178947 862.315789 663.498105 862.315789 720.896zM309.463579 754.526316c3.934316 8.057263 7.895579 16.087579 11.991579 24.144842C348.887579 832.970105 377.263158 889.128421 377.263158 970.105263h53.894737c0-93.696-34.061474-161.226105-61.520842-215.578947h-60.173474z m597.90821 53.894737c-3.422316 9.404632-7.814737 19.806316-13.770105 31.959579L829.790316 970.105263h60.065684l52.143158-105.957052c10.778947-21.935158 17.515789-40.016842 21.90821-55.727158h-56.535579zM514.694737 390.736842c0-34.223158-13.231158-44.463158-29.642105-44.463158s-29.642105 10.24-29.642106 44.463158c0 34.250105 13.231158 44.463158 29.642106 44.463158s29.642105-10.213053 29.642105-44.463158z" fill="#231F20" ></path></symbol><symbol id="icon-rat_zi" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#85C3DE" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 188.631579v-215.578947h269.473685v-53.894737H538.947368v-39.585684c26.543158-18.081684 94.585263-65.050947 177.852632-127.488L700.631579 215.578947H323.368421v53.894737h295.316211a4221.008842 4221.008842 0 0 1-121.640421 85.369263l-11.991579 8.003369V431.157895H242.526316v53.894737h242.526316v215.578947c0 48.343579-13.850947 53.894737-134.736843 53.894737v53.894737c105.391158 0 188.631579 0 188.631579-107.789474z" fill="#231F20" ></path></symbol><symbol id="icon-rat" viewBox="0 0 1024 1024"><path d="M727.659789 431.157895c-132.581053 0-220.348632 47.454316-285.803789 154.354526-19.779368 32.309895-15.845053 76.503579-9.404632 96.579368 3.260632 10.159158 7.760842 18.647579 12.422737 25.546106C464.761263 737.010526 499.927579 754.526316 538.947368 754.526316h66.829474c1.158737 17.893053-1.967158 34.762105-15.144421 53.975579-12.692211 18.539789-37.807158 40.151579-56.32 54.810947 25.249684-0.673684 52.709053-0.997053 83.240421-0.997053C877.487158 862.315789 970.105263 711.922526 970.105263 571.176421 936.421053 512 882.364632 431.157895 727.659789 431.157895z" fill="#85C3DE" ></path><path d="M210.432 1012.897684l-43.573895-31.690105c106.954105-147.051789 185.317053-171.196632 423.828211-172.705684 21.396211-31.258947 16.249263-56.266105 9.377684-89.70779-3.557053-17.138526-7.221895-34.842947-7.221895-54.433684 0-68.958316 25.330526-104.636632 63.407158-136.973474l34.896842 41.040842c-29.453474 25.061053-44.409263 46.780632-44.409263 95.932632 0 14.093474 2.937263 28.402526 6.063158 43.546947 5.901474 28.510316 12.8 62.032842-1.131789 99.462737 166.373053-10.24 264.542316-96.902737 264.542315-236.193684C916.210526 418.330947 827.580632 323.368421 684.921263 323.368421c-83.644632 0-153.303579 29.696-174.187789 39.612632a224.875789 224.875789 0 0 1-20.533895 31.339789l-41.741474-34.115368 20.884211 17.057684-20.911158-16.976842C448.781474 359.828211 485.052632 314.287158 485.052632 262.736842c0-34.816-8.946526-60.766316-26.570106-77.069474-17.515789-16.249263-44.786526-24.602947-81.219368-24.953263V323.368421h-53.894737V109.783579l24.872421-1.913263c64.700632-4.931368 114.095158 7.895579 146.863158 38.238316C524.207158 173.056 538.947368 212.291368 538.947368 262.736842c0 11.102316-1.131789 21.908211-3.072 32.202105 37.268211-12.584421 89.842526-25.465263 149.045895-25.465263C858.165895 269.473684 970.105263 387.907368 970.105263 571.176421 970.105263 711.922526 877.487158 862.315789 617.552842 862.315789c-258.667789 0-311.942737 19.698526-407.120842 150.581895z m19.105684-256.835368c-12.045474 0-24.387368-0.565895-37.025684-1.64379l-22.096842-1.859368-2.425263-22.016C167.747368 728.144842 161.684211 672.444632 161.684211 631.026526c0-103.585684 21.450105-178.903579 53.894736-259.045052V107.789474h53.894737v274.782315l-2.021052 4.904422C235.439158 465.758316 215.578947 533.800421 215.578947 631.026526c0 22.878316 2.101895 51.442526 3.826527 70.979369 99.678316 2.802526 172.813474-35.408842 222.450526-116.493474l48.020211 24.090947c-11.237053 28.133053-11.371789 51.577263-0.377264 67.853474 9.701053 14.282105 28.645053 23.174737 49.448421 23.174737v53.894737c-39.019789 0-74.186105-17.515789-94.073263-46.888421a100.244211 100.244211 0 0 1-12.422737-25.546106c-53.221053 49.178947-121.128421 73.943579-202.913684 73.970527zM379.957895 525.473684c0-34.223158-13.231158-44.463158-29.642106-44.463158s-29.642105 10.24-29.642105 44.463158c0 34.250105 13.231158 44.463158 29.642105 44.463158s29.642105-10.213053 29.642106-44.463158z" fill="#231F20" ></path></symbol><symbol id="icon-rooster_you" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#BBC4C9" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-215.578947-188.631579h-161.684211v-26.947368h161.684211V242.526316H269.473684v53.894737h161.684211v26.947368h-161.684211v485.052632h53.894737v-53.894737h377.263158v53.894737h53.894737V323.368421zM323.368421 646.736842h377.263158v53.894737H323.368421v-53.894737z m0-269.473684h107.789474c0 103.316211-72.784842 107.654737-81.084632 107.789474L350.315789 538.947368c46.592 0 134.736842-33.792 134.736843-161.68421h53.894736v107.789474c0 29.722947 24.171789 53.894737 53.894737 53.894736h107.789474v53.894737H323.368421v-215.578947z m377.263158 0v107.789474h-107.789474v-107.789474h107.789474z m-215.578947-80.842105h53.894736v26.947368h-53.894736v-26.947368z" fill="#231F20" ></path></symbol><symbol id="icon-rooster" viewBox="0 0 1024 1024"><path d="M891.688421 506.421895C877.244632 455.033263 862.315789 401.893053 862.315789 323.368421V116.224l-323.368421 195.745684V323.368421c0 78.524632 14.928842 131.664842 29.372632 183.053474 12.611368 44.894316 24.522105 87.282526 24.522105 140.314947 0 101.618526-77.931789 176.693895-168.286316 203.991579l5.416422 11.587368h215.578947c24.333474 0 43.385263-0.242526 58.556631-2.128842C811.52 846.821053 916.210526 764.550737 916.210526 646.736842c0-53.032421-11.910737-95.420632-24.522105-140.314947z" fill="#FF8787" ></path><path d="M673.684211 354.357895c-16.384 0-29.642105-10.213053-29.642106-44.463158 0-34.223158 13.231158-44.463158 29.642106-44.463158s29.642105 10.24 29.642105 44.463158c0 34.250105-13.258105 44.463158-29.642105 44.463158zM540.106105 970.105263l-50.58021-107.789474h156.05221l50.607158 107.789474h59.553684l-51.60421-109.918316C811.52 846.821053 916.210526 764.550737 916.210526 646.736842c0-53.032421-11.910737-95.420632-24.522105-140.314947C877.244632 455.033263 862.315789 401.893053 862.315789 323.368421V107.789474c0-59.445895-48.343579-107.789474-107.789473-107.789474a107.924211 107.924211 0 0 0-107.789474 106.172632 100.890947 100.890947 0 0 0-24.117895-3.314527 88.710737 88.710737 0 0 0-88.602947 88.602948c0 20.668632 5.227789 39.720421 10.671158 53.921684l-99.489684 59.688421 93.749894 14.470737V377.263158c0 14.416842-5.901474 21.692632-33.360842 49.152l-11.129263 11.129263C398.228211 326.521263 324.985263 269.473684 215.740632 269.473684 96.768 269.473684 0 366.241684 0 485.214316V646.736842h53.894737v-161.522526A162.007579 162.007579 0 0 1 215.740632 323.368421c82.081684 0 140.422737 36.244211 240.64 152.252632l-38.615579 38.615579C367.804632 461.285053 323.098947 431.157895 259.584 431.157895A151.983158 151.983158 0 0 0 107.789474 582.952421V754.526316h53.894737v-171.573895A98.007579 98.007579 0 0 1 259.584 485.052632c46.322526 0 79.629474 20.911158 137.027368 86.016l18.970948 21.530947 128.080842-128.080842C572.200421 435.981474 592.842105 415.366737 592.842105 377.263158v-97.926737l23.309474-14.120421-13.662316-23.04c-0.161684-0.242526-14.578526-24.899368-14.578526-50.688 0-19.132632 15.575579-34.708211 34.70821-34.708211 5.093053 0 26.785684 3.179789 39.558737 18.647579l26.327579 46.026106 39.774316-24.090948-20.372211-49.367579C704.754526 140.449684 700.631579 117.517474 700.631579 107.789474c0-29.722947 24.171789-53.894737 53.894737-53.894737s53.894737 24.171789 53.894737 53.894737v215.578947c0 85.935158 16.680421 145.300211 31.366736 197.632C851.887158 564.008421 862.315789 601.141895 862.315789 646.736842c0 95.285895-99.408842 161.684211-188.631578 161.684211h-209.461895l-68.419369-145.704421C375.242105 618.954105 338.108632 592.842105 296.448 592.842105A80.976842 80.976842 0 0 0 215.578947 673.711158V862.315789h53.894737v-188.604631c0-14.874947 12.099368-26.974316 26.974316-26.974316 20.533895 0 38.965895 14.147368 50.553263 38.858105L480.579368 970.105263h59.526737z" fill="#231F20" ></path></symbol><symbol id="icon-snake_si" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#FF8787" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-242.041263 180.762947l-52.116211-13.797052C657.219368 749.864421 651.425684 754.526316 619.789474 754.526316h-242.526316V485.052632h269.473684v53.894736h53.894737V215.578947H323.368421v538.947369c0 29.722947 24.171789 53.894737 53.894737 53.894737h242.526316c77.689263 0 91.189895-51.065263 108.274526-115.658106zM377.263158 269.473684h269.473684v161.684211H377.263158v-161.684211z" fill="#231F20" ></path></symbol><symbol id="icon-tiger_yin" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#7DD47F" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-257.42821 299.250526l-107.789474-53.894737-24.117895 48.208843 107.789474 53.894736 24.117895-48.208842z m-269.473685-5.658947l-24.117894-48.208842-107.789474 53.894737 24.117895 48.208842 107.789473-53.894737zM700.631579 431.157895h-161.684211v-53.894737h107.789474v-53.894737H377.263158v53.894737h107.789474v53.894737h-161.684211v323.368421h53.894737v-53.894737h269.473684v53.894737h53.894737V431.157895z m-161.684211 161.68421h107.789474v53.894737h-107.789474v-53.894737z m-161.68421 0h107.789474v53.894737h-107.789474v-53.894737z m161.68421-107.789473h107.789474v53.894736h-107.789474v-53.894736z m-161.68421 0h107.789474v53.894736h-107.789474v-53.894736zM754.526316 215.578947h-223.097263l-20.803369-62.410105-51.119158 17.057684L474.624 215.578947H269.473684v107.789474h53.894737v-53.894737h377.263158v53.894737h53.894737V215.578947z" fill="#231F20" ></path></symbol><symbol id="icon-snake" viewBox="0 0 1024 1024"><path d="M107.789474 790.474105c0-72.434526 67.880421-91.513263 121.451789-91.513263 74.401684 0 153.815579 34.438737 237.891369 70.925474 50.580211 21.935158 104.609684 45.325474 162.250105 63.083789-52.412632 44.786526-118.784 74.347789-195.152842 83.078737-143.171368 16.357053-326.440421 7.006316-326.440421-125.574737zM377.263158 215.578947c-15.575579 0-30.288842 3.449263-43.654737 9.377685A250.691368 250.691368 0 0 0 323.368421 296.421053c0 115.550316 76.422737 169.391158 137.83579 212.614736 8.138105 5.712842 16.141474 11.371789 23.848421 17.057685V323.368421a107.789474 107.789474 0 0 0-107.789474-107.789474z" fill="#C3D686" ></path><path d="M671.528421 788.857263c44.328421 11.964632 89.626947 19.563789 136.892632 19.56379 89.168842 0 161.684211-60.442947 161.68421-134.736842s-72.515368-134.736842-161.68421-134.736843c-19.078737 0-37.025684 1.509053-54.218106 4.015158-0.754526-101.402947-38.211368-172.355368-79.413894-219.648L673.684211 323.368421a1749.962105 1749.962105 0 0 1-79.036632-1.751579c45.702737 35.866947 108.705684 107.870316 105.984 232.367158 0 0.431158-0.080842 0.808421-0.10779 1.239579-34.923789 10.994526-66.155789 26.731789-95.097263 45.190737a163.085474 163.085474 0 0 0-15.845052-42.388211c-21.557895-39.639579-60.065684-66.775579-97.360842-93.022316C433.098105 423.343158 377.263158 384 377.263158 296.421053c0-130.290526 108.274526-188.631579 215.578947-188.631579 64.134737 0 132.715789 12.045474 214.366316 37.807158C802.330947 180.250947 780.099368 209.381053 700.631579 214.635789V161.684211h-53.894737v53.679157c-63.272421-1.024-104.528842-5.200842-104.986947-5.254736l-5.578106 53.598315C538.408421 263.949474 592.357053 269.473684 673.684211 269.473684c125.170526 0 188.631579-48.128 188.631578-143.063579V106.981053l-18.432-6.144C747.789474 68.823579 668.025263 53.894737 592.842105 53.894737c-158.666105 0-269.473684 99.732211-269.473684 242.526316 0 115.550316 76.422737 169.391158 137.83579 212.614736 33.684211 23.713684 65.509053 46.106947 81.003789 74.698106 9.539368 17.542737 13.285053 33.414737 12.341895 47.750737 21.153684 9.108211 42.118737 17.839158 62.949052 25.977263C671.151158 620.193684 729.977263 592.842105 808.421053 592.842105c59.445895 0 107.789474 36.271158 107.789473 80.842106s-48.343579 80.842105-107.789473 80.842105c-105.472 0-203.237053-42.388211-297.768421-83.429053-94.800842-41.094737-184.346947-79.952842-281.411369-79.952842C122.718316 591.171368 53.894737 644.715789 53.894737 727.578947c0 79.063579 67.098947 136.434526 159.555368 136.434527 142.174316 0 230.426947-66.883368 306.79579-129.886316 31.420632 13.419789 62.787368 26.058105 94.450526 37.133474-47.077053 49.637053-110.969263 82.566737-186.610526 91.270736l5.066105 53.625264c93.453474-7.006316 143.144421 9.350737 195.718737 26.543157 46.457263 15.225263 94.127158 30.854737 169.822316 30.854737 19.994947 0 41.957053-1.077895 66.344421-3.557052l-5.416421-53.625263c-105.283368 10.778947-158.100211-6.548211-213.935158-24.872422-22.150737-7.275789-44.624842-14.632421-70.305684-20.345263a334.848 334.848 0 0 0 96.14821-82.297263z m-458.078316 21.261474C162.573474 810.118737 107.789474 784.276211 107.789474 727.578947c0-60.847158 62.733474-82.539789 121.451789-82.539789 77.850947 0 154.731789 30.288842 235.250526 64.943158-66.263579 52.924632-139.722105 100.136421-251.041684 100.136421z" fill="#231F20" ></path></symbol><symbol id="icon-tiger" viewBox="0 0 1024 1024"><path d="M431.157895 162.250105V134.736842c0-41.552842-39.289263-80.842105-80.842106-80.842105-28.833684 0-57.128421 4.661895-58.314105 4.850526L269.473684 62.490947v83.887158C144.788211 223.824842 89.222737 346.839579 66.991158 431.157895h266.051368c240.747789 0 415.851789 107.789474 415.85179 269.473684-14.848-25.114947-43.924211-53.894737-88.68379-53.894737-67.988211 0-121.263158 71.033263-121.263158 161.684211 0 66.802526 30.477474 119.888842 60.712421 156.16 12.638316 15.171368 36.055579 37.726316 59.014737 58.88 5.066105 0.107789 9.781895 0.538947 15.009685 0.538947 219.297684 0 350.315789-191.811368 350.315789-377.263158C1024 327.545263 679.855158 172.813474 431.157895 162.250105z" fill="#F7C768" ></path><path d="M673.684211 1024c-114.768842 0-188.820211-33.333895-254.167579-62.787368-53.625263-24.144842-99.974737-45.002105-161.28-45.002106-40.448 0-83.590737 23.255579-103.639579 45.16379l-39.747369-36.432842C142.497684 894.787368 199.168 862.315789 258.236632 862.315789c68.392421 0 119.861895 21.288421 172.921263 45.056V673.684211c0-35.166316-17.542737-64.107789-30.639158-80.815158-15.198316 9.835789-32.067368 18.890105-50.741895 26.947368l-21.342316-49.475368C469.800421 509.413053 485.052632 377.317053 485.052632 323.368421V221.642105A597.827368 597.827368 0 0 0 404.210526 215.578947h-26.947368V134.736842c0-12.099368-14.848-26.947368-26.947369-26.947368-9.377684 0-18.836211 0.592842-26.947368 1.347368V269.473684h-53.894737V211.671579c-136.030316 102.912-158.450526 266.886737-161.306947 295.882105 9.135158 9.108211 38.992842 25.061053 71.976421 38.669474l38.103579-59.365053 12.449684-1.589894C321.212632 473.653895 377.263158 392.192 377.263158 323.368421h53.894737c0 88.333474-68.796632 192.242526-180.870737 213.342316l-48.397474 75.398737-20.291368-7.437474C53.894737 557.756632 53.894737 523.317895 53.894737 512c0-50.041263 37.025684-254.733474 215.578947-365.621895V62.490947l22.528-3.745684C293.187368 58.556632 321.482105 53.894737 350.315789 53.894737c41.552842 0 80.842105 39.289263 80.842106 80.842105v27.513263c248.697263 10.563368 592.842105 165.295158 592.842105 484.486737 0 185.451789-131.018105 377.263158-350.315789 377.263158z m-13.473685-323.368421c-36.513684 0-67.368421 49.367579-67.368421 107.789474 0 85.746526 68.096 145.084632 89.465263 161.549473 91.540211-2.533053 164.378947-45.487158 213.827369-107.654737H700.631579v-53.894736h230.238316c8.919579-17.273263 16.357053-35.354947 22.285473-53.894737h-239.885473l-6.467369-17.650527C706.290526 735.582316 692.439579 700.631579 660.210526 700.631579zM485.052632 931.112421c33.926737 14.066526 70.521263 26.597053 114.607157 33.468632C569.424842 928.309895 538.947368 875.223579 538.947368 808.421053c0-90.650947 53.274947-161.684211 121.263158-161.684211 44.759579 0 73.835789 28.779789 88.68379 53.894737h217.007158c2.775579-17.866105 4.203789-35.920842 4.203789-53.894737 0-38.938947-5.658947-74.752-15.925895-107.627789l-126.706526 126.679579-38.103579-38.103579L932.001684 485.052632a367.939368 367.939368 0 0 0-57.775158-81.596632l-154.543158 154.543158-38.103579-38.103579 153.573053-153.573053a537.869474 537.869474 0 0 0-82.593684-56.751158l-140.665263 140.638316-38.103579-38.103579 128.134737-128.134737A794.731789 794.731789 0 0 0 538.947368 231.046737V323.368421c0 50.149053-11.102316 156.698947-95.932631 236.328421 18.378105 23.417263 42.037895 63.407158 42.037895 113.987369v257.42821zM215.578947 431.157895v-53.894737c39.774316 0 53.894737-29.022316 53.894737-53.894737h53.894737c0 53.571368-37.025684 107.789474-107.789474 107.789474z" fill="#231F20" ></path></symbol><symbol id="icon-boar" viewBox="0 0 1024 1024"><path d="M732.079158 377.263158c-107.789474 0-186.421895 31.393684-281.869474 126.841263L180.331789 773.982316C257.724632 807.909053 348.725895 808.421053 485.052632 808.421053h96.013473c55.834947-34.411789 133.551158-53.894737 227.354948-53.894737h121.344L970.105263 680.555789V572.631579c0-94.315789-130.236632-195.368421-238.026105-195.368421z" fill="#FFBDD8" ></path><path d="M808.421053 700.631579v53.894737c-196.446316 0-323.368421 84.641684-323.368421 215.578947h-53.894737c0-163.705263 148.075789-269.473684 377.263158-269.473684z m-323.368421 107.789474v-53.894737c-158.342737 0-245.598316 0-319.649685-49.367579L158.612211 700.631579H80.842105c-21.692632 0-26.624-14.821053-26.947368-26.947368v-82.620632c84.156632-11.183158 161.684211-74.913684 161.68421-186.853053V215.578947H161.684211v161.684211H134.736842c-66.964211 0-134.736842 37.025684-134.736842 107.789474h53.894737c0-42.630737 52.870737-53.894737 80.842105-53.894737h24.629895C147.132632 504.912842 85.153684 538.947368 26.947368 538.947368H0v134.736843c0 32.498526 21.530947 80.842105 80.842105 80.842105h61.682527c32.687158 20.506947 67.125895 33.145263 105.957052 41.013895A232.879158 232.879158 0 0 0 215.578947 916.210526h53.894737c0-41.930105 14.012632-80.303158 39.424-112.505263C358.885053 808.151579 415.959579 808.421053 485.052632 808.421053z m-72.946527-342.420211L323.368421 554.738526V431.157895h-53.894737v253.682526l180.736-180.736-38.103579-38.103579zM323.368421 161.684211h-53.894737v190.032842a769.536 769.536 0 0 1 53.894737-49.098106V161.684211z m323.368421-53.894737c-72.623158 0-146.809263 23.336421-215.578947 58.637473V107.789474h-53.894737v154.138947C458.832842 205.392842 555.331368 161.684211 646.736842 161.684211c148.587789 0 269.473684 120.885895 269.473684 269.473684v235.654737L809.579789 862.315789h61.359158L970.105263 680.555789V431.157895c0-178.310737-145.057684-323.368421-323.368421-323.368421z" fill="#231F20" ></path></symbol><symbol id="icon-boar_hai" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#85C3DE" ></path><path d="M309.975579 804.756211l-27.136-46.592c103.073684-60.011789 183.026526-132.473263 241.475368-219.24379H350.315789l-13.473684-50.283789c58.88-33.980632 99.435789-117.571368 118.703158-165.295158H242.526316v-53.894737h538.947368v53.894737h-268.18021c-12.395789 34.088421-42.469053 106.603789-90.435369 161.68421h134.009263a680.555789 680.555789 0 0 0 46.349474-107.708631l51.092211 17.057684c-58.421895 175.265684-171.034947 309.490526-344.333474 410.381474z m192.350316-2.937264L467.806316 760.454737c88.414316-73.728 154.516211-158.773895 202.105263-259.907369l48.801684 22.959158a797.372632 797.372632 0 0 1-82.351158 137.781895c32.741053 15.009684 83.456 44.867368 137.647158 101.591579l-38.938947 37.268211c-57.236211-59.877053-109.325474-85.557895-133.766737-95.178106a850.997895 850.997895 0 0 1-98.977684 96.848842z m48.613052-536.872421l-80.842105-53.894737 29.884632-44.840421 80.842105 53.894737-29.884632 44.840421zM512 53.894737C259.395368 53.894737 53.894737 259.395368 53.894737 512s205.500632 458.105263 458.105263 458.105263c9.081263 0 17.973895-0.835368 26.947368-1.374316v-53.894736c-8.946526 0.619789-17.866105 1.374316-26.947368 1.374315-222.881684 0-404.210526-181.328842-404.210526-404.210526S289.118316 107.789474 512 107.789474s404.210526 181.328842 404.210526 404.210526c0 195.206737-139.075368 358.507789-323.368421 396.045474v54.460631c214.096842-38.346105 377.263158-225.549474 377.263158-450.533052C970.105263 259.395368 764.604632 53.894737 512 53.894737z" fill="#231F20" ></path></symbol><symbol id="icon-bilibili1" viewBox="0 0 1129 1024"><path d="M234.909 9.656a80.468 80.468 0 0 1 68.398 0 167.374 167.374 0 0 1 41.843 30.578l160.937 140.82h115.07l160.936-140.82a168.983 168.983 0 0 1 41.843-30.578A80.468 80.468 0 0 1 930.96 76.445a80.468 80.468 0 0 1-17.703 53.914 449.818 449.818 0 0 1-35.406 32.187 232.553 232.553 0 0 1-22.531 18.508h100.585a170.593 170.593 0 0 1 118.289 53.109 171.397 171.397 0 0 1 53.914 118.288v462.693a325.897 325.897 0 0 1-4.024 70.007 178.64 178.64 0 0 1-80.468 112.656 173.007 173.007 0 0 1-92.539 25.75H212.377a341.186 341.186 0 0 1-72.421-4.024A177.835 177.835 0 0 1 28.91 939.065a172.202 172.202 0 0 1-27.36-92.539V388.662a360.498 360.498 0 0 1 0-66.789A177.03 177.03 0 0 1 162.487 178.64h105.414c-16.899-12.07-31.383-26.555-46.672-39.43a80.468 80.468 0 0 1-25.75-65.984 80.468 80.468 0 0 1 39.43-63.57M216.4 321.873a80.468 80.468 0 0 0-63.57 57.937 108.632 108.632 0 0 0 0 30.578v380.615a80.468 80.468 0 0 0 55.523 80.469 106.218 106.218 0 0 0 34.601 5.632h654.208a80.468 80.468 0 0 0 76.444-47.476 112.656 112.656 0 0 0 8.047-53.109v-354.06a135.187 135.187 0 0 0 0-38.625 80.468 80.468 0 0 0-52.304-54.719 129.554 129.554 0 0 0-49.89-7.242H254.22a268.764 268.764 0 0 0-37.82 0z m0 0" fill="#20B0E3" ></path><path d="M348.369 447.404a80.468 80.468 0 0 1 55.523 18.507 80.468 80.468 0 0 1 28.164 59.547v80.468a80.468 80.468 0 0 1-16.094 51.5 80.468 80.468 0 0 1-131.968-9.656 104.609 104.609 0 0 1-10.46-54.719v-80.468a80.468 80.468 0 0 1 70.007-67.593z m416.02 0a80.468 80.468 0 0 1 86.102 75.64v80.468a94.148 94.148 0 0 1-12.07 53.11 80.468 80.468 0 0 1-132.773 0 95.757 95.757 0 0 1-12.875-57.133V519.02a80.468 80.468 0 0 1 70.007-70.812z m0 0" fill="#20B0E3" ></path></symbol><symbol id="icon-yinle" viewBox="0 0 1024 1024"><path d="M512.2976 0a531.2 531.2 0 0 0-512 548.48V960h128V548.48a398.72 398.72 0 0 1 384-411.52 398.72 398.72 0 0 1 384 411.52V960h128V548.48A531.2 531.2 0 0 0 512.2976 0z" fill="#5c8add" ></path><path d="M64.2976 576l256 0 0 448-256 0 0-448Z" fill="#5c8add" ></path><path d="M704.2976 576l256 0 0 448-256 0 0-448Z" fill="#5c8add" ></path></symbol><symbol id="icon-icon-test-copy" viewBox="0 0 1024 1024"><path d="M512 512m-229.517241 0a229.517241 229.517241 0 1 0 459.034482 0 229.517241 229.517241 0 1 0-459.034482 0Z" fill="#5c8add" ></path><path d="M512 1024A512 512 0 1 1 1024 512 512 512 0 0 1 512 1024z m0-141.241379A370.758621 370.758621 0 1 0 141.241379 512 370.758621 370.758621 0 0 0 512 882.758621z" fill="#5c8add" ></path></symbol><symbol id="icon-V" viewBox="0 0 1024 1024"><path d="M1012.47774251 492.58192592L544.94137566 87.22962963a49.96686561 49.96686561 0 0 0-65.88275132 0L11.63784127 492.6975097c-21.03624691 18.26223633-23.3479224 49.93219048-5.08568606 70.96843739 18.03106878 21.03624691 49.93219048 23.3479224 70.96843738 5.08568607L512 191.83294532l434.71057495 376.91868784c9.47786949 8.20644797 21.26741446 12.25188008 32.82579189 12.13629629 14.10122046 0 27.97127337-5.77918871 38.02706173-17.33756613 18.14665256-20.92066314 15.95056084-52.70620106-5.08568606-70.9684374z" fill="#5c8add" ></path><path d="M109.30613051 567.59579541V896.89396825c0 42.53482892 34.90629982 77.44112875 77.44112875 77.44112875h220.76500882V666.30433862c0-25.54401411 20.92066314-46.46467725 46.46467724-46.46467724h116.16169313c25.54401411 0 46.46467725 20.92066314 46.46467725 46.46467724V974.335097h220.76500882c42.53482892 0 77.44112875-34.90629982 77.44112874-77.44112875l0.11558377-329.29817284L512 218.18604586 109.30613051 567.59579541zM848.00203175 197.49655027h-63.91782716c-12.82979894 0-23.23233862 10.40253968-23.23233863 23.23233862v24.27259259l110.49808818 95.70336508V220.72888889h-0.11558377c0-12.82979894-10.40253968-23.23233862-23.23233862-23.23233862zM905.44716754 83.18419754s-34.90629982 56.86721693-89.11508994 100.32671603c152.68616579 13.98563668 127.83565432-133.26809171 127.83565432-133.2680917-134.07717813-10.28695591-132.92134039 102.29164021-131.072 127.83565432 20.92066314-20.92066314 49.70102293-62.64640564 92.35143562-94.89427865zM798.53217637 174.61096297c-19.64924162-16.52847972-40.56990476-43.45949912-51.203612-53.97762258 0 0 32.94137566 20.57391182 56.40488184 49.3542716 2.42725926-18.37782011 6.47269135-93.3916896-93.16052205-85.3008254 0 0-13.98563668 104.71889947 87.95925221 89.92417638z" fill="#5c8add" ></path></symbol><symbol id="icon-zhifeiji" viewBox="0 0 1167 1024"><path d="M41.201759 463.52493L1110.665064 30.117647c10.32605-4.159104 21.942857 0.860504 26.101961 11.043137 1.434174 3.728852 1.864426 7.744538 1.003921 11.616807L949.033691 978.823529c-2.151261 10.89972-12.764146 17.927171-23.663865 15.632493-2.72493-0.573669-5.306443-1.721008-7.601121-3.298599L634.80624 789.79944l-163.065546 133.951821c-16.492997 13.62465-40.87395 11.186555-54.498599-5.306443-3.011765-3.728852-5.306443-7.887955-6.884034-12.477311l-102.973669-313.080112-265.178712-91.787115c-10.469468-3.585434-16.062745-15.058824-12.333893-25.528291 1.864426-5.44986 6.023529-9.895798 11.329972-12.047059z" fill="#FCFDFC" ></path><path d="M929.385512 1023.569748c-3.155182 0-6.453782-0.286835-9.752381-1.003922-6.740616-1.434174-12.907563-4.015686-18.50084-8.031372L635.953579 825.940616l-146.142297 120.040336c-13.911485 11.473389-31.408403 16.779832-49.335574 15.058824-17.927171-1.721008-34.133333-10.32605-45.463305-24.237535-5.306443-6.453782-9.322129-13.768067-11.903642-21.79944l-98.527731-299.598879-251.697479-87.19776c-12.333894-4.302521-22.229692-13.05098-27.966386-24.811204s-6.453782-24.954622-2.151261-37.288515c4.589356-13.337815 14.771989-23.9507 27.82297-29.257143L1099.908761 3.585434c24.954622-10.039216 53.351261 2.007843 63.533894 26.819048 3.585434 8.891877 4.445938 18.644258 2.581513 28.109804L977.143495 984.560224c-4.732773 23.090196-25.098039 39.009524-47.757983 39.009524z m-294.579272-233.770308l282.962465 201.357983c2.294678 1.577591 4.87619 2.72493 7.601121 3.298599 10.89972 2.151261 21.512605-4.87619 23.663865-15.632493L1137.914364 52.777591c0.860504-3.872269 0.430252-7.887955-1.003922-11.616807-4.159104-10.32605-15.919328-15.202241-26.101961-11.043137L41.201759 463.52493c-5.306443 2.151261-9.465546 6.597199-11.47339 12.047059-1.721008 5.019608-1.434174 10.469468 0.860505 15.345658 2.294678 4.87619 6.453782 8.461625 11.473389 10.182633l265.178711 91.787115L410.214644 905.967507c1.434174 4.589356 3.872269 8.748459 6.884033 12.477311 6.597199 8.031373 15.919328 12.907563 26.101961 13.911485 10.32605 1.003922 20.365266-2.007843 28.396639-8.605042l163.208963-133.951821z" fill="#4A4A4A" ></path><path d="M307.097557 592.743978l105.698599 316.091876c6.310364 18.787675 26.532213 28.970308 45.319888 22.659944 4.159104-1.434174 7.887955-3.442017 11.186555-6.166946l164.786555-133.951821-165.360224-118.892997c297.017367-287.982073 447.462185-433.980952 451.191036-437.853222 0.573669-0.573669 2.581513-3.442017 0.430252-7.027451-1.290756-1.577591-3.298599-3.298599-7.027451-2.15126-202.218487 120.327171-404.293557 242.805602-606.22521 367.291877z" fill="#CAE0EE" ></path><path d="M446.786072 934.794398c-5.736695 0-11.329972-1.290756-16.636414-3.872269-8.891877-4.445938-15.632493-12.047059-18.787675-21.512605L305.376549 592.313725l1.003921-0.573669C507.308201 467.684034 711.391114 344.058263 912.60568 224.161345l0.286835-0.143418c3.585434-1.147339 6.310364-0.286835 8.605042 2.581513l0.143417 0.143417c2.438095 4.015686 0.573669 7.457703-0.573669 8.74846-3.872269 4.015686-155.177591 150.87507-450.043698 436.705882l165.503642 119.036414-166.220728 135.09916c-3.442017 2.868347-7.457703 5.019608-11.760225 6.453782-3.728852 1.290756-7.744538 2.007843-11.760224 2.007843z m-137.967507-341.333334l105.268348 314.944538c2.868347 8.748459 9.035294 15.77591 17.210084 19.935014 8.17479 4.159104 17.496919 4.732773 26.245378 1.864426 3.872269-1.290756 7.60112-3.298599 10.756302-5.880112l163.352381-132.804482L466.434252 672.627451l1.290756-1.147339C763.308201 384.932213 915.043775 237.642577 918.772627 233.626891c0 0 2.007843-2.294678 0.286835-5.306443-1.003922-1.290756-2.438095-2.438095-5.306443-1.577591-200.784314 119.610084-404.293557 242.94902-604.934454 366.718207z" fill="#CAE0EE" ></path><path d="M460.840974 924.898599l7.457703-253.561904 165.933894 119.896918-168.658824 135.959664c-1.290756 1.003922-3.011765 0.860504-4.015686-0.430252-0.430252-0.430252-0.717087-1.147339-0.717087-1.864426z" fill="#94C3E2" ></path><path d="M463.709322 929.344538c-1.290756 0-2.438095-0.573669-3.2986-1.577591-0.573669-0.860504-1.003922-1.864426-1.003921-2.868348l7.60112-256.286834 169.519328 122.621848-1.434174 1.147339-168.658823 135.959664c-0.860504 0.717087-1.721008 1.003922-2.72493 1.003922z m6.023529-255.282913l-7.457703 250.836974c0 0.286835 0.143417 0.717087 0.286835 1.003922 0.430252 0.573669 1.434174 0.717087 2.007843 0.286835l167.22465-134.812325-162.061625-117.315406z" fill="#94C3E2" ></path></symbol><symbol id="icon-lianjie" viewBox="0 0 1079 1024"><path d="M695.355535 432.666896c-0.553495-1.10699-0.885592-2.186305-1.383737-3.265619-0.193723-0.193723-0.193723-0.359772-0.359771-0.719543-12.508983-26.318678-39.436506-43.366319-69.325226-41.013966-39.076734 3.265619-68.439634 39.021384-65.312388 79.841627 0.857917 10.516401 3.653066 20.147211 7.998 28.83708 19.78744 46.659613 11.097571 103.448181-25.377737 141.750022l-191.094085 199.950001a118.088119 118.088119 0 0 1-171.998513 0c-47.434506-49.537786-47.434506-130.098956 0-179.636742l71.234782-74.389703-0.52582-0.553494a75.911814 75.911814 0 0 0 24.326097-61.880721c-3.127246-40.820243-37.3609-71.51153-76.437634-68.24591a69.463599 69.463599 0 0 0-46.908685 23.966325l-0.166049-0.193723-72.618519 75.856464c-103.226783 107.793115-103.226783 282.36538 0 390.158495 103.171433 107.793115 270.299193 107.793115 373.498301 0l191.619904-200.1714c80.256748-83.992838 97.636485-208.307773 52.83108-310.289193z" fill="#5c8add" ></path><path d="M1002.047012 80.865592c-103.226783-107.82079-270.382217-107.82079-373.581325 0l-191.619905 200.199075c-80.284423 83.854464-97.66416 208.197074-52.997128 310.233843 0.52582 1.079315 0.857917 2.15863 1.383737 3.26562 0.166048 0.166048 0.166048 0.359772 0.332097 0.719543 12.536658 26.291004 39.46418 43.366319 69.3529 41.013966 39.076734-3.265619 68.439634-39.021384 65.312388-79.869302a78.679288 78.679288 0 0 0-7.998-28.864755c-19.78744-46.631938-11.097571-103.448181 25.377737-141.750022l191.287808-199.839302a118.088119 118.088119 0 0 1 172.026188 0c47.434506 49.537786 47.434506 130.126631 0 179.692091l-71.234782 74.417378 0.52582 0.553495a75.939489 75.939489 0 0 0-24.353772 61.88072c3.15492 40.847917 37.3609 71.51153 76.465309 68.245911a69.463599 69.463599 0 0 0 46.908685-23.938651l0.166049 0.166048 72.646194-75.856464c103.03306-107.82079 103.03306-282.642127 0-390.269194z" fill="#5c8add" ></path></symbol><symbol id="icon-liaotian" viewBox="0 0 1171 1024"><path d="M1068.71699 0.243751H102.193768C46.228437 0.243751 0.500666 45.045267 0.500666 99.74309v696.251622c0 54.697824 45.727771 99.450589 101.693102 99.450589h329.113198l120.851966 114.465677a48.652788 48.652788 0 0 0 66.641644 0l120.851966-114.465677h329.064448c55.965331 0 101.741852-44.752765 101.741852-99.450589V99.74309C1170.458842 45.045267 1124.682321 0.243751 1068.71699 0.243751z m-439.776354 596.849784h-370.989696c-27.933915 0-50.846551-22.425133-50.846551-49.774045 0-27.348912 22.912636-49.725294 50.846551-49.725294h370.989696c27.933915 0 50.846551 22.376382 50.846551 49.725294 0 27.348912-22.912636 49.774045-50.846551 49.774045z m287.18795-211.381252H254.782171a50.456549 50.456549 0 0 1-50.846551-49.725294c0-27.397662 22.912636-49.774045 50.846551-49.774045h661.346415c27.933915 0 50.846551 22.376382 50.846551 49.774045 0 27.348912-22.912636 49.725294-50.846551 49.725294z" fill="#5C8ADD" ></path></symbol><symbol id="icon-xinfeng" viewBox="0 0 1400 1024"><path d="M1301.63733163 214.78520234a207.81921797 207.81921797 0 0 1 7.02423018 52.42036465v489.73590176a205.10753818 205.10753818 0 0 1-205.05853125 205.05853125H283.05853124A205.15654424 205.15654424 0 0 1 77.99999999 756.79444971V267.20556699a201.36672685 201.36672685 0 0 1 7.02423106-52.42036465L586.24393329 562.1905874c69.44187217 51.96297217 146.36536612 49.13694404 214.1736961 0zM1103.60303056 62.0000167H283.05853124A204.50312753 204.50312753 0 0 0 106.37462518 163.41030547l489.71956641 335.75823018c62.43397646 50.77048623 127.85733457 50.31309463 194.62019765 0L1280.28693749 163.41030547A204.68281729 204.68281729 0 0 0 1103.60303056 62.0000167z m0 0" fill="#5c8add" ></path></symbol><symbol id="icon-QQ1" viewBox="0 0 1024 1024"><path d="M0 512a512 512 0 1 0 1024 0A512 512 0 1 0 0 512z" fill="#18ACFC" ></path><path d="M500.113 228.39c118.396-1.518 178.924 61.004 201 156 3.497 15.048 0.15 34.807 0 50 27.143 5.682 33.087 60.106 10 75v1h1c8.26 14.33 19.04 28.125 26 44 7.332 16.723 9.306 35.16 14 55 4.024 17.01-2.287 51.505-10 57-0.771 0.683-2.231 1.312-3 2-14.601-3.016-30.377-16.865-38-27-3.065-4.074-5.275-9.672-10-12-0.395 21.568-12.503 41.15-22 55-3.514 5.123-14.073 13.217-14 18 3.691 2.836 8.305 2.956 13 5 10.513 4.577 25.449 13.168 32 22 2.334 3.146 5.548 7.555 7 11 16.193 38.414-36.527 48.314-63 54-27.185 5.839-77.818-10.224-92-19-8.749-5.414-16.863-18.573-29-19-3.666 2.389-14.438 1.132-20 1-16.829 32.804-101.913 47.868-148 31-14.061-5.146-43.398-17.695-38-40 4.437-18.327 19.947-29.224 35-37 5.759-2.975 18.915-4.419 22-10-13.141-8.988-24.521-28.659-31-44-3.412-8.077-4.193-25.775-9-32-7.789 12.245-32.097 36.91-52 33-3.071-4.553-7.213-9.097-9-15-4.792-15.835-1.81-40.379 2-54 8.117-29.02 16.965-50.623 32-72 4.672-6.643 11.425-12.135 16-19-8.945-9.733-6.951-37.536-1-49 4.002-7.709 9.701-7.413 10-20-1.92-3.022-0.071-8.604-1-13-4.383-20.75 3.273-47.552 9-63 19.8-53.421 53.712-90.466 105-112 11.986-5.033 25.833-7.783 39-11 5.322-1.3 11.969 0.518 16-2z" fill="#FFFFFF" ></path></symbol><symbol id="icon-rss" viewBox="0 0 1024 1024"><path d="M749.61196492 908.06119793C749.61196492 560.41848146 463.58151854 274.36328126 115.93880207 274.36328126V115.93880207c434.50388795 0 792.12239584 357.61850789 792.12239586 792.12239586zM224.55858562 690.72261555a108.91682943 108.91682943 0 0 1 108.69404499 108.74355267C333.25263061 859.29616292 284.24005737 908.06119793 224.31104736 908.06119793 164.48105265 908.06119793 115.96355592 859.41993206 115.96355592 799.46616822s48.69077351-108.71879883 108.61978351-108.74355267zM641.01693522 908.06119793h-153.96879069c0-203.60020956-167.50913289-371.13409627-371.10934246-371.13409629v-153.96879068c288.03550619 0 525.07813313 237.11688843 525.07813315 525.10288697z" fill="#FFA500" ></path></symbol><symbol id="icon-youxiang" viewBox="0 0 1024 1024"><path d="M583.60666667 972h-68.08c-8.43333333 0-15.33333333-6.9-15.33333334-15.33333333V609.52c0-8.43333333 6.9-15.33333333 15.33333334-15.33333333h68.08c8.43333333 0 15.33333333 6.9 15.33333333 15.33333333V956.66666667c0 8.43333333-6.9 15.33333333-15.33333333 15.33333333z" fill="#629FF9" ></path><path d="M294.42 167c-113.62 0-205.77333333 92-205.77333333 205.31333333v336.72h411.39333333V372.31333333c0.15333333-113.31333333-92-205.31333333-205.62-205.31333333z" fill="#2166CC" ></path><path d="M519.97333333 627H216.98666667c-25.45333333 0-46-20.54666667-46-46V393.78c0-25.45333333 20.54666667-46 46-46h302.98666666c25.45333333 0 46 20.54666667 46 46V581c0 25.45333333-20.54666667 46-46 46z" fill="#D2E4FF" ></path><path d="M565.97333333 397a49.22 49.22 0 0 0-49.37333333-49.22H220.36c-27.29333333 0-49.37333333 22.08-49.37333333 49.22v10.27333333l179.4 94.60666667c11.34666667 5.98 24.84 5.98 36.18666666 0l179.4-94.60666667v-10.27333333z" fill="#FFFFFF" ></path><path d="M730.5 167h-427.8v0.46c109.78666667 4.29333333 197.49333333 94.3 197.49333333 205.00666667v336.72h411.39333334c27.29333333 0 49.37333333-22.08 49.37333333-49.22V397c0-126.96-103.19333333-230-230.46-230z" fill="#4E8DF6" ></path><path d="M845.80666667 52H681.12666667c-9.04666667 0-16.40666667 7.36-16.40666667 16.40666667v336.72a24.67133333 24.67133333 0 1 0 49.37333333 0V134.18666667h131.71333334c9.04666667 0 16.40666667-7.36 16.40666666-16.40666667V68.40666667c0-9.04666667-7.36-16.40666667-16.40666666-16.40666667z" fill="#2166CC" ></path><path d="M896.25333333 659.81333333h-35.11333333c-8.43333333 0-15.33333333-6.9-15.33333333-15.33333333v-35.11333333c0-8.43333333 6.9-15.33333333 15.33333333-15.33333334h35.11333333c8.43333333 0 15.33333333 6.9 15.33333334 15.33333334v35.11333333c0 8.58666667-6.9 15.33333333-15.33333334 15.33333333z" fill="#FFFFFF" ></path><path d="M88.8 709.18666667l-24.22666667 131.40666666c-9.66 54.43333333 26.83333333 98.59333333 81.26666667 98.59333334h213.9c54.58666667 0 106.56666667-44.16 116.22666667-98.59333334l23.15333333-131.40666666H88.8z" fill="#2974CE" ></path></symbol><symbol id="icon-gitHub" viewBox="0 0 1049 1024"><path d="M523.6581816 52C262.83923907 52 52 262.8401375 52 523.6581816c0 208.49703047 135.09433812 384.97758117 322.50789391 447.44906532 23.42658172 4.68531653 32.01647887-10.15136894 32.01647796-22.64584583 0-10.93210574-0.78163433-48.41463703-0.78163433-87.45953855-131.18885996 28.11189824-158.5200223-56.22379738-158.52002231-56.22379739-21.08437312-54.66232469-52.3201152-68.71827336-52.3201152-68.71827335-42.94858371-28.89353348 3.12384382-28.89353348 3.12384384-28.89353348 47.63479867 3.12384382 72.62285398 48.41643391 72.62285398 48.4164339 42.16784782 71.84121875 110.10538527 51.53758242 137.43654672 39.04400399 3.90457972-30.45500618 16.3990566-51.5393793 29.67427028-63.25222094-104.64023039-10.93300418-214.74561566-51.53848086-214.74561657-232.70524742 0-51.53848086 18.74126609-93.70632867 48.4164339-126.50444187-4.68621496-11.71284164-21.08527156-60.12837711 4.6844181-124.94207075 0 0 39.82563922-12.49447688 129.62738726 48.41463704 37.48253129-10.15136894 78.08980484-15.61742227 117.91454562-15.61742137s80.43201433 5.46605242 117.91454473 15.61742137c89.80264648-60.90911391 129.62828571-48.41463703 129.62828571-48.41463704 25.76879122 64.81369363 9.37063305 113.22922911 4.68531651 124.94207075 30.45410773 32.79721477 48.41463703 74.96506258 48.41463703 126.50444187 0 181.16676656-110.10538527 220.99150644-215.52545401 232.70524742 17.1797934 14.83668547 32.01647887 42.94858371 32.01647886 87.45953946 0 63.25222094-0.78163433 114.009965-0.78163523 129.62738636 0 12.49447688 8.59079468 27.33116234 32.01737731 22.64584583 187.41265734-62.4705866 322.50699547-238.95203574 322.50699546-447.44996375C995.31636231 262.8401375 783.69369203 52 523.6581816 52z" fill="#663399" ></path><path d="M230.82365863 729.03136735c-0.7807359 2.34310703-4.68531653 3.12384382-7.80916035 1.56237113s-5.46605242-4.68531653-3.90368129-7.02842356c0.7807359-2.34220859 4.68531653-3.12384382 7.80826192-1.56147269s4.68531653 4.68531653 3.90457972 7.02752512z m18.7412661 21.08437312c-2.34220859 2.34220859-7.02752512 0.78163433-9.37063305-2.34310703-3.12294539-3.12294539-3.90457972-7.80826192-1.5614727-10.15136894 2.34220859-2.34220859 6.24678922-0.7807359 9.37063305 2.34310702 3.12384382 3.90457972 3.90457972 8.58899782 1.5614727 10.15136895zM268.30618992 777.44690281c-3.12294539 2.34220859-7.80826192 0-10.15136895-3.90457972-3.12384382-3.90457972-3.12384382-9.37063305 0-10.93210574 3.12384382-2.34310703 7.80916035 0 10.15226739 3.90457972 3.12294539 3.90368129 3.12294539 8.58899782 0 10.93210574z m25.76968965 26.55042555c-2.34220859 3.12294539-7.80916035 2.34220859-12.49447688-1.56237113-3.90457972-3.90368129-5.46605242-9.37063305-2.34220859-11.71284164 2.34220859-3.12384382 7.80826192-2.34310703 12.49447687 1.56147269 3.90368129 3.12384382 4.68531653 8.58989625 2.3422086 11.71374008z m35.1403227 14.83668637c-0.78163433 3.90457972-6.24768766 5.46605242-11.71374008 3.90457972-5.46605242-1.5614727-8.58899782-6.24768766-7.80916036-9.37063305 0.78163433-3.90457972 6.24768766-5.46605242 11.71374009-3.90457972 5.46605242 1.5614727 8.58899782 5.46605242 7.80916035 9.37063305z m38.26416562 3.12384382c0 3.90457972-4.68621496 7.02752512-10.15226738 7.02752512-5.46605242 0-10.15226738-3.12294539-10.15226739-7.02752512s4.68621496-7.02842356 10.15226739-7.02842445c5.46605242 0 10.15226738 3.12384382 10.15226738 7.02842445z m35.92016106-6.24768766c0.78163433 3.90457972-3.12384382 7.80916035-8.58899872 8.58989625-5.46695086 0.78163433-10.15226738-1.5614727-10.93390172-5.46605241-0.77983747-3.90457972 3.12384382-7.80916035 8.5907947-8.58899872 5.46605242-0.78163433 10.15136894 1.56057426 10.93210574 5.46515488z m0 0" fill="#663399" ></path></symbol><symbol id="icon-bilibili" viewBox="0 0 1024 1024"><path d="M832.61667555 181.33447111h-164.32545185l74.45617778-74.45617778c12.84020148-12.84020148 12.84020148-30.8140563 0-43.65425778-12.84020148-12.84020148-30.8140563-12.84020148-43.65425778 0L573.2882963 189.04101925H450.04420741L324.2272237 63.23617185c-10.26730667-12.84020148-25.68040297-15.40096-41.08136295-7.70654815-2.57289482 0-2.57289482 2.57289482-5.13365334 5.13365333-12.84020148 12.84020148-12.84020148 30.8140563 0 43.65425779l77.02907259 77.02907259h-164.32545185c-89.86927408 0-164.32545185 74.45617778-164.32545185 164.32545184v408.24073483c0 87.29637925 74.45617778 161.75255703 164.32545185 161.75255703h25.68040296c0 30.8140563 25.68040297 53.92156445 53.92156444 53.92156444s53.92156445-25.68040297 53.92156445-53.92156444H704.23893333c2.57289482 30.8140563 28.24116148 53.92156445 59.05521778 51.34866964 28.24116148-2.57289482 48.78791111-23.10750815 51.34866964-51.34866964h20.53461333c89.86927408 0 164.32545185-74.45617778 164.32545184-164.32545186V343.09916445c-2.56075852-89.86927408-77.02907259-161.76469333-166.88621037-161.76469334z m-5.13365333 634.19429926H200.99527111c-33.37481482 0-59.05521778-28.24116148-61.61597629-61.61597629l-2.57289482-415.94728297c0-33.37481482 28.24116148-61.6159763 61.6159763-61.61597629h626.48775111c33.37481482 0 59.05521778 28.24116148 61.61597629 61.61597629l2.57289482 415.94728297c-2.57289482 35.93557333-28.24116148 61.6159763-61.6159763 61.61597629z" fill="#ff7299" ></path><path d="M403.82919111 417.55534222l15.40096 77.0290726-205.40681481 38.50846815-15.40096-77.0290726 205.40681481-38.50846815z m197.70026667 77.0290726l15.40096-77.0290726 205.40681481 38.50846815-15.40096 77.0290726-205.40681481-38.50846815z m41.08136297 161.75255703c0 2.57289482 0 7.70654815-2.57289483 10.26730667-12.84020148 28.24116148-41.08136297 46.2150163-74.45617777 48.78791111-20.53461333 0-41.08136297-10.26730667-53.92156445-25.68040296-15.40096 15.40096-33.37481482 25.68040297-53.92156445 25.68040296-30.8140563-2.57289482-59.05521778-20.53461333-74.45617777-48.78791111 0-2.57289482-2.57289482-5.13365333-2.57289481-10.26730667 0-10.26730667 7.70654815-17.97385482 17.97385481-20.53461333h2.57289482c7.70654815 0 12.84020148 2.57289482 15.40096 10.26730666 0 0 20.53461333 28.24116148 38.50846815 28.24116149 35.94770963 0 35.94770963-30.8140563 56.48232296-53.92156445 23.10750815 25.68040297 23.10750815 53.92156445 56.48232296 53.92156445 23.10750815 0 38.50846815-28.24116148 38.50846815-28.24116149 2.57289482-5.13365333 10.26730667-10.26730667 15.40096-10.26730666 10.26730667-2.57289482 17.97385482 5.13365333 20.53461333 15.40096v5.13365333h0.0364089z" fill="#ff7299" ></path></symbol></svg>',      o = (o = document.getElementsByTagName("script"))[o.length - 1].getAttribute("data-injectcss"),      p = function (c, l) {        l.parentNode.insertBefore(c, l);      };    if (o && !c.__iconfont__svg__cssinject__) {      c.__iconfont__svg__cssinject__ = !0;      try {        document.write(          "<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>"        );      } catch (c) {        console && console.log(c);      }    }    function d() {      i || ((i = !0), a());    }    function m() {      try {        t.documentElement.doScroll("left");      } catch (c) {        return void setTimeout(m, 50);      }      d();    }    (l = function () {      var c,        l = document.createElement("div");      (l.innerHTML = v),        (v = null),        (l = l.getElementsByTagName("svg")[0]) &&          (l.setAttribute("aria-hidden", "true"),          (l.style.position = "absolute"),          (l.style.width = 0),          (l.style.height = 0),          (l.style.overflow = "hidden"),          (l = l),          (c = document.body).firstChild ? p(l, c.firstChild) : c.appendChild(l));    }),      document.addEventListener        ? ~["complete", "loaded", "interactive"].indexOf(document.readyState)          ? setTimeout(l, 0)          : ((h = function () {              document.removeEventListener("DOMContentLoaded", h, !1), l();            }),            document.addEventListener("DOMContentLoaded", h, !1))        : document.attachEvent &&          ((a = l),          (t = c.document),          (i = !1),          m(),          (t.onreadystatechange = function () {            "complete" == t.readyState && ((t.onreadystatechange = null), d());          }));  })(window);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
