<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>UnSpMan</title>
  
  <subtitle>无敌于世间</subtitle>
  <link href="https://unspman.github.io/atom.xml" rel="self"/>
  
  <link href="https://unspman.github.io/"/>
  <updated>2023-12-25T00:42:40.209Z</updated>
  <id>https://unspman.github.io/</id>
  
  <author>
    <name>佩奇</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://unspman.github.io/posts/0.html"/>
    <id>https://unspman.github.io/posts/0.html</id>
    <published>2023-12-25T00:42:40.209Z</published>
    <updated>2023-12-25T00:42:40.209Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、IDEA安装-包含Maven-tomcat"><a href="#一、IDEA安装-包含Maven-tomcat" class="headerlink" title="一、IDEA安装(包含Maven,tomcat)"></a>一、IDEA安装(包含Maven,tomcat)</h2><h3 id="第一步：下载安装idea软件"><a href="#第一步：下载安装idea软件" class="headerlink" title="第一步：下载安装idea软件"></a><strong>第一步：下载安装idea软件</strong></h3><p>IDEA分为Ultimate收费版与Community免费版，免费版比收费版功能少很多。因此，我们还是下载<strong>Ultimate收费版的IDEA</strong></p><p>可选择不同系统软件。下载地址为：<a href="https://www.jetbrains.com/idea/download/#section=windows，">https://www.jetbrains.com/idea/download/#section=windows，</a></p><h3 id="第二步：下载安装并配置Maven"><a href="#第二步：下载安装并配置Maven" class="headerlink" title="第二步：下载安装并配置Maven"></a><strong>第二步：下载安装并配置Maven</strong></h3><p>下载地址：<a href="http://maven.apache.org/download.cgi">http://maven.apache.org/download.cgi</a></p><h4 id="下载最新的3-6-3版本"><a href="#下载最新的3-6-3版本" class="headerlink" title="下载最新的3.6.3版本"></a><strong>下载</strong>最新的3.6.3版本</h4><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305071915484.png" alt="img"></p><p>下载后修改成阿里云的仓库，不修改的话，使用国外的仓库，下载依赖时会很慢，这里推荐阿里的仓库。找到setting.xml文件，使用编辑器打开；</p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305071926244.png" alt="img"></p><h4 id="配置阿里云镜像"><a href="#配置阿里云镜像" class="headerlink" title="配置阿里云镜像"></a><strong>配置阿里云镜像</strong></h4><p>搜索找到mirrors标签，在146行，不同版本可能不太一样，将下面代码贴进去，要放在<mirrors></mirrors>的里面；</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span>        </span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305071926391.png" alt="img"></p><h4 id="新增本地依赖仓库地址"><a href="#新增本地依赖仓库地址" class="headerlink" title="新增本地依赖仓库地址"></a><strong>新增本地依赖仓库地址</strong></h4><p>在49行位置，在localRepository注释下面添加如下代码，路径可以根据实际修改，如图</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;localRepository&gt;D:\ackowledge\localRepository\repository&lt;/localRepository&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305072028997.png" alt="img"></p><h4 id="配置系统环境变量"><a href="#配置系统环境变量" class="headerlink" title="配置系统环境变量"></a><strong>配置系统环境变量</strong></h4><p>新建系统变量：MAVEN_HOME</p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305072029860.png" alt="img"></p><p> 在path中填写新建的系统变量：</p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305072030088.png" alt="img"></p><h4 id="验证是否安装成功"><a href="#验证是否安装成功" class="headerlink" title="验证是否安装成功"></a>验证是否安装成功</h4><p>输入命令mvn -v 验证是否安装成功，成功如下图</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn -version</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305072030805.png" alt="img"></p><p>输入命令mvn help:system，看你配置的本地仓库文件夹(我的仓库文件夹是D:\ackowledge\localRepository\repository)下是否 有了下载的内容。下载成功截图如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn help:system</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305072030997.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305072044882.png" alt="img"></p><p>以上maven就安装好了，接下来我们在idea中进行配置（如下图所示）</p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305072047595.png" alt="image-20230507204737539"></p><p>配置后，点击刷新按钮。</p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305072048126.png" alt="img"></p><p>此时maven配置成功。</p><h3 id="第三步：下载安装并配置tomcat"><a href="#第三步：下载安装并配置tomcat" class="headerlink" title="第三步：下载安装并配置tomcat"></a><strong>第三步：下载安装并配置tomcat</strong></h3><h4 id="1-下载tomcat"><a href="#1-下载tomcat" class="headerlink" title="1.下载tomcat"></a>1.下载tomcat</h4><p><strong>进入<a href="https://tomcat.apache.org/">tomcat官网</a></strong></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305072114290.png" alt="在这里插入图片描述"></p><p><strong>下滑到core字眼的地方，下载核心版本</strong></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305072114336.png" alt="在这里插入图片描述"></p><p><strong>下载后如图所示，解压到任意文件夹，解压好后，目录结构如图所示</strong></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305072115520.png" alt="在这里插入图片描述"></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305072116245.png" alt="在这里插入图片描述"></p><h4 id="2-在IDEA中配置"><a href="#2-在IDEA中配置" class="headerlink" title="2.在IDEA中配置"></a>2.在IDEA中配置</h4><p><strong>启动IDEA后，在IDEA上方工具栏中找到run</strong></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305072122457.png" alt="在这里插入图片描述"></p><p><strong>在下拉菜单中选择Edit Configurgations</strong></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305072122454.png" alt="在这里插入图片描述"></p><p><strong>展开Templates，滑到最下方，找到Tomcat Server</strong></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305072122539.png" alt="在这里插入图片描述"></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305072123573.png" alt="在这里插入图片描述"></p><p><strong>展开Tomcat Server 点击local</strong></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305072124033.png" alt="在这里插入图片描述"></p><p><strong>点击右侧上方的Configure，选择tomcat解压的目录，也就是含bin目录的上一级目录</strong></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305072124749.png" alt="在这里插入图片描述"></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305072124273.png" alt="在这里插入图片描述"></p><p><strong>ok后如图所示</strong></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305072125772.png" alt="在这里插入图片描述"></p><p><strong>点击Applay，ok，配置成功</strong></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305072125146.png" alt="在这里插入图片描述"></p><p><strong>重新打开配置，点击configure，点击左上角的+可以配置多个tomcat服务器</strong></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305072125139.png" alt="在这里插入图片描述"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、IDEA安装-包含Maven-tomcat&quot;&gt;&lt;a href=&quot;#一、IDEA安装-包含Maven-tomcat&quot; class=&quot;headerlink&quot; title=&quot;一、IDEA安装(包含Maven,tomcat)&quot;&gt;&lt;/a&gt;一、IDEA安装(包含Maven</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Mybatis学习01</title>
    <link href="https://unspman.github.io/posts/1aa798c4.html"/>
    <id>https://unspman.github.io/posts/1aa798c4.html</id>
    <published>2023-07-25T20:16:10.000Z</published>
    <updated>2023-12-25T00:42:40.209Z</updated>
    
    <content type="html"><![CDATA[<p>前言<br>Mybatis框架是SSM框架中很重要的一个框架，它大大简化了JDBC的代码，接下来让我们来详细了解一下Mybatis</p><p>注：本篇文章参照于B站狂神说老师的Mybatis视频编写，视频原地址为<a href="https://www.bilibili.com/video/BV1NE411Q7Nx/?spm_id_from=333.337.search-card.all.click&amp;vd_source=3e10f7e5d3cf396ddb49835c00d21a43">【狂神说Java】Mybatis最新完整教程IDEA版通俗易懂_哔哩哔哩_bilibili</a></p><h1 id="1、简介"><a href="#1、简介" class="headerlink" title="1、简介"></a>1、简介</h1><h2 id="1-1、什么是MyBatis"><a href="#1-1、什么是MyBatis" class="headerlink" title="1.1、什么是MyBatis"></a>1.1、什么是MyBatis</h2><blockquote><p>MyBatis 是一款优秀的持久层框架<br>它支持自定义 SQL、存储过程以及高级映射<br>MyBatis 免除了几乎所有的 JDBC 代码以及设置参数和获取结果集<br>MyBatis 可以通过简单的 XML 或注解来配置和映射原始类型、接口和 Java POJO（Plain Old Java Objects，普通老式 Java 对象）为数据库中的记录。<br>现迁移到GitHub</p></blockquote><h2 id="1-2、如何获得Mybatis"><a href="#1-2、如何获得Mybatis" class="headerlink" title="1.2、如何获得Mybatis"></a>1.2、如何获得Mybatis</h2><p>Maven仓库：<a href="https://mvnrepository.com/">https://mvnrepository.com/</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>GitHub：<a href="https://github.com/mybatis/mybatis-3">https://github.com/mybatis/mybatis-3</a></p><p>官方文档：<a href="https://mybatis.org/mybatis-3/zh/index.html">https://mybatis.org/mybatis-3/zh/index.html</a></p><h2 id="1-3、持久化"><a href="#1-3、持久化" class="headerlink" title="1.3、持久化"></a>1.3、持久化</h2><h3 id="1-3-1、数据持久化"><a href="#1-3-1、数据持久化" class="headerlink" title="1.3.1、数据持久化"></a>1.3.1、数据持久化</h3><ul><li>持久化就是将程序的数据在持久状态和瞬时状态转化的过程</li><li>内存：<strong>断电即失</strong></li><li>数据库（jdbc）,io文件持久化</li><li>生活结合：冰箱冷藏.。.</li></ul><h3 id="1-3-2、为什么需要持久化？"><a href="#1-3-2、为什么需要持久化？" class="headerlink" title="1.3.2、为什么需要持久化？"></a>1.3.2、为什么需要持久化？</h3><ul><li>有一些对象，不能让他丢掉</li><li>内存太贵</li></ul><h2 id="1-4、持久层"><a href="#1-4、持久层" class="headerlink" title="1.4、持久层"></a>1.4、持久层</h2><p>Dao层，Service层，Controller层…</p><ul><li>完成持久化工作的代码块</li><li>层是界限十分明显的</li></ul><h2 id="1-5、为什么需要MyBatis"><a href="#1-5、为什么需要MyBatis" class="headerlink" title="1.5、为什么需要MyBatis"></a>1.5、为什么需要MyBatis</h2><ul><li>帮助程序员将数据存入到数据库中</li><li>方便</li><li>传统的jdbc代码太复杂了，简化代码，形成框架。——自动化</li><li>不使用MyBatis也可以，更容易上手</li></ul><p><strong>优点：</strong></p><ul><li>简单易学：本身就很小且简单。没有任何第三方依赖，最简单安装只要两个jar文件+配置几个sql映射文件。易于学习，易于使用。通过文档和源代码，可以比较完全的掌握它的设计思路和实现。</li><li>灵活：mybatis不会对应用程序或者数据库的现有设计强加任何影响。 sql写在xml里，便于统一管理和优化。通过sql语句可以满足操作数据库的所有需求。</li><li>解除sql与程序代码的耦合：通过提供DAO层，将业务逻辑和数据访问逻辑分离，使系统的设计更清晰，更易维护，更易单元测试。sql和代码的分离，提高了可维护性。</li><li>提供映射标签，支持对象与数据库的orm字段关系映射。</li><li>提供对象关系映射标签，支持对象关系组建维护。</li><li>提供xml标签，支持编写动态sql。</li></ul><h1 id="2、第一个Mybatis程序"><a href="#2、第一个Mybatis程序" class="headerlink" title="2、第一个Mybatis程序"></a>2、第一个Mybatis程序</h1><p>思路：搭建环境—&gt;导入Mybatis—&gt;编写代码——&gt;测试</p><h2 id="2-1、搭建环境"><a href="#2-1、搭建环境" class="headerlink" title="2.1、搭建环境"></a>2.1、搭建环境</h2><p>搭建数据库——新建myBatis数据库创建user表添加数据（这里使用Navicat）</p><p>新建项目</p><ol><li>新建一个普通的Maven项目</li><li>删除src目录</li><li>导入maven依赖</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatiP<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  mybatis      --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--junit单元测试--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--mysql驱动--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.29<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-2、创建一个模块"><a href="#2-2、创建一个模块" class="headerlink" title="2.2、创建一个模块"></a>2.2、创建一个模块</h2><p>编写mybatis的核心配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--核心配置文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/mybatis?useSSL=false<span class="symbol">&amp;amp;</span>useUnicode=true<span class="symbol">&amp;amp;</span>characterEncoding=UTF-8<span class="symbol">&amp;amp;</span>serverTimezone=GMT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456789&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    每一个Mapper.xml都需要在MyBatis核心配置文件中注册--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/qjd/dao/UserMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>编写mybatis的工具类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="comment">//sqlSessionFactory---&gt;sqlSession</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisUtils</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SqlSessionFactory sqlSessionFactory;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//使用mybatis获取sqlSessionFactory对象</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">resource</span> <span class="operator">=</span> <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> Resources.getResourceAsStream(resource);</span><br><span class="line">            sqlSessionFactory = <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    既然有了 SqlSessionFactory，顾名思义，我们可以从中获得 SqlSession 的实例。</span></span><br><span class="line"><span class="comment">//    SqlSession 提供了在数据库执行 SQL 命令所需的所有方法</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">static</span> SqlSession <span class="title function_">getSqlSession</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="comment">//        SqlSession sqlSession = sqlSessionFactory.openSession();</span></span><br><span class="line"><span class="comment">//        return sqlSession;</span></span><br><span class="line">        <span class="keyword">return</span> sqlSessionFactory.openSession();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3、编写代码"><a href="#2-3、编写代码" class="headerlink" title="2.3、编写代码"></a>2.3、编写代码</h2><p><strong>实体类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.qjd.pojo;</span><br><span class="line"><span class="comment">//实体类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String pwd;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(<span class="type">int</span> id, String name, String pwd)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.pwd = pwd;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPwd</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> pwd;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPwd</span><span class="params">(String pwd)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.pwd = pwd;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, pwd=&#x27;&quot;</span> + pwd + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Dao接口</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.qjd.pojo.User;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line">    List&lt;User&gt; <span class="title function_">getUserList</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>接口实现类由原来的UserDaolmpl转变为Mapper配置文件</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        namespace=绑定一个Dao/Mapper接口--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.qjd.dao.UserDao&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    select查询语句，ID对应方法名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserList&quot;</span>  <span class="attr">resultType</span>=<span class="string">&quot;com.qjd.pojo.User&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-4、测试"><a href="#2-4、测试" class="headerlink" title="2.4、测试"></a>2.4、测试</h2><p>注意：org.apache.ibatis.binding.BindingException: Type interface com.qjd.dao.UserDao is not known to the MapperRegistry.</p><p>MapperRegistry是什么？</p><p>核心配置文件中注册Mappers</p><p>Junit测试</p><p>测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.qjd.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.qjd.utils.MybatisUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDaoTest</span> &#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//第一步：获得SqlSession对象</span></span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span>MybatisUtils.getSqlSession();</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="comment">//执行sql</span></span><br><span class="line">            <span class="comment">//方式一getMapper</span></span><br><span class="line">            <span class="type">UserDao</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(UserDao.class);</span><br><span class="line">            List&lt;User&gt; userList = mapper.getUserList();</span><br><span class="line">            <span class="comment">//方式二</span></span><br><span class="line">            <span class="comment">//List&lt;User&gt; userList1 = sqlSession.selectList(&quot;com.qjd.dao.UserDao.getUserList&quot;);</span></span><br><span class="line">            <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">                System.out.println(user);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">//关闭SqlSession</span></span><br><span class="line">            sqlSession.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意问题</p><ol><li>配置文件没有注册</li><li>绑定接口错误</li><li>方法名不对</li><li>返回类型不对</li><li>maven导出资源问题</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    在build中配置resources ， 来防止我们资源导出失败的问题--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="3、CRUD"><a href="#3、CRUD" class="headerlink" title="3、CRUD"></a>3、CRUD</h1><p>增删改查</p><h2 id="3-1、namespace"><a href="#3-1、namespace" class="headerlink" title="3.1、namespace"></a>3.1、namespace</h2><p>namespace中的包名要和接口中的包名一致—uesrDao–&gt;userMapper</p><h2 id="3-2、select"><a href="#3-2、select" class="headerlink" title="3.2、select"></a>3.2、select</h2><p>选择查询语句：</p><ul><li><strong>id就是对应的namespace中的方法名</strong></li><li><strong>resultType就是Sql语句执行的返回值</strong></li><li><strong>parameterType就是参数类型</strong></li></ul><h2 id="3-3、Insert"><a href="#3-3、Insert" class="headerlink" title="3.3、Insert"></a>3.3、Insert</h2><h2 id="3-4、update"><a href="#3-4、update" class="headerlink" title="3.4、update"></a>3.4、update</h2><h2 id="3-5、delete"><a href="#3-5、delete" class="headerlink" title="3.5、delete"></a>3.5、delete</h2><p>1.编写接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line">    <span class="comment">//查询全部用户</span></span><br><span class="line"></span><br><span class="line">    List&lt;User&gt; <span class="title function_">getUserList</span><span class="params">()</span>;</span><br><span class="line">    <span class="comment">// 根据id查询用户</span></span><br><span class="line">    User <span class="title function_">getUserById</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line">    <span class="comment">//插入一个用户</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">addUser</span><span class="params">(User user)</span>;</span><br><span class="line">    <span class="comment">//修改用户</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">updateUser</span><span class="params">(User user)</span>;</span><br><span class="line">    <span class="comment">//删除一个用户</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">deleteUser</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.编写对应Mapper中的sql语句</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;前言&lt;br&gt;Mybatis框架是SSM框架中很重要的一个框架，它大大简化了JDBC的代码，接下来让我们来详细了解一下Mybatis&lt;/p&gt;
&lt;p&gt;注：本篇文章参照于B站狂神说老师的Mybatis视频编写，视频原地址为&lt;a href=&quot;https://www.bilibili</summary>
      
    
    
    
    <category term="Mybatis" scheme="https://unspman.github.io/categories/Mybatis/"/>
    
    
    <category term="Mybatis" scheme="https://unspman.github.io/tags/Mybatis/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb学习02-基本使用(tomcat/maven)</title>
    <link href="https://unspman.github.io/posts/48b59b7e.html"/>
    <id>https://unspman.github.io/posts/48b59b7e.html</id>
    <published>2023-05-08T21:31:27.000Z</published>
    <updated>2023-12-25T00:42:40.209Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-web的基本概念"><a href="#1-web的基本概念" class="headerlink" title="1.web的基本概念"></a>1.web的基本概念</h1><h2 id="1-1前言"><a href="#1-1前言" class="headerlink" title="1.1前言"></a>1.1前言</h2><p>web开发：</p><ul><li><p>web，网页的意思</p></li><li><p>静态web</p><ul><li>html、css</li><li>提供给所有人看的数据始终不会发生变化！</li></ul></li><li><p>动态web</p><ul><li>淘宝，几乎是所有的网站。</li><li>提供给所有人看的数据始终会发生变化，每个人在不同的时间，不同的地点看到的信息各不相同。</li><li>技术栈：servlet/JSP，ASP，PHP</li></ul><p>在java中，动态web资源开发的技术统称为JavaWeb</p></li></ul><h2 id="1-2web应用程序"><a href="#1-2web应用程序" class="headerlink" title="1.2web应用程序"></a>1.2web应用程序</h2><p>web应用程序：可以提供浏览器访问的程序</p><ul><li>a.html 、b.html … 多个web资源，这些web资源可以被外界访问，对外界提供服务。</li><li>你能访问到的任何一个页面或者资源，都存在于这个世界的某一个角落的计算机上。</li><li><p>URL</p></li><li><p>这个统一的web资源会被放在同一个文件夹下，web应用程序—&gt;tomcat:服务器</p></li><li>一个web应用由多部分组成（静态web，动态web）<ul><li>html,css,js</li><li>jsp,servlet</li><li>java程序</li><li>jar包</li><li>配置文件（Properties）</li></ul></li></ul><p>web应用编写完毕后，若想提供给外界访问，需要一个服务器来统一管理。</p><h2 id="1-3静态web"><a href="#1-3静态web" class="headerlink" title="1.3静态web"></a>1.3静态web</h2><ul><li><p><code>*.htm,*.html</code>这些都是网页的后缀，如果服务器上一直存在这些东西，我们就可以直接进行读取。</p></li><li><p>静态web存在缺点</p><ul><li><p>web页面无法动态更新，所有用户看到都是同一个页面</p><ul><li>轮播图，点击特效：伪动态</li><li>JavaScript【实际开发中，它用的最多】</li><li>VBScript</li></ul></li><li><p>它无法和数据库交互（数据无法持久化，用户无法交互）</p></li></ul></li></ul><h2 id="1-4动态web"><a href="#1-4动态web" class="headerlink" title="1.4动态web"></a>1.4动态web</h2><p>页面会动态展示：web的页面展示的效果因人而异</p><p>缺点：</p><ul><li>假如服务器的动态资源出现了错误，我们需要重新编写我们的后台程序，重新发布。<ul><li>停机维护</li></ul></li></ul><p>优点：</p><ul><li>web页面可以动态更新，所有用户都可以看到不同的页面</li><li>它可以与数据库交互（数据持久化）</li></ul><h1 id="2-web服务器讲解"><a href="#2-web服务器讲解" class="headerlink" title="2.web服务器讲解"></a>2.web服务器讲解</h1><h2 id="2-1技术讲解"><a href="#2-1技术讲解" class="headerlink" title="2.1技术讲解"></a>2.1技术讲解</h2><p><strong>ASP:</strong></p><ul><li>微软：国内最早流行的就是ASP</li><li>在html中嵌入了VB的脚本，ASP+COM</li><li>在ASP开发中，基本一个页面都是几千行的业务代码，页面极其乱</li><li>维护成本高</li><li>C#</li><li>IIS</li></ul><p><strong>PHP:</strong></p><ul><li>PHP开发速度很快，功能很强大，跨平台，代码很简单</li><li>无法承载大访问量的情况（局限性）</li></ul><p><strong>JSP/Servlet:</strong></p><p>B/S:浏览器和服务器</p><p>C/S:客户端和服务器</p><ul><li>sun公司主推的B/S架构</li><li>基于java语言的（所有的发送四，或者一些开源的组件，都是用java写的）</li><li>可以承载三高问题带来的影响</li><li>语法像ASP</li></ul><h2 id="2-2web服务器"><a href="#2-2web服务器" class="headerlink" title="2.2web服务器"></a>2.2web服务器</h2><p>服务器是一种被动的操作，用来处理用户的一些请求和给用户一些响应信息</p><p><strong>IIS</strong></p><p>微软的 windows中自带的</p><p><strong>Tomcat</strong></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305082141015.png" alt="img"></p><p>Tomcat是Apache 软件基金会（Apache Software Foundation）的Jakarta 项目中的一个核心项目，最新的Servlet 和JSP 规范总是能在Tomcat 中得到体现。因为Tomcat 技术先进、性能稳定，而且免费，因而深受Java 爱好者的喜爱并得到了部分软件开发商的认可，成为目前比较流行的Web 应用服务器。</p><p>Tomcat 服务器是一个免费的开放源代码的Web 应用服务器，属于轻量级应用服务器，在中小型系统和并发访问用户不是很多的场合下被普遍使用，是开发和调试JSP 程序的首选。对于一个java初学web的人来说，它是最佳的选择。</p><p>诀窍是，当配置正确时，Apache 为HTML页面服务，而Tomcat 实际上运行JSP 页面和Servlet。<br><strong>工作3-5年之后，可以尝试手写tomcat服务器。</strong></p><h1 id="3-tomcat详解"><a href="#3-tomcat详解" class="headerlink" title="3.tomcat详解"></a>3.tomcat详解</h1><h2 id="3-1安装tomcat"><a href="#3-1安装tomcat" class="headerlink" title="3.1安装tomcat"></a>3.1安装tomcat</h2><h2 id="3-2tomcat启动和配置"><a href="#3-2tomcat启动和配置" class="headerlink" title="3.2tomcat启动和配置"></a>3.2tomcat启动和配置</h2><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305082143010.png" alt="image-20210817220006987"></p><p><strong>启动，关闭tomcat</strong></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305082143919.png" alt="image-20210817220257077"></p><p>访问测试：<a href="http://localhost:8080/">http://localhost:8080/</a></p><p>可能遇到的问题：</p><ol><li>java环境变量没有配置</li><li>闪退问题：需要配置兼容性</li><li>乱码问题：配置文件中设置</li></ol><h2 id="3-3配置"><a href="#3-3配置" class="headerlink" title="3.3配置"></a>3.3配置</h2><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305082147282.png" alt="image-20210817220627007"></p><p>可以配置启动的端口号</p><ul><li>tomcat的默认端口为：8080</li><li>mysql默认端口：3306</li><li>http默认端口：80</li><li>https默认端口：443</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>可以配置主机的名称</p><ul><li>默认的主机名为：localhost — 127.0.0.1</li><li>默认网站应用存放的位置为webapps</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Host</span> <span class="attr">name</span>=<span class="string">&quot;localhost&quot;</span>  <span class="attr">appBase</span>=<span class="string">&quot;webapps&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">unpackWARs</span>=<span class="string">&quot;true&quot;</span> <span class="attr">autoDeploy</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>高难度面试题：</strong></p><p>请你谈谈网站是如何进行访问的?</p><ol><li>输入一个域名；回车</li><li>检查本机的配置文件C:\Windows\System32\drivers\etc\hosts下有没有这个域名的映射<ol><li>有：直接返回对应的ip地址,这个地址中，有我们需要放的web程序，可以直接访问</li><li>没有：去DNS服务器找，找到的话就返回，找不到就返回找不到</li></ol></li></ol><p>4.可以配置一下环境变量（可选项）</p><h2 id="3-4发布一个web网站"><a href="#3-4发布一个web网站" class="headerlink" title="3.4发布一个web网站"></a>3.4发布一个web网站</h2><p>不会就先模仿</p><ul><li>将自己写的网站，放到服务器（tomcat）中指定的web应用的文件夹（webapps）下，就可以访问了</li></ul><p>网站应该有的结构</p><p>webapps : tomcat服务器的web目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">webapps : tomcat服务器的web目录</span><br><span class="line">ROOT</span><br><span class="line">kuangstudy : 网站的目录名</span><br><span class="line">WEB-INF</span><br><span class="line">classes : java程序</span><br><span class="line">lib ： web应用所依赖的jar包</span><br><span class="line">web.xml ： 网站配置文件</span><br><span class="line">index.html ： 默认的首页</span><br><span class="line">static</span><br><span class="line">css</span><br><span class="line">style.css</span><br><span class="line">js</span><br><span class="line">img</span><br><span class="line">…</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="4-http详解"><a href="#4-http详解" class="headerlink" title="4.http详解"></a>4.http详解</h1><h2 id="4-1什么是HTPP"><a href="#4-1什么是HTPP" class="headerlink" title="4.1什么是HTPP"></a>4.1什么是HTPP</h2><p>超文本传输协议（<a href="https://so.csdn.net/so/search?q=Hyper&amp;spm=1001.2101.3001.7020">Hyper</a> Text Transfer Protocol，HTTP）是一个简单的请求-响应协议，它通常运行在TCP之上。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">文本：html,字符串…</span><br><span class="line">超文本：图片，音乐，视频，定位，地图…</span><br><span class="line">80端口号</span><br></pre></td></tr></table></figure><p>HTTPS：安全的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">443端口号</span><br></pre></td></tr></table></figure><h2 id="4-2两个时代"><a href="#4-2两个时代" class="headerlink" title="4.2两个时代"></a>4.2两个时代</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http1.0</span><br><span class="line">HTTP/1.0 : 客户端可以与web服务器连接后，只能获得一个web资源，断开连接</span><br><span class="line">http2.0</span><br><span class="line">HTTP/1.1：客户端可以与web服务器连接后，可以获得多个web资源。</span><br></pre></td></tr></table></figure><h2 id="4-3Http请求"><a href="#4-3Http请求" class="headerlink" title="4.3Http请求"></a>4.3Http请求</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">客户端—发送请求（Request）–服务器</span><br></pre></td></tr></table></figure><p>百度：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Request URL: https://www.baidu.com/    请求地址</span><br><span class="line">Request Method: GET     get方法/post方法</span><br><span class="line">Status Code: 200 OK     状态码：200</span><br><span class="line">Remote Address: 14.215.177.38:443</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line">Accept-Encoding: gzip, deflate, br</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cache-Control: no-cache</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Cookie: BIDUPSID=E915D8DAC0FCA4159DF81414176EBD43; PSTM=1618281055; BAIDUID=E915D8DAC0FCA415F0B2ABB582D30135:FG=1; __yjs_duid=1_042d578ea86bfb698f35ffbf7e97f5ff1619488718760; BAIDUID_BFESS=E915D8DAC0FCA415F0B2ABB582D30135:FG=1; COOKIE_SESSION=16414_3_8_4_7_1_1_0_7_1_0_0_16416_0_3_0_1625410778_1625394325_1625410775%7C9%2379260_3_1625394323%7C2; BD_LAST_QID=9581266030928333830</span><br><span class="line">Host: www.baidu.com</span><br></pre></td></tr></table></figure><h3 id="1-请求行"><a href="#1-请求行" class="headerlink" title="1.请求行"></a>1.请求行</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">请求行中的请求方式：GET</span><br><span class="line">请求方式：GET,POST,HEAD,DELETE,PUT,TRACT…</span><br><span class="line">get:请求能够携带的参数比较少，大小有限制，会在浏览器的URL地址拦显示数据内容，不安全，但是高效</span><br><span class="line">post：请求能都携带的参数没有限制，大小没有限制，不会再在浏览器的URL地址拦显示数据内容，安全，但是不高效。</span><br></pre></td></tr></table></figure><h3 id="2-消息头"><a href="#2-消息头" class="headerlink" title="2.消息头"></a>2.消息头</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Accept: 高速浏览器，它所支持的类型</span><br><span class="line">Accept-Encoding: 支持哪种编码格式  GBK  UTF-8 GB2312  ISO8859-1</span><br><span class="line">Accept-Language: 告诉浏览器，它的语言环境</span><br><span class="line">Cache-Control: 缓存控制</span><br><span class="line">Connection: 告诉浏览器，请求完成是断开还是保持连接</span><br><span class="line">Host:主机</span><br></pre></td></tr></table></figure><h2 id="4-4Http响应"><a href="#4-4Http响应" class="headerlink" title="4.4Http响应"></a>4.4Http响应</h2><ul><li>服务器—响应—客户端</li></ul><p>百度：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Cache-Control: private                 缓存控制</span><br><span class="line">Connection: keep-alive                 连接保持</span><br><span class="line">Content-Encoding: gzip                 编码</span><br><span class="line">Content-Type: text/html;charset=utf-8  类型</span><br></pre></td></tr></table></figure><h3 id="1-响应体"><a href="#1-响应体" class="headerlink" title="1.响应体"></a>1.响应体</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Accept: 高速浏览器，它所支持的类型</span><br><span class="line">Accept-Encoding: 支持哪种编码格式  GBK  UTF-8 GB2312  ISO8859-1</span><br><span class="line">Accept-Language: 告诉浏览器，它的语言环境</span><br><span class="line">Cache-Control: 缓存控制</span><br><span class="line">Connection: 告诉浏览器，请求完成是断开还是保持连接</span><br><span class="line">Host:主机</span><br><span class="line">Refresh:高速客户端，多久刷新一次</span><br><span class="line">Location:让网页重新定位</span><br></pre></td></tr></table></figure><h3 id="2-响应状态码"><a href="#2-响应状态码" class="headerlink" title="2.响应状态码"></a>2.响应状态码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">200：请求响应成功</span><br><span class="line"></span><br><span class="line">3xx：请求重定向</span><br><span class="line"></span><br><span class="line">重定向：你重新到我给你的新位置去</span><br><span class="line">4xx：找不到资源 404</span><br><span class="line"></span><br><span class="line">资源不存在</span><br><span class="line">5xx：服务器代码错误 500 502（网关错误）</span><br></pre></td></tr></table></figure><p><strong>常见面试题：</strong></p><p>当你的浏览器中地址拦输入地址并回车的一瞬间到页面能够展示回来，经历了什么？</p><h1 id="5-maven环境搭建"><a href="#5-maven环境搭建" class="headerlink" title="5.maven环境搭建"></a>5.maven环境搭建</h1><p>我们为什么要学习这个技术？</p><ol><li><p>在javaweb开发中，需要使用大量的jar，我们手动去导入</p></li><li><p>如何能够让一个东西自动帮我导入和配置这个jar包</p><p>由此，Maven诞生了！</p></li></ol><h2 id="5-1Maven项目架构管理工具"><a href="#5-1Maven项目架构管理工具" class="headerlink" title="5.1Maven项目架构管理工具"></a>5.1Maven项目架构管理工具</h2><p>我们目前就是方便导入jar包的</p><p>Maven的核心思想：<strong>约定大于配置</strong></p><ul><li>有约束，不要去违反</li></ul><p>Maven会规定好你该如何取编写我们的java代码，必须要按照这个规范来。</p><h2 id="5-2下载安装Maven"><a href="#5-2下载安装Maven" class="headerlink" title="5.2下载安装Maven"></a>5.2下载安装Maven</h2><h1 id="6-idea中的maven操作"><a href="#6-idea中的maven操作" class="headerlink" title="6.idea中的maven操作"></a>6.idea中的maven操作</h1><ol><li>启动idea</li><li>创建一个maven web项目</li></ol><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305092040129.png" alt="image-20210821112933801"></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305092040177.png" alt="image-20210821142829865"></p><p>3.等待项目初始化完毕</p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305092040080.png" alt="image-20210821114719623"></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305092040760.png" alt="image-20210821143126383"></p><p>4.观察maven仓库中多了什么东西？</p><p>5.idea中maven设置</p><p>idea项目创建成功后，看一眼Maven的配置</p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305092040353.png" alt="image-20210821142139214"></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305092040974.png" alt="image-20210821142313164"></p><p>6.到这里，maven在idea中的配置和使用就ok了</p><h2 id="6-2创建一个普通的maven项目"><a href="#6-2创建一个普通的maven项目" class="headerlink" title="6.2创建一个普通的maven项目"></a>6.2创建一个普通的maven项目</h2><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305092040912.png" alt="image-20210821143805967"></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305092040264.png" alt="image-20210821143821541"></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305092040645.png" alt="image-20210821144032602"></p><p>这个只有在web应用下才会有</p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305092040115.png" alt="image-20210821144237704"></p><h2 id="6-3标记文件夹功能"><a href="#6-3标记文件夹功能" class="headerlink" title="6.3标记文件夹功能"></a>6.3标记文件夹功能</h2><p><strong>方法【1】</strong></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305092040550.png" alt="image-20210821144843840"></p><p><strong>方法【2】</strong></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305092040020.png" alt="image-20210821145104525"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/b92e4908bf5461ae7dfa6aefa9424275.png" alt="image-20210821145140271"></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305092039740.png" alt="image-20210821145356313"></p><h2 id="6-4在idea中配置tomcat"><a href="#6-4在idea中配置tomcat" class="headerlink" title="6.4在idea中配置tomcat"></a>6.4在idea中配置tomcat</h2><p>1.点击下面这里</p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305092041358.png" alt="image-20210821145754956"></p><p>2.点击加号，【tomcat service】 —》【local】</p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305092041520.png" alt="img"></p><p>3.配置tomcat服务器</p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305092042182.png" alt="image-20210821150504811"></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305092041207.png" alt="image-20210821150504811"></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305092041266.png" alt="image-20210821150537899"></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305092042000.png" alt="img"></p><p>4.启动tomcat</p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305092043457.png" alt="image-20210821151243135"></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305092043679.png" alt="image-20210821151618902"></p><h2 id="6-5POM文件"><a href="#6-5POM文件" class="headerlink" title="6.5POM文件"></a>6.5POM文件</h2><p>pom.xml是maven的核心配置文件</p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305092043818.png" alt="image-20210821151913777"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--maven版本和头文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--这里就是我们配置的gav--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.zyy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javaweb-maven<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--packaging  项目的方法方式</span></span><br><span class="line"><span class="comment">    jar:jar应用</span></span><br><span class="line"><span class="comment">    war:javaWeb应用</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>javaweb-maven Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--配置--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--项目的默认构建编码--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--编码版本--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--项目依赖--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--项目构建用的东西--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>javaweb-maven<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span><span class="comment">&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-clean-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.22.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-install-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-deploy-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>maven的高级之初在于它会帮你导入这个jar包所依赖的其他jar包</strong></p><p>maven由于他的约定大于配置，我们之后可能会遇到我们写的配置文件，无法被导出或者生效的问题，解决方案：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--在build中配置resources,来防止我们资源导出失败的问题--&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6-6idea操作"><a href="#6-6idea操作" class="headerlink" title="6.6idea操作"></a>6.6idea操作</h2><p>目录树</p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305092044181.png" alt="image-20210821154123366"></p><p>maven中jar的联系关联图</p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305092044985.png" alt="image-20210821154340605"></p><h1 id="7-解决大家遇到的一些问题"><a href="#7-解决大家遇到的一些问题" class="headerlink" title="7.解决大家遇到的一些问题"></a>7.解决大家遇到的一些问题</h1><h3 id="tomcat资源导出失败的问题"><a href="#tomcat资源导出失败的问题" class="headerlink" title="tomcat资源导出失败的问题"></a>tomcat资源导出失败的问题</h3><p>需要修改build中配置resources ,eg:原本导出<strong>src/main/resources</strong>下的properties和xml文件，可以加上<strong>src/main/java</strong>目录下的properties和xml文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--在build中配置resources,来防止我们资源导出失败的问题--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="maven-3-6-2"><a href="#maven-3-6-2" class="headerlink" title="maven 3.6.2"></a>maven 3.6.2</h3><p>报错：unable to import maven project:see logs for details</p><p>解决方法：降级为3.6.1</p><h3 id="tomcat闪退"><a href="#tomcat闪退" class="headerlink" title="tomcat闪退"></a>tomcat闪退</h3><h3 id="idea中每次都要重复配置maven"><a href="#idea中每次都要重复配置maven" class="headerlink" title="idea中每次都要重复配置maven"></a>idea中每次都要重复配置maven</h3><p>在idea中的全局默认配置中去配置</p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305092045940.png" alt="image-20210822112015614"></p><h3 id="maven项目中tomcat无法配置"><a href="#maven项目中tomcat无法配置" class="headerlink" title="maven项目中tomcat无法配置"></a>maven项目中tomcat无法配置</h3><h3 id="maven默认web项目中的web-xml版本问题"><a href="#maven默认web项目中的web-xml版本问题" class="headerlink" title="maven默认web项目中的web.xml版本问题"></a>maven默认web项目中的web.xml版本问题</h3><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305092045872.png" alt="image-20210822112520405"></p><p>替换为webapp3.1版本和tomcat一致(看tomcat下的webapps里面的官方案例)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee</span></span></span><br><span class="line"><span class="string"><span class="tag">                      http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;3.1&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">metadata-complete</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Welcome to Tomcat<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p>6.maven仓库的使用</p><p>地址：<a href="https://mvnrepository.com/">https://mvnrepository.com/</a></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305092046510.png" alt="image-20210822114151023"></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305092046147.png" alt="image-20210822114058324"></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305092046822.png" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-web的基本概念&quot;&gt;&lt;a href=&quot;#1-web的基本概念&quot; class=&quot;headerlink&quot; title=&quot;1.web的基本概念&quot;&gt;&lt;/a&gt;1.web的基本概念&lt;/h1&gt;&lt;h2 id=&quot;1-1前言&quot;&gt;&lt;a href=&quot;#1-1前言&quot; class=&quot;he</summary>
      
    
    
    
    <category term="JavaWeb" scheme="https://unspman.github.io/categories/JavaWeb/"/>
    
    
    <category term="JavaWeb" scheme="https://unspman.github.io/tags/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title>MySQL学习05-JDBC</title>
    <link href="https://unspman.github.io/posts/c101d20f.html"/>
    <id>https://unspman.github.io/posts/c101d20f.html</id>
    <published>2023-05-05T21:00:09.000Z</published>
    <updated>2023-12-25T00:42:40.209Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-数据库驱动"><a href="#1-数据库驱动" class="headerlink" title="1 数据库驱动"></a>1 数据库驱动</h2><p>驱动：声卡、显卡、数据库</p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305052229176.png" alt="在这里插入图片描述"></p><p>我们的程序都会通过数据库驱动，和数据库打交道！</p><h2 id="2-JDBC"><a href="#2-JDBC" class="headerlink" title="2 JDBC"></a>2 JDBC</h2><p>Sun公司为了简化开发人员对数据库的统一的操作，提供了一个（java操作数据库）规范，JDBC</p><p>这些规范的实现有具体的厂商去做</p><p>对于开发人员来说，我们只需要掌握JDBC的接口操作即可</p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305052229627.png" alt="在这里插入图片描述"></p><p>ava.sql</p><p>javax.sql</p><p>还需要导入数据库驱动包</p><h2 id="3-第一个jdbc程序"><a href="#3-第一个jdbc程序" class="headerlink" title="3 第一个jdbc程序"></a>3 第一个jdbc程序</h2><p><strong>创建测试数据库</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE jdbcStudy <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci;</span><br><span class="line">USE jdbcStudy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `users`(</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">NAME <span class="type">VARCHAR</span>(<span class="number">40</span>),</span><br><span class="line">PASSWORD <span class="type">VARCHAR</span>(<span class="number">40</span>),</span><br><span class="line">email <span class="type">VARCHAR</span>(<span class="number">60</span>),</span><br><span class="line">birthday <span class="type">DATE</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `users`(id,NAME,PASSWORD,email,birthday)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;zhansan&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;zs@sina.com&#x27;</span>,<span class="string">&#x27;1980-12-04&#x27;</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="string">&#x27;lisi&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;lisi@sina.com&#x27;</span>,<span class="string">&#x27;1981-12-04&#x27;</span>),</span><br><span class="line">(<span class="number">3</span>,<span class="string">&#x27;wangwu&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;wangwu@sina.com&#x27;</span>,<span class="string">&#x27;1979-12-04&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="1、创建一个普通的项目"><a href="#1、创建一个普通的项目" class="headerlink" title="1、创建一个普通的项目"></a><strong>1、创建一个普通的项目</strong></h3><h3 id="2、导入数据库驱动"><a href="#2、导入数据库驱动" class="headerlink" title="2、导入数据库驱动"></a><strong>2、导入数据库驱动</strong></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.chang.jdbc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="comment">//我的第一个jdbc程序</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JdbcTest02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">//1. 加载驱动</span></span><br><span class="line">        Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);<span class="comment">//固定写法</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//2. 用户信息和url</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * jdbc:mysql://：指定使用 JDBC 连接 MySQL 数据库的协议和驱动名称。</span></span><br><span class="line"><span class="comment">         * localhost:3306：指定要连接的 MySQL 服务器的主机名和端口号。默认情况下，MySQL 服务器使用 3306 端口。</span></span><br><span class="line"><span class="comment">         * database_name：指定要连接的数据库的名称。</span></span><br><span class="line"><span class="comment">         * useUnicode=true&amp;characterEncoding=utf8：指定在与数据库通信时要使用的字符集。</span></span><br><span class="line"><span class="comment">         * useSSL=true：指定使用 SSL 加密连接到 MySQL 服务器。</span></span><br><span class="line"><span class="comment">         * serverTimezone=UTC：指定 MySQL 服务器的时区。</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span><span class="string">&quot;jdbc:mysql://localhost:3306/jdbcstudy?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true&amp;serverTimezone=UTC&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;123456&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3. 连接成功，返回数据库对象  connection代表数据库</span></span><br><span class="line">        Connection connection= DriverManager.getConnection(url,name,password);</span><br><span class="line">        <span class="comment">//4. 执行SQL的对象 statement 执行SQL的对象</span></span><br><span class="line">        <span class="type">Statement</span> <span class="variable">statement</span> <span class="operator">=</span> connection.createStatement();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5. 执行SQL的对象 去执行SQL   可能存在结果，查看返回结果</span></span><br><span class="line">        String sql=<span class="string">&quot;SELECT * FROM users&quot;</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> statement.executeQuery(sql);<span class="comment">//返回的结果集,结果集中封装了我们全部查询的结果</span></span><br><span class="line">        <span class="keyword">while</span>(resultSet.next())&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;id+&quot;</span>+resultSet.getObject(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;name+&quot;</span>+resultSet.getObject(<span class="string">&quot;NAME&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;password+&quot;</span>+resultSet.getObject(<span class="string">&quot;PASSWORD&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;email+&quot;</span>+resultSet.getObject(<span class="string">&quot;email&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;birthday+&quot;</span>+resultSet.getObject(<span class="string">&quot;birthday&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//6. 释放连接</span></span><br><span class="line">        resultSet.close();</span><br><span class="line">        statement.close();</span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>步骤总结：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.加载驱动</span><br><span class="line">2.连接数据库DriverManager</span><br><span class="line">3.获取执行sql的对象statement</span><br><span class="line">4.获得返回的结果集</span><br><span class="line">5.释放连接</span><br></pre></td></tr></table></figure><p><strong>DriverManager</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//DriverManager.registerDriver(new com.mysql.jdbc.Driver());</span></span><br><span class="line">Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);<span class="comment">//固定写法</span></span><br><span class="line">Connection connection= DriverManager.getConnection(url,name,password);</span><br><span class="line"></span><br><span class="line"><span class="comment">//connection代表数据库</span></span><br><span class="line"><span class="comment">//数据库设置自动提交</span></span><br><span class="line"><span class="comment">//事务提交</span></span><br><span class="line"><span class="comment">//事务回滚</span></span><br><span class="line">connection.rollback();</span><br><span class="line">connection.commit();</span><br><span class="line">connection.setAutoCommit();</span><br></pre></td></tr></table></figure><p><strong>URL</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span><span class="string">&quot;jdbc:mysql://localhost:3306/jdbcstudy?useUnicode=true&amp;characterEncoding=utf8&amp;&amp;useSSL=false&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//mysql 默认3306</span></span><br><span class="line"><span class="comment">//协议://主机地址:端口号/数据库名？参数1&amp;参数2&amp;参数3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Oracle   1521</span></span><br><span class="line"><span class="comment">//jdbc:oralce:thin:@localhost:1521:sid</span></span><br></pre></td></tr></table></figure><p><strong>statement 执行SQL的对象 pPrepareStatement 执行SQL的对象</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">String sql=<span class="string">&quot;SELECT * FROM users&quot;</span>;<span class="comment">//编写Sql</span></span><br><span class="line"></span><br><span class="line">statement.executeQuery();</span><br><span class="line">statement.execute();</span><br><span class="line">statement.executeUpdate();<span class="comment">//更新，插入，删除，返回一个受影响的行数</span></span><br></pre></td></tr></table></figure><p><strong>ResultSet 查询的结果集，封装了所以的查询结果</strong></p><p><strong>获得指定的数据类型</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> statement.executeQuery(sql);<span class="comment">//返回的结果集,结果集中封装了我们全部查询的结果</span></span><br><span class="line">        resultSet.getObject();<span class="comment">//在不知道列类型下使用</span></span><br><span class="line">        resultSet.getString();<span class="comment">//如果知道则指定使用</span></span><br><span class="line">        resultSet.getInt();</span><br></pre></td></tr></table></figure><p><strong>遍历,指针</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">resultSet.next(); <span class="comment">//移动到下一个</span></span><br><span class="line"> resultSet.afterLast();<span class="comment">//移动到最后</span></span><br><span class="line"> resultSet.beforeFirst();<span class="comment">//移动到最前面</span></span><br><span class="line"> resultSet.previous();<span class="comment">//移动到前一行</span></span><br><span class="line"> resultSet.absolute(row);<span class="comment">//移动到指定行</span></span><br></pre></td></tr></table></figure><p><strong>释放内存</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//6. 释放连接</span></span><br><span class="line">        resultSet.close();</span><br><span class="line">        statement.close();</span><br><span class="line">        connection.close();<span class="comment">//耗资源</span></span><br></pre></td></tr></table></figure><h2 id="4-statement对象"><a href="#4-statement对象" class="headerlink" title="4 statement对象"></a>4 statement对象</h2><p>jdbc中的statement对象用于向数据库发送sql语句，想完成对数据库的增删改查，只需要通过这个对象向数据库发送增删改查语句即可。</p><p>statement对象的executeUpdate方法，用于向数据库发送增、删、改的sql语句，executeUpdate执行完后，将返回一个整数（即增删改语句导致了数据库几行发生了变化）</p><p>statement.executeQuery方法用于向数据库发生查询语句，executeQuery方法返回代表查询结果的resultSet对象</p><h3 id="4-1-CRUD操作-create"><a href="#4-1-CRUD操作-create" class="headerlink" title="4.1 CRUD操作-create"></a><strong>4.1 CRUD操作-create</strong></h3><p>使用executeUpdate(String sql)方法完成数据添加操作，示例操作：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Statement</span> <span class="variable">statement</span> <span class="operator">=</span> connection.createStatement();</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into user(...) values(...)&quot;</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> statement.executeUpdate(sql);</span><br><span class="line">        <span class="keyword">if</span>(num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;插入成功&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-2-CRUD操作-delete"><a href="#4-2-CRUD操作-delete" class="headerlink" title="4.2 CRUD操作-delete"></a><strong>4.2 CRUD操作-delete</strong></h3><p>使用executeUpdate(String sql)方法完成数据删除操作，示例操作：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Statement</span> <span class="variable">statement</span> <span class="operator">=</span> connection.createStatement();</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;delete from user where id =1&quot;</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> statement.executeUpdate(sql);</span><br><span class="line">        <span class="keyword">if</span>(num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;删除成功&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-3-CURD操作-update"><a href="#4-3-CURD操作-update" class="headerlink" title="4.3 CURD操作-update"></a><strong>4.3 CURD操作-update</strong></h3><p>使用executeUpdate(String sql)方法完成数据修改操作，示例操作：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Statement</span> <span class="variable">statement</span> <span class="operator">=</span> connection.createStatement();</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;update user set name =&#x27;&#x27; where name = &#x27;&#x27;&quot;</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> statement.executeUpdate(sql);</span><br><span class="line">        <span class="keyword">if</span>(num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;修改成功&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-4-CURD操作-read"><a href="#4-4-CURD操作-read" class="headerlink" title="4.4 CURD操作-read"></a><strong>4.4 CURD操作-read</strong></h3><p>使用executeUpdate(String sql)方法完成数据查询操作，示例操</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Statement</span> <span class="variable">statement</span> <span class="operator">=</span> connection.createStatement();</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from  user where id =1&quot;</span>;</span><br><span class="line">        ResultSet rs= statement.executeQuery(sql);</span><br><span class="line">        <span class="keyword">if</span>(rs.next())&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-5-提取工具类"><a href="#4-5-提取工具类" class="headerlink" title="4.5 提取工具类"></a><strong>4.5 提取工具类</strong></h3><p>建立一个util包，里面用来存放相同操作的代码，包括：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 用户信息和url</span><br><span class="line">- 连接数据库对象</span><br><span class="line">- 关闭资源</span><br></pre></td></tr></table></figure><p>另外，得新建一个properties文件，放在src文件夹下，用于存放用户信息以及加载驱动的实现类，包括</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">driver=com.mysql.cj.jdbc.Driver</span><br><span class="line">url=jdbc:mysql://localhost:3306/jdbcstudy?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true&amp;serverTimezone=UTC</span><br><span class="line">username=root</span><br><span class="line">password=123456</span><br></pre></td></tr></table></figure><h3 id="4-6-创建工具类"><a href="#4-6-创建工具类" class="headerlink" title="4.6 创建工具类"></a><strong>4.6 创建工具类</strong></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kuangstudy.lesson02.util;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JdbcUtil</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String driver=<span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String username=<span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String password=<span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String url=<span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">rs</span> <span class="operator">=</span> JdbcUtil.class.getClassLoader().getResourceAsStream(<span class="string">&quot;db.properties&quot;</span>);</span><br><span class="line">            <span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">            properties.load(rs);</span><br><span class="line">            driver = properties.getProperty(<span class="string">&quot;driver&quot;</span>);</span><br><span class="line">            username = properties.getProperty(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">            password = properties.getProperty(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">            url = properties.getProperty(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">            <span class="comment">//驱动只用加载一次</span></span><br><span class="line">            Class.forName(driver);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException | ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取连接数据库对象</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title function_">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">        <span class="keyword">return</span> DriverManager.getConnection(url,username,password);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//释放资源</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">release</span><span class="params">(Connection connection, Statement statement, ResultSet set)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (set != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                set.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (statement != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                statement.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-7-CRUD操作"><a href="#4-7-CRUD操作" class="headerlink" title="4.7 CRUD操作"></a><strong>4.7 CRUD操作</strong></h3><p><strong>删除：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.unspman.lesson02;</span><br><span class="line"><span class="keyword">import</span> com.unspman.lesson02.utils.JdbcUtil;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestDelete</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Statement</span> <span class="variable">statement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection = JdbcUtil.getConnection();</span><br><span class="line">            statement = connection.createStatement();</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;DELETE from users WHERE id=5&quot;</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> statement.executeUpdate(sql);</span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;删除成功！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtil.release(connection, statement, <span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>插入：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.unspman.lesson02;</span><br><span class="line"><span class="keyword">import</span> com.unspman.lesson02.utils.JdbcUtil;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestInsert</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>  &#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Statement</span> <span class="variable">statement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection = JdbcUtil.getConnection();</span><br><span class="line">            statement = connection.createStatement();</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;INSERT INTO users(`name`,`password`,`email`,`birthday`) VALUES(&#x27;zhangsan&#x27;,&#x27;232322&#x27;,&#x27;zhangsan@163.com&#x27;,&#x27;1995-08-06&#x27;),(&#x27;lisi&#x27;,&#x27;232322&#x27;,&#x27;lisi@163.com&#x27;,&#x27;2002-08-06&#x27;),(&#x27;wangwu&#x27;,&#x27;232322&#x27;,&#x27;wangwu@163.com&#x27;,&#x27;1989-08-06&#x27;),(&#x27;hanqing&#x27;,&#x27;232322&#x27;,&#x27;1438617560@qq.com&#x27;,&#x27;1995-08-06&#x27;) &quot;</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> statement.executeUpdate(sql);</span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;添加成功！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtil.release(connection,statement,<span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>修改：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.unspman.lesson02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.unspman.lesson02.utils.JdbcUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestUpdate</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Statement</span> <span class="variable">statement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection = JdbcUtil.getConnection();</span><br><span class="line">            statement = connection.createStatement();</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;UPDATE users set `name`= &#x27;UnSpMan&#x27; WHERE id=1&quot;</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> statement.executeUpdate(sql);</span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;修改成功！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtil.release(connection, statement, <span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>查找：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.unspman.lesson02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.unspman.lesson02.utils.JdbcUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestSelect</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Statement</span> <span class="variable">statement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection = JdbcUtil.getConnection();</span><br><span class="line">            statement = connection.createStatement();</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from users&quot;</span>;</span><br><span class="line">            resultSet = statement.executeQuery(sql);</span><br><span class="line">            <span class="keyword">while</span> (resultSet.next()) &#123;</span><br><span class="line">                System.out.println(resultSet.getInt(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">                System.out.println(resultSet.getString(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">                System.out.println(resultSet.getString(<span class="string">&quot;password&quot;</span>));</span><br><span class="line">                System.out.println(resultSet.getString(<span class="string">&quot;email&quot;</span>));</span><br><span class="line">                System.out.println(resultSet.getDate(<span class="string">&quot;birthday&quot;</span>));</span><br><span class="line">                System.out.println(<span class="string">&quot;=====================&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtil.release(connection, statement, resultSet);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>问题：statement编译sql时会出现sql注入问题</p><h3 id="4-8-SQL注入问题"><a href="#4-8-SQL注入问题" class="headerlink" title="4.8 SQL注入问题"></a><strong>4.8 SQL注入问题</strong></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kuangstudy.lesson02;</span><br><span class="line"> <span class="keyword">import</span> com.kuangstudy.lesson02.util.JdbcUtil;</span><br><span class="line"> <span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"> <span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"> <span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"> <span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SQL</span>注入 &#123;</span><br><span class="line">     <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">         <span class="comment">//使用字符串拼接一个or，表示有一个为真则结果为真</span></span><br><span class="line">         login(<span class="string">&quot;&#x27; or &#x27;1=1&quot;</span>,<span class="string">&quot;232322&quot;</span>);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="comment">//用户登录</span></span><br><span class="line">     <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">login</span><span class="params">(String username,String password)</span>&#123;</span><br><span class="line">         <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">         <span class="type">Statement</span> <span class="variable">statement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">         <span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">         <span class="keyword">try</span> &#123;</span><br><span class="line">             connection = JdbcUtil.getConnection();</span><br><span class="line">             statement = connection.createStatement();</span><br><span class="line">             <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from `users` where `name`=&#x27;&quot;</span>+ username+<span class="string">&quot;&#x27; and `password`=&#x27;&quot;</span>+password+<span class="string">&quot;&#x27; &quot;</span>;</span><br><span class="line">             resultSet = statement.executeQuery(sql);</span><br><span class="line">             <span class="keyword">if</span> (resultSet.next())&#123;</span><br><span class="line">                 System.out.println(<span class="string">&quot;登录成功&quot;</span>);</span><br><span class="line">             &#125;</span><br><span class="line">         &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">             e.printStackTrace();</span><br><span class="line">         &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">             JdbcUtil.release(connection,statement,resultSet);</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>解决办法，使用preparedstatement方法提前将预编译sql语句，并使用?站位符</p><h2 id="5-PreparedStatement"><a href="#5-PreparedStatement" class="headerlink" title="5 PreparedStatement"></a>5 PreparedStatement</h2><p>PreparedStatement可以防止sql注入问题，效率更高</p><p>先进行预编译sql，将要设置的字段值使用占位符</p><p>本质：预编译会将传递进来的参数包裹成字符，而单引号会被转义字符转换为空内容，有效的防止sql注入的问题</p><h3 id="5-1-PrePareDStatement写法格式-插入"><a href="#5-1-PrePareDStatement写法格式-插入" class="headerlink" title="5.1 PrePareDStatement写法格式(插入)"></a>5.1 PrePareDStatement写法格式(插入)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.unspman.lesson03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.unspman.lesson02.utils.JdbcUtil;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestInsert</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">coon</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">st</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        coon = JdbcUtil.getConnection();</span><br><span class="line">        <span class="comment">//区别</span></span><br><span class="line">        <span class="comment">// 使用?占位符代替参数</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;INSERT INTO users(`name`,`password`,`email`,`birthday`) value (?,?,?,?)&quot;</span>;</span><br><span class="line"></span><br><span class="line">        st = coon.prepareStatement(sql); <span class="comment">//预编译SQL，先写SQL，然后不执行</span></span><br><span class="line">        <span class="comment">//手动给参数赋值</span></span><br><span class="line">        st.setString(<span class="number">1</span>,<span class="string">&quot;unspman10086&quot;</span>);</span><br><span class="line">        st.setString(<span class="number">2</span>,<span class="string">&quot;123409&quot;</span>);</span><br><span class="line">        st.setString(<span class="number">3</span>,<span class="string">&quot;30644591311@qq.com&quot;</span>);</span><br><span class="line">        <span class="comment">//注意点：sql.Date  数据库     java.sql.Date()</span></span><br><span class="line">        <span class="comment">//       util.Date java     new Date().getTime() 获得时间戳</span></span><br><span class="line">        st.setDate(<span class="number">4</span>,<span class="keyword">new</span> <span class="title class_">java</span>.sql.Date(<span class="keyword">new</span> <span class="title class_">Date</span>().getTime()));</span><br><span class="line">        <span class="comment">//执行</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> st.executeUpdate();</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;插入成功！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        JdbcUtil.release(coon,st,<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5-2查询"><a href="#5-2查询" class="headerlink" title="5.2查询"></a><strong>5.2查询</strong></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from users where id=?&quot;</span>;</span><br><span class="line">            pst = connection.prepareStatement(sql);<span class="comment">//预编译语句</span></span><br><span class="line">            pst.setInt(<span class="number">1</span>,<span class="number">14</span>);</span><br><span class="line">            <span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> pst.executeQuery();</span><br><span class="line">            <span class="keyword">while</span> (resultSet.next())&#123;</span><br><span class="line">                System.out.println(resultSet.getString(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">                System.out.println(resultSet.getString(<span class="string">&quot;password&quot;</span>));</span><br><span class="line">                System.out.println(resultSet.getString(<span class="string">&quot;email&quot;</span>));</span><br><span class="line">                System.out.println(resultSet.getString(<span class="string">&quot;birthday&quot;</span>));</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><h3 id="5-3删除"><a href="#5-3删除" class="headerlink" title="5.3删除"></a><strong>5.3删除</strong></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;delete from users where id=?&quot;</span>;</span><br><span class="line">             pst = connection.prepareStatement(sql);<span class="comment">//预编译语句</span></span><br><span class="line">             pst.setInt(<span class="number">1</span>, <span class="number">8</span>);<span class="comment">//传递参数</span></span><br><span class="line">             <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> pst.executeUpdate();</span><br><span class="line">             <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                 System.out.println(<span class="string">&quot;删除成功&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="5-4修改"><a href="#5-4修改" class="headerlink" title="5.4修改"></a><strong>5.4修改</strong></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;update users set `name`=? ,`password` = ?where id=?&quot;</span>;</span><br><span class="line">             pst = connection.prepareStatement(sql);<span class="comment">//预编译语句</span></span><br><span class="line">             pst.setString(<span class="number">1</span>,<span class="string">&quot;李昂&quot;</span>);</span><br><span class="line">             pst.setString(<span class="number">2</span>,<span class="string">&quot;liang@163.com&quot;</span>);</span><br><span class="line">             pst.setInt(<span class="number">3</span>,<span class="number">6</span>);</span><br><span class="line">             <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> pst.executeUpdate();</span><br></pre></td></tr></table></figure><h3 id="5-5模拟登录测试"><a href="#5-5模拟登录测试" class="headerlink" title="5.5模拟登录测试"></a><strong>5.5模拟登录测试</strong></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from `users` where `name`=? and `password`=?&quot;</span>;</span><br><span class="line">             statement = connection.prepareStatement(sql);</span><br><span class="line">             statement.setString(<span class="number">1</span>,username);</span><br><span class="line">             statement.setString(<span class="number">2</span>,password);</span><br><span class="line">             resultSet = statement.executeQuery();</span><br></pre></td></tr></table></figure><h2 id="6使用idea连接数据库"><a href="#6使用idea连接数据库" class="headerlink" title="6使用idea连接数据库"></a>6使用idea连接数据库</h2><h3 id="6-1-打开idea-进入界面"><a href="#6-1-打开idea-进入界面" class="headerlink" title="6.1 打开idea,进入界面"></a>6.1 打开idea,进入界面</h3><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305062136163.png" alt="img"></p><h3 id="6-2-选择-号，进入选择MYSQL"><a href="#6-2-选择-号，进入选择MYSQL" class="headerlink" title="6.2 选择+号，进入选择MYSQL"></a>6.2 选择+号，进入选择MYSQL</h3><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305062136764.png" alt="img"></p><h3 id="6-3-填写用户信息（和mysql可视化软件一样）"><a href="#6-3-填写用户信息（和mysql可视化软件一样）" class="headerlink" title="6.3 填写用户信息（和mysql可视化软件一样）"></a>6.3 填写用户信息（和mysql可视化软件一样）</h3><p><img src="https://img-blog.csdnimg.cn/4c9377f61d184ce9b1222f48403e96af.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAVFRpYW1vXw==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="img"></p><h3 id="6-4-连接成功！"><a href="#6-4-连接成功！" class="headerlink" title="6.4 连接成功！"></a>6.4 连接成功！</h3><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305062137225.png" alt="img"></p><p>如果出现连接不成功的，看看是否时区问题，若是时区问题，因为数据库默认的时区比当前的时区晚8小时，所以需要在my.ini文件修改设置时区:default-time_zone=’+08:00’，之后重启mysql，之后再次连接</p><p>重启mysql，在命令行输入services.msc打开服务，选中MySQL重启服务<br><strong>连接成功之后</strong></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305062137884.png" alt="img"></p><p><strong>编写sql的地方</strong></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305062137405.png" alt="img"></p><p><strong>查看数据库的表</strong></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305062138291.png" alt="img"></p><h2 id="7-Jdbc事务"><a href="#7-Jdbc事务" class="headerlink" title="7 Jdbc事务"></a>7 Jdbc事务</h2><p>事务：要么成功，要么失败</p><p><strong>ACID原则</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">原子性：要么全部完成，要么都不完成</span><br><span class="line"></span><br><span class="line">一致性：最终的结果总数据不发生改变</span><br><span class="line"></span><br><span class="line">隔离性：多个进程互不干扰</span><br><span class="line"></span><br><span class="line">持久性：数据一旦提交不可逆，持久化到数据库</span><br></pre></td></tr></table></figure><p><strong>模拟转账事务</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//模拟转账</span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TransferDemo</span> &#123;</span><br><span class="line">     <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">         <span class="comment">//connection代表数据库</span></span><br><span class="line">         <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">         <span class="type">PreparedStatement</span> <span class="variable">st</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">         <span class="keyword">try</span> &#123;</span><br><span class="line">             connection = JdbcUtil.getConnection();</span><br><span class="line">             <span class="comment">//1.手动设置关闭自动提交事务，此时，事务自动开启</span></span><br><span class="line">             connection.setAutoCommit(<span class="literal">false</span>);</span><br><span class="line">             <span class="type">String</span> <span class="variable">sql1</span> <span class="operator">=</span> <span class="string">&quot;update account set money = money - 100 where `name` = &#x27;A&#x27;;&quot;</span>;</span><br><span class="line">             st = connection.prepareStatement(sql1);</span><br><span class="line">             st.executeUpdate();</span><br><span class="line">             <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">1</span>/<span class="number">0</span>;<span class="comment">//强制制造问题</span></span><br><span class="line">             <span class="type">String</span> <span class="variable">sql2</span> <span class="operator">=</span> <span class="string">&quot;update account set money = money + 100 where `name` = &#x27;B&#x27;;&quot;</span>;</span><br><span class="line">             st = connection.prepareStatement(sql2);</span><br><span class="line">             st.executeUpdate();</span><br><span class="line">             <span class="comment">//2.提交数据</span></span><br><span class="line">             connection.commit();</span><br><span class="line">             System.out.println(<span class="string">&quot;转账成功&quot;</span>);</span><br><span class="line">         &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">             <span class="comment">//数据出现问题，事务会自动回滚到原来的样子，这里可以不用设回滚</span></span><br><span class="line">             <span class="keyword">try</span> &#123;</span><br><span class="line">                 connection.rollback();</span><br><span class="line">             &#125; <span class="keyword">catch</span> (SQLException ex) &#123;</span><br><span class="line">                 ex.printStackTrace();</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">             JdbcUtil.release(connection,st,<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><p>问题：每次连接数据库都需要消耗大量的资源，效率低</p><p>解决：创建一个连接池。每次应用程序需要从数据库获取数据时，直接从连接池中申请一个连接使用，用完之后连接池回收连接，从而达到连接复用的效果，并减少资源消耗的目的</p><p>本质：准备一些预先的资源，过来就直接连接预先准备好的（池化技术）</p><p><strong>开源的连接池项目：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DBCP</span><br><span class="line"></span><br><span class="line">D3P0</span><br><span class="line"></span><br><span class="line">Druid</span><br></pre></td></tr></table></figure><p>使用了这些数据库连接池，我们就不需要编写连接数据库的代码</p><p><strong>DBCP</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">InputStream</span> <span class="variable">rs</span> <span class="operator">=</span> DBCPUtil.class.getClassLoader().getResourceAsStream(<span class="string">&quot;dbcp.properties&quot;</span>);</span><br><span class="line">            <span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">            properties.load(rs);</span><br><span class="line">            <span class="comment">//获取数据源 BasicDataSourceFactory  工厂：用来创建对象的</span></span><br><span class="line">                dataSource = BasicDataSourceFactory.createDataSource(properties);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-数据库驱动&quot;&gt;&lt;a href=&quot;#1-数据库驱动&quot; class=&quot;headerlink&quot; title=&quot;1 数据库驱动&quot;&gt;&lt;/a&gt;1 数据库驱动&lt;/h2&gt;&lt;p&gt;驱动：声卡、显卡、数据库&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr</summary>
      
    
    
    
    <category term="MySQL" scheme="https://unspman.github.io/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://unspman.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL学习04-md5加密/事务/索引/权限管理与备份/规范数据库设计</title>
    <link href="https://unspman.github.io/posts/ed953e1a.html"/>
    <id>https://unspman.github.io/posts/ed953e1a.html</id>
    <published>2023-05-05T19:02:26.000Z</published>
    <updated>2023-12-25T00:42:40.209Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-数据库级别的MD5加密"><a href="#1-数据库级别的MD5加密" class="headerlink" title="1 数据库级别的MD5加密"></a>1 数据库级别的MD5加密</h2><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305041852945.png" alt="img"></p><p>md5加密操作是强算法操作和不可逆的</p><p>可以在插入sql语句的时候给密码进行加密，这样更安全</p><p>MD5不可逆，具体的MD5是一样的</p><p>MD5破解原理，背后有一个字典，MD5加密后的值，加密前的值</p><p>解密：<a href="https://www.cmd5.com/">md5在线解密破解,md5解密加密</a> 但较为复杂的密码或者是加了特殊符号的或许解密不了</p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305041852339.png" alt="img"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `testmd5`(</span><br><span class="line">`id` <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">`name` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">`pwd` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line"></span><br><span class="line">)ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>UTF8</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 明文密码</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> testmd5 <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>),(<span class="number">2</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>),(<span class="number">3</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 加密</span></span><br><span class="line"><span class="keyword">UPDATE</span> testmd5 <span class="keyword">SET</span> pwd<span class="operator">=</span>MD5(pwd) <span class="keyword">WHERE</span> id <span class="operator">=</span><span class="number">1</span></span><br><span class="line"><span class="keyword">UPDATE</span> testmd5 <span class="keyword">SET</span> pwd<span class="operator">=</span>MD5(pwd) <span class="keyword">WHERE</span> id <span class="operator">!=</span><span class="number">1</span>  <span class="comment">-- 加密全部</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入时加密</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> testmd5 <span class="keyword">VALUES</span>(<span class="number">4</span>,<span class="string">&#x27;小明&#x27;</span>,MD5(<span class="string">&#x27;123456&#x27;</span>))</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> testmd5 <span class="keyword">VALUES</span>(<span class="number">5</span>,<span class="string">&#x27;红&#x27;</span>,MD5(<span class="string">&#x27;123456&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 如何校验，将用户传递过来的密码，进行MD5加密，然后对比加密后的值</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> testmd5 <span class="keyword">WHERE</span> `name`<span class="operator">=</span><span class="string">&#x27;红&#x27;</span> <span class="keyword">AND</span> pwd<span class="operator">=</span>MD5(<span class="string">&#x27;123456&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="2-事务"><a href="#2-事务" class="headerlink" title="2 事务"></a>2 事务</h2><p>要么全部执行成功，要么全部执行失败</p><ol><li>SQL执行， A给B转账 A 1000–&gt; 200 B200</li><li>SQL 执行， B收到A的钱 A800 — B400</li></ol><p><strong>事务原则：</strong></p><ul><li><strong>原子性：</strong>要么都成功，要么都失败</li><li><strong>一致性：</strong>事务前后的数据完整性要保持一致</li><li><strong>隔离性：</strong>事务产生并发时候，互不干扰</li><li><strong>持久性：</strong>事务一旦提交就不可逆转，被持久化到数据库中</li></ul><p><strong>隔离产生的问题</strong></p><ul><li><strong>脏读：</strong>一个事务读取到了另一个事务未提交的数据</li><li><p><strong>不可重复读：</strong>在一个事务内读取表中的某一行数据，多次读取的结果不同。（这个不一定是错误的，只是场合不对）</p></li><li><p><strong>幻读：</strong>在一个事务内读取到了别的事务插入的数据，导致数据前后读取不一致。（一般是行影响，多了一行）</p></li></ul><p><strong>执行事务</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- MySQL是默认开启事务自动提交的</span></span><br><span class="line"><span class="keyword">set</span> autocommit <span class="operator">=</span> <span class="number">0</span>     <span class="comment">-- 关闭</span></span><br><span class="line"><span class="keyword">set</span> autocommit <span class="operator">=</span> <span class="number">1</span>     <span class="comment">-- 开启（默认）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 手动处理事务</span></span><br><span class="line"><span class="keyword">set</span> autocommit <span class="operator">=</span> <span class="number">0</span> <span class="comment">-- 关闭自动提交</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 事务开启</span></span><br><span class="line"><span class="keyword">start</span> TRANSACTION   <span class="comment">-- 标记一个事务的开启，从这个之后的sql都在同一个事务内</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 提交：持久化（成功）</span></span><br><span class="line"><span class="keyword">commit</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">-- 回滚：回到原来的样子（失败）</span></span><br><span class="line"><span class="keyword">ROLLBACK</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 事务结束</span></span><br><span class="line"><span class="keyword">set</span> autocommit <span class="operator">=</span>    <span class="comment">-- 开启事务提交</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 了解</span></span><br><span class="line"><span class="keyword">SAVEPOINT</span> 保存点名称    <span class="comment">-- 设置一个事务的保存点</span></span><br><span class="line"><span class="keyword">ROLLBACK</span> <span class="keyword">to</span> <span class="keyword">SAVEPOINT</span> 回滚到保存点</span><br><span class="line"><span class="keyword">RELEASE</span> <span class="keyword">SAVEPOINT</span>  撤销保存点</span><br></pre></td></tr></table></figure><p>模拟转账场景</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE shop <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci</span><br><span class="line">USE shop</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `account`(</span><br><span class="line">`id` <span class="type">INT</span>(<span class="number">3</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">`name` <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">`money` <span class="type">DECIMAL</span>(<span class="number">9</span>,<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">)ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> account(`name`,`money`)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">&#x27;A&#x27;</span>,<span class="number">2000</span>),(<span class="string">&#x27;B&#x27;</span>,<span class="number">10000</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 模拟转账：事务</span></span><br><span class="line"><span class="keyword">SET</span> autocommit <span class="operator">=</span> <span class="number">0</span>; <span class="comment">-- 关闭自动提交</span></span><br><span class="line"><span class="keyword">START</span> TRANSACTION <span class="comment">-- 开启事务（一组事务）</span></span><br><span class="line"><span class="keyword">UPDATE</span> account <span class="keyword">SET</span> money <span class="operator">=</span> money<span class="number">-500</span> <span class="keyword">WHERE</span> `name` <span class="operator">=</span> <span class="string">&#x27;A&#x27;</span> <span class="comment">-- A 转账给B</span></span><br><span class="line"><span class="keyword">UPDATE</span> account <span class="keyword">SET</span> money <span class="operator">=</span> money<span class="operator">+</span><span class="number">500</span> <span class="keyword">WHERE</span> `name` <span class="operator">=</span> <span class="string">&#x27;B&#x27;</span> <span class="comment">-- B 收到钱</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COMMIT</span> ; <span class="comment">-- 提交事务</span></span><br><span class="line"><span class="keyword">ROLLBACK</span> ; <span class="comment">-- 回滚</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> autocommit<span class="operator">=</span><span class="number">1</span> <span class="comment">-- 恢复默认值</span></span><br></pre></td></tr></table></figure><h2 id="3-索引"><a href="#3-索引" class="headerlink" title="3 索引"></a>3 索引</h2><p>MySQL索引的建立对于MySQL的高效运行是最重要的，索引可以大大提高MySQL的减速速度。</p><p>索引的作用：</p><ul><li>提高查询速度</li><li>确保数据的唯一性</li><li>可以加速表和表之间的连接，实现表和表之间的参照完整性</li><li>使用分组和排序子句进行数据检索时，可以显著减少分组和排序的时间</li><li>全文检索字段进行搜索优化</li></ul><h3 id="3-1、索引的分类"><a href="#3-1、索引的分类" class="headerlink" title="3.1、索引的分类"></a>3.1、索引的分类</h3><p><strong>在一张表中，主键索引只能有一个，可以有多个唯一索引</strong></p><ul><li><strong>主键索引（PRIMARY KEY）：</strong>唯一的标识，主键不可重复，只能有一个列作为主键</li><li><p><strong>唯一索引（UNIQUE KEY）：</strong>避免重复的列出现，唯一索引可以重复，多个列都可以标识为唯一索引</p></li><li><p><strong>普通索引（KEY/INDEX）：</strong>默认的，index，key 关键字来设置</p></li><li><strong>全文索引（FULLTEXT）：</strong><ul><li>在特定的数据库引擎才有，MyISAM</li><li>快速定位数据</li></ul></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 索引的使用</span></span><br><span class="line"><span class="comment">-- 1.在创建表的时候给字段增加索引</span></span><br><span class="line"><span class="comment">-- 2.创建完毕后，增加索引</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 显示所有的索引信息</span></span><br><span class="line"><span class="keyword">SHOW</span> INDEX <span class="keyword">FROM</span> 表</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 增加一个索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表 <span class="keyword">ADD</span> FULLTEXT INDEX 索引名（字段名）</span><br><span class="line"></span><br><span class="line"><span class="comment">-- EXPLAIN 分析sql执行状况</span></span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="comment">-- 非全文索引</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-2、测试索引"><a href="#3-2、测试索引" class="headerlink" title="3.2、测试索引"></a>3.2、测试索引</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `app_user` (</span><br><span class="line">`id` <span class="type">BIGINT</span>(<span class="number">20</span>) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">`name` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">`email` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">`phone` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">`gender` TINYINT(<span class="number">4</span>) UNSIGNED <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">`password` <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">`age` TINYINT(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">`create_time` DATETIME <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line">`update_time` <span class="type">TIMESTAMP</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入100万数据</span></span><br><span class="line">DELIMITER $$ <span class="comment">--  写函数之前必写</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> mock_data()</span><br><span class="line"><span class="keyword">RETURNS</span> <span class="type">INT</span> </span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">DECLARE</span> num <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">1000000</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> i <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">WHILE i<span class="operator">&lt;</span>num DO</span><br><span class="line"><span class="comment">-- 插入语句</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> app_user(`name`,`email`,`phone`,`gender`,`password`,`age`)</span><br><span class="line"><span class="keyword">VALUE</span>(CONCAT(<span class="string">&#x27;用户&#x27;</span>,i),<span class="string">&#x27;534240118@qq.com&#x27;</span>,<span class="built_in">FLOOR</span> (CONCAT(<span class="string">&#x27;18&#x27;</span>,RAND()<span class="operator">*</span><span class="number">9999999</span>)),<span class="built_in">FLOOR</span> (RAND()<span class="operator">*</span><span class="number">2</span>),</span><br><span class="line">UUID(),<span class="built_in">FLOOR</span> (RAND()<span class="operator">*</span><span class="number">100</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> i <span class="operator">=</span> i<span class="operator">+</span><span class="number">1</span>;</span><br><span class="line"><span class="keyword">END</span> WHILE;</span><br><span class="line"><span class="keyword">RETURN</span> i;</span><br><span class="line"></span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> app_user(`name`,`email`,`phone`,`gender`,`password`,`age`)</span><br><span class="line"><span class="keyword">VALUE</span>(CONCAT(<span class="string">&#x27;用户&#x27;</span>,i),<span class="string">&#x27;534240118@qq.com&#x27;</span>,<span class="built_in">FLOOR</span> (CONCAT(<span class="string">&#x27;18&#x27;</span>,RAND()<span class="operator">*</span><span class="number">9999999</span>)),<span class="built_in">FLOOR</span> (RAND()<span class="operator">*</span><span class="number">2</span>),</span><br><span class="line">UUID(),<span class="built_in">FLOOR</span> (RAND()<span class="operator">*</span><span class="number">100</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> mock_data();</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> app_user <span class="keyword">WHERE</span> `name`<span class="operator">=</span><span class="string">&#x27;用户9999&#x27;</span> <span class="comment">-- 接近半秒</span></span><br><span class="line"></span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> app_user <span class="keyword">WHERE</span> `name`<span class="operator">=</span><span class="string">&#x27;用户9999&#x27;</span>  <span class="comment">-- 查询99999条记录</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- id _ 表名_字段名</span></span><br><span class="line"><span class="comment">-- create index on 字段</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX id_app_user_name <span class="keyword">ON</span> app_user(`name`); <span class="comment">-- 0.001 s</span></span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> app_user <span class="keyword">WHERE</span> `name`<span class="operator">=</span><span class="string">&#x27;用户9999&#x27;</span>  <span class="comment">-- 查询一条记录</span></span><br></pre></td></tr></table></figure><p><strong>索引在小数据的时候，用处不大，但是在大数据的时候，区别十分明显</strong></p><h3 id="3-3、索引原则"><a href="#3-3、索引原则" class="headerlink" title="3.3、索引原则"></a>3.3、索引原则</h3><ul><li>索引不是越多越好</li><li>不要对经常变动的数据加索引</li><li>小数据量的表不需要加索引</li><li>索引一般加在常用来查询的字段上</li></ul><p><strong>索引的数据结构</strong></p><ul><li>Hash类型的索引</li><li>Btree： 默认innodb的数据结构</li><li>阅读： <a href="http://blog.codinglabs.org/articles/theory-of-mysql-index.html">http://blog.codinglabs.org/articles/theory-of-mysql-index.html</a></li></ul><h2 id="4-权限管理和备份"><a href="#4-权限管理和备份" class="headerlink" title="4 权限管理和备份"></a>4 权限管理和备份</h2><h3 id="4-1、用户管理"><a href="#4-1、用户管理" class="headerlink" title="4.1、用户管理"></a>4.1、用户管理</h3><p>SQL命令操作</p><p>用户表：mysql.user</p><p>本质：对这张表的增删改查</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建用户  CREATE USER 用户名 IDENTIFIED BY &#x27;密码&#x27;</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> unspman IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改密码（修改当前密码）</span></span><br><span class="line"><span class="keyword">SET</span> PASSWORD <span class="operator">=</span> PASSWORD(<span class="string">&#x27;111111&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改密码（修改指定用户密码）</span></span><br><span class="line"><span class="keyword">SET</span> PASSWORD <span class="keyword">FOR</span> unspman <span class="operator">=</span> PASSWORD(<span class="string">&#x27;111111&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 重命名  rename user 原名字 to 新名字</span></span><br><span class="line">RENAME <span class="keyword">USER</span> unspman <span class="keyword">TO</span> unspman2</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 用户授权   ALL PRIVILEGES 全部的权限   库，表</span></span><br><span class="line"><span class="comment">-- ALL PRIVILEGES 除了给别人授权，其他都能干</span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> unspman2</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询权限</span></span><br><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> unspman2  <span class="comment">-- 查看指定用户的权限</span></span><br><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> root<span class="variable">@localhost</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 撤销权限 REVOKE 哪些权限，在哪个库撤销，给谁撤销</span></span><br><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">FROM</span> unspman2</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除用户</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">USER</span> unspman2</span><br></pre></td></tr></table></figure><h3 id="4-2、MySQL备份"><a href="#4-2、MySQL备份" class="headerlink" title="4.2、MySQL备份"></a>4.2、MySQL备份</h3><p>为什么需要备份？</p><ul><li>保证重要数据不丢失</li><li>数据转移</li></ul><p>MySQL数据库备份的方式</p><ul><li>直接拷贝物理文件</li><li>在SQLyog这种可视化工具中手动导出<ul><li>在响应导出的表或者库中，右键选择备份和导出</li></ul></li></ul><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305052007147.png" alt="在这里插入图片描述"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导出1张表</span></span><br><span class="line"><span class="comment"># mysqldump -h 主机 -u 用户名 -p 密码 数据库 表名 &gt; 物理磁盘位置/文件名</span></span><br><span class="line">mysqldump -hlocalhost -uroot -p123456 database1 table1 &gt;D:a.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导出多张表</span></span><br><span class="line"><span class="comment"># mysqldump -h 主机 -u 用户名 -p 密码 数据库 表1 表2 表3 &gt; 物理磁盘位置/文件名</span></span><br><span class="line">mysqldump -hlocalhost -uroot -p123456 database1 table1 table2 table3 &gt;D:b.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导出整个数据库</span></span><br><span class="line"><span class="comment"># mysqldump -h 主机 -u 用户名 -p 密码 数据库&gt; 物理磁盘位置/文件名</span></span><br><span class="line">mysqldump -hlocalhost -uroot -p123456 database1 &gt;D:c.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入</span></span><br><span class="line"><span class="comment"># 登录的情况下，切换到指定的数据库</span></span><br><span class="line"><span class="comment"># source 备份文件</span></span><br><span class="line"><span class="built_in">source</span> d:/a.sql</span><br></pre></td></tr></table></figure><h2 id="5-规范数据库设计"><a href="#5-规范数据库设计" class="headerlink" title="5 规范数据库设计"></a>5 规范数据库设计</h2><h3 id="5-1数据库设计"><a href="#5-1数据库设计" class="headerlink" title="5.1数据库设计"></a>5.1数据库设计</h3><p><strong>当数据库比较复杂的时候，我们就需要设计了</strong></p><p>糟糕的数据库设计：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 数据冗余，浪费空间</span><br><span class="line">- 数据库插入和删除都会麻烦，异常【屏蔽使用物理外键】</span><br><span class="line">- 程序的性能差</span><br></pre></td></tr></table></figure><p>良好的数据库设计</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 节省内存空间</span><br><span class="line">- 保证数据库的完整性</span><br><span class="line">- 方便我们开发系统</span><br></pre></td></tr></table></figure><p>在软件开发中，关于数据库的设计</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- 分析需求：分析业务和需要处理的数据库的需求</span><br><span class="line">- 概要设计：设计关系图E-R图</span><br></pre></td></tr></table></figure><p><strong>设计数据库的步骤（个人博客）：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1.收集信息，分析需求 eg:</span><br><span class="line">  - 用户表（用户登录注销，用户的个人信息，写博客，创建分类）</span><br><span class="line">  - 分类表（文章分类，谁创建的）</span><br><span class="line">  - 文章表（文章信息）</span><br><span class="line">  - 友链表（友链信息）</span><br><span class="line">  - 自定义表（系统信息，某个关键字，或者某些主要的字段）</span><br><span class="line">  - 说说表（发表心情，id，content，time）</span><br><span class="line">2.标识实体（把需求落地到每个字段）</span><br><span class="line">3.标识实体之间的关系</span><br><span class="line">  - 写博客user–&gt;blog</span><br><span class="line">  - 创建分类user–&gt;category</span><br><span class="line">  - 关注user–&gt;user</span><br><span class="line">  - 友链–&gt;links</span><br><span class="line">  - 评论–&gt;user–&gt;user</span><br></pre></td></tr></table></figure><h3 id="5-2、三大范式"><a href="#5-2、三大范式" class="headerlink" title="5.2、三大范式"></a>5.2、三大范式</h3><p>为什么需要数据规范化？</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.信息重复</span><br><span class="line">2.更新异常</span><br><span class="line">3.插入异常</span><br><span class="line">4.删除异常</span><br><span class="line">  - 无法正常显示异常</span><br><span class="line">  - 丢失有效的信息</span><br></pre></td></tr></table></figure><p><strong>三大范式：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.第一范式：</span><br><span class="line">  - 原子性：保证每一列不可再分</span><br><span class="line">2.第二范式：</span><br><span class="line">  - 前提：满足第一范式</span><br><span class="line">  - 每张表只描述一件事情</span><br><span class="line">3.第三范式：</span><br><span class="line">  - 前提：满足第一范式和第二范式</span><br><span class="line">  - 需要确保数据表中的每一列数据都和主键直接相关，而不是间接相关</span><br></pre></td></tr></table></figure><p><strong>规范性和性能的问题</strong></p><p>关联查询的表，不得超过三张表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- 考虑商业化的需求和目标（成本和用户体验）数据库的性能更加重要</span><br><span class="line">- 在规范性能的问题的时候，需要适当的考虑一下，规范性</span><br><span class="line">- 故意给某些表加一些冗余的阻断（多表，变成单表）</span><br><span class="line">- 故意增加一些计算列（从大数据量降低为小数据量的查询：索引）</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-数据库级别的MD5加密&quot;&gt;&lt;a href=&quot;#1-数据库级别的MD5加密&quot; class=&quot;headerlink&quot; title=&quot;1 数据库级别的MD5加密&quot;&gt;&lt;/a&gt;1 数据库级别的MD5加密&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://cdn.jsde</summary>
      
    
    
    
    <category term="MySQL" scheme="https://unspman.github.io/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://unspman.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL学习03-数据库操作与管理/DDL/DML/DQL/DCL/函数</title>
    <link href="https://unspman.github.io/posts/3c9b0abd.html"/>
    <id>https://unspman.github.io/posts/3c9b0abd.html</id>
    <published>2023-04-30T19:04:10.000Z</published>
    <updated>2023-12-25T00:42:40.209Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-数据库语言"><a href="#1-数据库语言" class="headerlink" title="1.数据库语言"></a>1.数据库语言</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">DDL 数据库定义语言</span><br><span class="line"></span><br><span class="line">DML 数据库操作管理语言</span><br><span class="line"></span><br><span class="line">DQL 数据库查询语言</span><br><span class="line"></span><br><span class="line">DCL 数据库控制语言</span><br></pre></td></tr></table></figure><h2 id="2、操作数据库"><a href="#2、操作数据库" class="headerlink" title="2、操作数据库"></a>2、操作数据库</h2><p>操作数据库–&gt;操作数据库中的表–&gt;操作数据库中表的数据</p><p><strong>MySQL不分大小写</strong></p><h3 id="2-1、操作数据库（了解）"><a href="#2-1、操作数据库（了解）" class="headerlink" title="2.1、操作数据库（了解）"></a>2.1、操作数据库（了解）</h3><h4 id="1、创建数据库"><a href="#1、创建数据库" class="headerlink" title="1、创建数据库"></a>1、创建数据库</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE [IF NOT EXISTS] li; --[]可选  &#123;&#125;必选</span><br><span class="line">CREATE DATABASE `数据库名` CHARACTER SET utf8 COLLATE utf8_general_ci</span><br></pre></td></tr></table></figure><h4 id="2、删除数据库"><a href="#2、删除数据库" class="headerlink" title="2、删除数据库"></a>2、删除数据库</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP DATABASE [IF EXISTS] LI;</span><br></pre></td></tr></table></figure><h4 id="3、使用数据库"><a href="#3、使用数据库" class="headerlink" title="3、使用数据库"></a>3、使用数据库</h4><h4 id="4、查找数据库"><a href="#4、查找数据库" class="headerlink" title="4、查找数据库"></a>4、查找数据库</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW DATABASES  --查看所有数据库</span><br></pre></td></tr></table></figure><p>可以对照sqlyog可视化历史记录查看sql<br>固定的语法或关键字必须要强行记住！</p><h3 id="2-2、数据库的列（数据）类型"><a href="#2-2、数据库的列（数据）类型" class="headerlink" title="2.2、数据库的列（数据）类型"></a>2.2、数据库的列（数据）类型</h3><p><strong>数值</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tinyint 十分小的数据 1个字节</span><br><span class="line">smallint 较小的数据 2个字节</span><br><span class="line">mediumint 中等大小的数据 3个字节</span><br><span class="line">int 标准的整数 4个字节 常用的</span><br><span class="line">bigint 较大的数据 8个字节</span><br><span class="line">float 浮点数 4个字节</span><br><span class="line">double 浮点数 8个字节</span><br><span class="line">decimal 字符串形式的浮点数 金融计算的时候一般使用decimal DECIMAL(P,D);(p是有效数字的长度、D是小数点后的位数)</span><br></pre></td></tr></table></figure><p><strong>字符串</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">char 字符串固定大小为 0-255</span><br><span class="line">varchar 可变字符串 0-65535 常用变量string</span><br><span class="line">tinytext 微型文本 2^8-1</span><br><span class="line">text 文本串 2^16-1 保存大文本</span><br></pre></td></tr></table></figure><p><strong>时间日期</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data YYYY-MM-DD,日期格式</span><br><span class="line">time HH:mm:ss 时间格式</span><br><span class="line">datetime YYYY-MM-DD HH:mm:ss 最常用的时间格式</span><br><span class="line">timestamp 时间戳 1970.1.1 到现在的毫秒数 较为常用</span><br><span class="line">year 年份表示</span><br></pre></td></tr></table></figure><p><strong>null</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">没有值，未知</span><br><span class="line">主要是要使用null进行运算，结果为null</span><br></pre></td></tr></table></figure><h3 id="2-3、数据库的字段属性（重点）"><a href="#2-3、数据库的字段属性（重点）" class="headerlink" title="2.3、数据库的字段属性（重点）"></a>2.3、数据库的字段属性（重点）</h3><p>每一个表，都必须存在以下5个字段！未来做项目用的，表示一个记录存在的意义。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">id 主键</span><br><span class="line">version 乐观锁</span><br><span class="line">is_delect 伪删除</span><br><span class="line">gmt_create 创建时间</span><br><span class="line">gmt_update 修改时间</span><br><span class="line">Unsigned：</span><br><span class="line">无符号的整数</span><br><span class="line">声明了该列不能为负数</span><br><span class="line">Zerofill</span><br><span class="line">0填充的（不能是负数）</span><br><span class="line">不足的位数，使用0来填充 int（3），5–&gt;005</span><br><span class="line">    自增(auto_increment)：</span><br><span class="line">通常理解为自增，自动在上一条记录的基础上+1（默认）</span><br><span class="line">通常用来设计唯一的主键，必须是整数类型；</span><br><span class="line">可以自动以设计主键自增的起始值和步长；</span><br><span class="line">非空：NULL not null</span><br><span class="line">假设设置为not null，如果不给他赋值，就会报错；</span><br><span class="line">null，如果不填写值，默认就是null。</span><br><span class="line">默认：</span><br><span class="line">设置默认的值</span><br><span class="line">如果不指定该列的值，则会有默认的值！</span><br></pre></td></tr></table></figure><h3 id="2-4、创建数据库表（重点）"><a href="#2-4、创建数据库表（重点）" class="headerlink" title="2.4、创建数据库表（重点）"></a>2.4、创建数据库表（重点）</h3><p><strong>格式</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE [IF NOT EXISTS] `表名`(</span><br><span class="line">`字段名` 列类型 [属性] [索引] [注释],</span><br><span class="line">`字段名` 列类型 [属性] [索引] [注释],</span><br><span class="line">`字段名` 列类型 [属性] [索引] [注释],</span><br><span class="line">........ </span><br><span class="line"> `字段名` 列类型 [属性] [索引] [注释],   </span><br><span class="line">  PRIMARY KEY(`id`)</span><br><span class="line">)[表类型][表字符集设置][注释]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">-- 目标：创建一个school数据库</span><br><span class="line">-- 创建学生表(列、字段)  使用SQL创建</span><br><span class="line">-- 学号int  登录密码varchar(20),性别(2),出生如期(datatime),家庭住址，email</span><br><span class="line">-- 注意点：使用(),表的名称和字段尽量使用 ``括起来</span><br><span class="line">-- AUTO_INCREMENT  自增</span><br><span class="line">-- 字符串使用 &#x27;&#x27; 单引号括起来</span><br><span class="line">-- 所有语句后面加 , (英文的), 最后一个不用加</span><br><span class="line">-- PRIMARY KEY 主键，一般一个表只有一个唯一的主键，建议写在最后面</span><br><span class="line">CREATE TABLE IF NOT EXISTS `student` (    </span><br><span class="line">`id` INT(4) NOT NULL AUTO_INCREMENT COMMENT &#x27;学号&#x27;,</span><br><span class="line"> `name` VARCHAR(20) NOT NULL DEFAULT &#x27;匿名&#x27; COMMENT &#x27;姓名&#x27;,</span><br><span class="line"> `sex` VARCHAR(2) NOT NULL DEFAULT &#x27;男&#x27; COMMENT &#x27;性别&#x27;,</span><br><span class="line">  `pwd` VARCHAR(20) NOT NULL DEFAULT &#x27;123456&#x27; COMMENT &#x27;密码&#x27;,</span><br><span class="line">`birthday` DATETIME DEFAULT NULL COMMENT &#x27;生日&#x27;,</span><br><span class="line">`address` VARCHAR(20) DEFAULT NULL COMMENT &#x27;家庭住址&#x27;,</span><br><span class="line">`email` VARCHAR(20) DEFAULT NULL COMMENT &#x27;邮箱&#x27;, </span><br><span class="line"> PRIMARY KEY(`id`)</span><br><span class="line">)ENGINE=INNODB DEFAULT CHARSET=utf8</span><br></pre></td></tr></table></figure><p><strong>常用命令</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SHOW CREATE DATABASE school -- 查看创建数据库的语句</span><br><span class="line">SHOW CREATE TABLE student -- 查看student数据表的定义语句</span><br><span class="line">DESC student -- 显示表的结构</span><br></pre></td></tr></table></figure><h3 id="2-5、数据库表的类型"><a href="#2-5、数据库表的类型" class="headerlink" title="2.5、数据库表的类型"></a>2.5、数据库表的类型</h3><p><strong>1.数据库引擎engine</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INNODB：默认使用</span><br><span class="line">MYISAM：以前使用</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">INNODB</th><th style="text-align:center">MYISAM</th></tr></thead><tbody><tr><td style="text-align:center">事务支持</td><td style="text-align:center">支持</td><td style="text-align:center">不支持</td></tr><tr><td style="text-align:center">数据行锁定</td><td style="text-align:center">支持</td><td style="text-align:center">不支持</td></tr><tr><td style="text-align:center">外键</td><td style="text-align:center">支持</td><td style="text-align:center">不支持</td></tr><tr><td style="text-align:center">全文索引</td><td style="text-align:center">不支持</td><td style="text-align:center">支持</td></tr><tr><td style="text-align:center">表空间大小</td><td style="text-align:center">较大</td><td style="text-align:center">较小</td></tr></tbody></table></div><p><strong>2.常规使用操作</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MYISAM：节约空间，速度较快</span><br><span class="line">INNODB：安全性高，事物的处理，多表多用户操作</span><br></pre></td></tr></table></figure><p>所有的数据库文件都在date目录下，本质还是文件的存储！</p><p><strong>3.MySQL引擎在物理文件上的区别</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">INNODB：在数据库中只有一个**.frm文件，以及上级目录下的ibdata1文件</span><br><span class="line">MYISAM：对应的文件</span><br><span class="line">*.frm表结构的定义文件</span><br><span class="line">*.MYD数据文件 (data)</span><br><span class="line">*.MYI索引文件 (index)</span><br></pre></td></tr></table></figure><p>设置数据库表的字符集编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CHARSET=utf8</span><br></pre></td></tr></table></figure><p>不设置的话是MySQL的默认字符集编码（不支持中文）。</p><p>在my.ini中配置默认的编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">charter-set-server=utf8</span><br></pre></td></tr></table></figure><h3 id="2-6、修改删除表"><a href="#2-6、修改删除表" class="headerlink" title="2.6、修改删除表"></a>2.6、修改删除表</h3><p>修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">-- 修改表名：ALTER TABLE 旧表名  RENAME AS 新表名</span><br><span class="line">ALTER TABLE teacher RENAME AS teacher1</span><br><span class="line"></span><br><span class="line">-- 增加表的字段: ALTER TABLE  表名  ADD 字段名 列类型</span><br><span class="line">ALTER TABLE teacher ADD age INT(11)</span><br><span class="line"></span><br><span class="line">-- 修改表的字段  </span><br><span class="line">-- ALTER TABLE 表名 MODIFY 字段名 列类型[]</span><br><span class="line">-- ALTER TABLE 表名 CHANGE 旧名字  新名字 列类型[]</span><br><span class="line">ALTER TABLE teacher1 MODIFY age VARCHAR(10)-- modify不用来重命名，只能修改字段类型和约束</span><br><span class="line">ALTER TABLE teacher1 CHANGE age age1 INT(1)-- change用来字段重命名，不能修改字段类型和约束 </span><br><span class="line"></span><br><span class="line"> -- 删除表的字段:ALTER TABLE 表名 DROP 字段名</span><br><span class="line"> ALTER TABLE teacher1 DROP age1</span><br><span class="line"> </span><br><span class="line"> -- 删除表(如果表存在再删除)</span><br><span class="line">DROP TABLE IF EXISTS treacher1</span><br></pre></td></tr></table></figure><p>注意点：</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">`` 字段名，使用这个符号包裹</span><br><span class="line">/**/ 注释</span><br><span class="line">sql 关键字大小写不敏感，建议写小写</span><br><span class="line">所有的符号都用英文</span><br></pre></td></tr></table></figure><h3 id="3、MySQL数据管理"><a href="#3、MySQL数据管理" class="headerlink" title="3、MySQL数据管理"></a>3、MySQL数据管理</h3><h4 id="3-1、外键（了解）"><a href="#3-1、外键（了解）" class="headerlink" title="3.1、外键（了解）"></a>3.1、外键（了解）</h4><p><strong>方式一：在创建表的时候，增加约束（麻烦复杂）</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE IF NOT EXISTS `grade` (</span><br><span class="line">`gradeid` INT(10) NOT NULL AUTO_INCREMENT COMMENT &#x27;年级id&#x27;,</span><br><span class="line">`gradename` VARCHAR(10) NOT NULL COMMENT &#x27;年级姓名&#x27;,</span><br><span class="line">PRIMARY KEY(`gradeid`)</span><br><span class="line">)ENGINE=INNODB DEFAULT CHARSET=utf8</span><br><span class="line"></span><br><span class="line">-- 学生表的gradeid字段 要去引用年级表的 gradeid</span><br><span class="line">-- 定义外键key-- KEY `FK_外键名` (`外键名`)</span><br><span class="line">-- 给这个外键添加约束（执行引用） references 引用</span><br><span class="line">-- CONSTRAINT `FK_外键名` FOREIGN KEY (`外键名`) REFERENCES `外键的表名`(`外键名`)</span><br><span class="line"></span><br><span class="line">CREATE TABLE IF NOT EXISTS `student` (</span><br><span class="line">    `id` INT(4) NOT NULL AUTO_INCREMENT COMMENT &#x27;学号&#x27;,    </span><br><span class="line">    `name` VARCHAR(20) NOT NULL DEFAULT &#x27;匿名&#x27; COMMENT &#x27;姓名&#x27;,    </span><br><span class="line">    `sex` VARCHAR(2) NOT NULL DEFAULT &#x27;男&#x27; COMMENT &#x27;性别&#x27;,    </span><br><span class="line">    `gradeid` INT(10) NOT NULL COMMENT &#x27;学生的年级&#x27;,    </span><br><span class="line">    `pwd` VARCHAR(20) NOT NULL DEFAULT &#x27;123456&#x27; COMMENT &#x27;密码&#x27;,    </span><br><span class="line">    `birthday` DATETIME DEFAULT NULL COMMENT &#x27;生日&#x27;,    </span><br><span class="line">    `address` VARCHAR(20) DEFAULT NULL COMMENT &#x27;家庭住址&#x27;,    </span><br><span class="line">    `email` VARCHAR(20) DEFAULT NULL COMMENT &#x27;邮箱&#x27;,    </span><br><span class="line">    PRIMARY KEY(`id`),   </span><br><span class="line">    KEY `FK_gradeid` (`gradeid`),   </span><br><span class="line">    CONSTRAINT `FK_gradeid` FOREIGN KEY (`gradeid`) REFERENCES `grade`(`gradeid`)  </span><br><span class="line">    )ENGINE=INNODB DEFAULT CHARSET=utf8</span><br><span class="line">  </span><br></pre></td></tr></table></figure><p>删除有外键关系表的时候，必须要先删除引用外键表的表(从表)，再删除外键的表(被引用的表，主表)</p><p><strong>方式二：创建表成功后，添加外键约束</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- 添加外键约束</span><br><span class="line">-- ALTER TABLE 表 ADD CONSTRAINT `FK_外键名` FOREIGN KEY (`外键名`) REFERENCES `外键的表名(被引用的表)`(`外键名`)</span><br><span class="line"></span><br><span class="line">ALTER TABLE `student`</span><br><span class="line">ADD CONSTRAINT `FK_gradeid` FOREIGN KEY(`gradeid`) REFERENCES `grade`(`gradeid`) </span><br></pre></td></tr></table></figure><p>以上操作都是物理外键，数据库级别的外键，不建议使用（避免数据库过多造成困扰，了解即可）</p><p><strong>最佳实践</strong></p><ul><li>数据库就是单纯的表，只用来存数据，只有行（数据）和列（字段）</li><li>我们想使用多张表的数据，想使用外键（用程序去实现）</li></ul><h4 id="3-2、DML语言（全部记住）"><a href="#3-2、DML语言（全部记住）" class="headerlink" title="3.2、DML语言（全部记住）"></a>3.2、DML语言（全部记住）</h4><p><strong>数据库的意义：数据存储，数据管理</strong></p><p>DML语言：数据操作语言</p><ul><li>insert 添加</li><li>update 修改</li><li>delete 删除</li></ul><h4 id="3-3、添加"><a href="#3-3、添加" class="headerlink" title="3.3、添加"></a>3.3、添加</h4><p><strong>insert</strong></p><p><strong>插入语句：insert into <code>表名</code> （[<code>字段1</code>,<code>字段2</code>,<code>字段3</code>]） Vaules(‘值1’),(‘值2’),(‘值3’，…)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">-- 插入语句（添加）-- </span><br><span class="line">-- insert into `表名`([`字段1`,`字段2`,`字段3`]) values(&#x27;值1&#x27;),(&#x27;值2&#x27;),(&#x27;值3&#x27;,...)</span><br><span class="line"></span><br><span class="line">INSERT INTO `grade`(`gradename`) VALUES(&#x27;大一&#x27;)-- 由于主键自增我们可以省略给主键插入的语句，（如果不写表的字段，他就会一一匹配所有字段）</span><br><span class="line">-- 一般插入语句，我们要数据和字段一一对应！</span><br><span class="line">-- 插入多个字段，用逗号隔开</span><br><span class="line">INSERT INTO `grade`(`gradename`)VALUES(&#x27;大二&#x27;),(&#x27;大三&#x27;)-- 给student表插入多个数据</span><br><span class="line">-- 1.给一个字段插入一个数据INSERT INTO `student`(`name`)VALUES(&#x27;张三&#x27;)</span><br><span class="line">-- 2.给两个字段插入两个数据INSERT INTO `student`(`name`,`sex`)VALUES(&#x27;李四&#x27;,&#x27;女&#x27;)</span><br><span class="line">-- 3.给四个字段插入四个数据</span><br><span class="line">INSERT INTO `student`(`name`,`sex`,`pwd`,`birthday`)</span><br><span class="line">VALUES(&#x27;王五&#x27;,&#x27;男&#x27;,&#x27;5efwgw&#x27;,&#x27;2018-1-9&#x27;)</span><br><span class="line">-- 4.给一个字段插入两个数据 (),(),...</span><br><span class="line">INSERT INTO `student`(`name`)</span><br><span class="line">VALUES(&#x27;李1&#x27;),(&#x27;李2&#x27;)</span><br><span class="line">-- 5.给多个字段插入多个数据 </span><br><span class="line">-- 每一个要插入的字段(插入多个数据),都对应着一个括号: values(&#x27;&#x27;,&#x27;&#x27;,&#x27;&#x27;,...)  括号的值也要一一对应</span><br><span class="line">-- 一个字段要插入n个数据，就对应n个括号</span><br><span class="line">INSERT INTO `student`(`name`,`sex`,`pwd`,`address`)</span><br><span class="line">VALUES(&#x27;李3&#x27;,&#x27;女&#x27;,&#x27;jfow&#x27;,&#x27;深圳&#x27;),(&#x27;李4&#x27;,&#x27;男&#x27;,&#x27;whjgona&#x27;,&#x27;南昌&#x27;),(&#x27;李5&#x27;,&#x27;女&#x27;,&#x27;wghio&#x27;,&#x27;广州&#x27;)</span><br></pre></td></tr></table></figure><p>注意事项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">字段和字段之间使用英文逗号隔开</span><br><span class="line">字段是可以省略的，但是后面的值必须要一一对应，不能少</span><br><span class="line">可以同时插入多条数据，values后面的值，需要使用 , 隔开即可VALUES(),(),…</span><br><span class="line">每一个要插入的字段(多个字段),都对应着一个括号: values(’’,’’,’’,…) 括号的值也要一一对应</span><br><span class="line">一个字段要插入多个数据，就对应多个括号</span><br></pre></td></tr></table></figure><h4 id="3-4、修改"><a href="#3-4、修改" class="headerlink" title="3.4、修改"></a>3.4、修改</h4><p><strong>update 修改 谁（条件） set 原来的值 = 新值</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-- 修改语句</span><br><span class="line">-- UPDATE `表名` SET `字段名`=&#x27;value&#x27;,[`字段名`=&#x27;value&#x27;,...] where [条件]</span><br><span class="line"></span><br><span class="line">-- 修改学员的名字，带了条件 WHERE id = 1</span><br><span class="line">UPDATE `student` SET `name`=&#x27;玛丽&#x27; WHERE id = 1;</span><br><span class="line">-- 不指定条件的情况下，会改动所有的表的字段值</span><br><span class="line">UPDATE `student` SET `name`=&#x27;java&#x27;</span><br><span class="line">-- 修改多个属性 用逗号隔开</span><br><span class="line">UPDATE `student` SET `name`=&#x27;jack&#x27;,`email`=&#x27;4125255@qq.com&#x27; WHERE id = 1;</span><br></pre></td></tr></table></figure><p>条件：where 字句 运算符 id = 某个值，&gt; 某个值，在某个区间内修改</p><p>where 条件 返回的是一个boolean值</p><div class="table-container"><table><thead><tr><th>操作符</th><th>含义</th><th>范围</th><th>结果</th></tr></thead><tbody><tr><td>=</td><td>等于</td><td>1=2</td><td>false</td></tr><tr><td>&lt;&gt;或！=</td><td>不等于</td><td>1&lt;&gt;2</td><td>true</td></tr><tr><td>&gt;=</td><td>大于等于</td><td>1&gt;=2</td><td>false</td></tr><tr><td>&lt;=</td><td>小于等于</td><td>1&lt;=2</td><td>true</td></tr><tr><td>&lt;</td><td>小于</td><td>1&lt;2</td><td>true</td></tr><tr><td>&gt;</td><td>大于</td><td>1&gt;3</td><td>false</td></tr><tr><td>between…and…</td><td>闭合区间包含</td><td>[2,3]</td><td></td></tr><tr><td>and</td><td>和</td><td>多个条件判断</td><td>一假则假</td></tr><tr><td>or</td><td>或</td><td>多个条件判断</td><td>一真则真</td></tr></tbody></table></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">-- 使用BETWEEN ... AND ... 修改语句 语法 WHERE 字段名 BETWEEN &#x27;value1&#x27; AND &#x27;value2&#x27;;</span><br><span class="line">UPDATE `student` SET`pwd`=&#x27;999999&#x27;</span><br><span class="line">WHERE `id` BETWEEN &#x27;2&#x27; AND &#x27;6&#x27;;</span><br><span class="line"></span><br><span class="line">-- 使用&lt;&gt; 修改语句 语法：WHERE 字段名 &lt;&gt; &#x27;value&#x27;;  &lt;&gt; 不等于</span><br><span class="line">UPDATE `student` SET`name`=&#x27;张三&#x27;,`sex`=&#x27;男&#x27;</span><br><span class="line">WHERE `name` &lt;&gt; &#x27;李6&#x27;;</span><br><span class="line"></span><br><span class="line">-- 使用 AND 修改语句 语法：WHERE 条件1 AND 条件2</span><br><span class="line">UPDATE `student` SET`name`=&#x27;李四&#x27;</span><br><span class="line">WHERE `sex`=&#x27;男&#x27; AND `id` BETWEEN &#x27;2&#x27; AND &#x27;5&#x27;;</span><br><span class="line"></span><br><span class="line">-- 使用OR 修改语句 语法：WHERE 条件1 OR 条件2;</span><br><span class="line">UPDATE `student` SET`sex`=&#x27;女&#x27;</span><br><span class="line">WHERE `name`=&#x27;李四&#x27; OR `name`=&#x27;李6&#x27;;</span><br></pre></td></tr></table></figure><h3 id="3-5、删除"><a href="#3-5、删除" class="headerlink" title="3.5、删除"></a>3.5、删除</h3><p><strong>delete</strong></p><p><strong>语法：delete from 表名 [where 条件]</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- 删除指定数据</span><br><span class="line">-- delete from 表名 [where 条件]</span><br><span class="line"></span><br><span class="line">DELETE FROM `student` WHERE id=1;</span><br><span class="line">-- 字符串类型的值要用&#x27;&#x27;</span><br></pre></td></tr></table></figure><p><strong>truncate</strong></p><p>作用：完全清空一个数据库，表的<strong>结构和索引约束不会变</strong>！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 清空student表</span><br><span class="line">TRUNCATE `student`</span><br></pre></td></tr></table></figure><p><strong>delete与truncate的区别</strong></p><ul><li>相同点：都能删除数据，都不会删除表结构</li><li>不同点：<ul><li>truncate重新设置自增列，计数器会归零</li><li>truncate不会影响事务</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-- 测试delete 和 truncate 的区别</span><br><span class="line">CREATE TABLE `test`(</span><br><span class="line">`id` INT(2) NOT NULL AUTO_INCREMENT,</span><br><span class="line">`color` VARCHAR(10) NOT NULL,</span><br><span class="line">PRIMARY KEY(`id`)</span><br><span class="line">)ENGINE=INNODB DEFAULT CHARSET=utf8INSERT </span><br><span class="line"></span><br><span class="line">INTO `test`(`color`)</span><br><span class="line">VALUES(&#x27;1&#x27;),(&#x27;2&#x27;),(&#x27;3&#x27;)</span><br><span class="line"></span><br><span class="line">DELETE FROM `test` -- 不会影响自增</span><br><span class="line">TRUNCATE `test`   -- 自增会归零</span><br></pre></td></tr></table></figure><p>了解即可：delete删除的问题，重启数据库现象</p><ul><li>innodb自增列会从1开始（存储在内存中，断电即失）</li><li>Mysiam继续从上一个自增量开始（存在文件中，不会丢失）</li></ul><h3 id="4-DQL查询数据（重点）"><a href="#4-DQL查询数据（重点）" class="headerlink" title="4.DQL查询数据（重点）"></a>4.DQL查询数据（重点）</h3><p>（Data Query Language ：数据查询语言）</p><ul><li>所有的查询操作都要用它 select</li><li>简单的查询，复杂的查询，他都可以做</li><li>数据库中最核心的语言，最重要的语句</li><li>使用频率最高的语句</li></ul><h3 id="4-1-select完整的语法"><a href="#4-1-select完整的语法" class="headerlink" title="4.1 select完整的语法"></a>4.1 select完整的语法</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[<span class="keyword">left</span> <span class="operator">|</span> <span class="keyword">right</span> <span class="operator">|</span> <span class="keyword">inner</span> <span class="keyword">join</span> table_name]  <span class="comment">--联合查询</span></span><br><span class="line">[<span class="keyword">where</span> ...]  <span class="comment">-- 指定结果满足的条件</span></span><br><span class="line">[<span class="keyword">group</span> <span class="keyword">by</span> ...]  <span class="comment">-- 指定结果按照哪几个字段来分组</span></span><br><span class="line">[<span class="keyword">having</span>]    <span class="comment">-- 过滤分组的记录必须满足的次要条件</span></span><br><span class="line">[<span class="keyword">order</span> <span class="keyword">by</span> ...]  <span class="comment">-- 指定查询记录按一个或多个条件排序</span></span><br><span class="line">[limit &#123;[<span class="keyword">offset</span>,]row_count <span class="operator">|</span> row_countOFFSET <span class="keyword">offset</span>&#125;];</span><br><span class="line"><span class="comment">-- 指定查询的记录从哪条至哪条</span></span><br><span class="line"><span class="comment">-- 以上语法顺序不能排错、顺序很重要</span></span><br></pre></td></tr></table></figure><h3 id="4-2-指定查询字段"><a href="#4-2-指定查询字段" class="headerlink" title="4.2 指定查询字段"></a>4.2 指定查询字段</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询student表中的所有学生</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询指定的字段</span></span><br><span class="line"><span class="keyword">select</span> `id`,`password` <span class="keyword">from</span> student</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 给查询的字段起一个别名  as可以给字段其别名   也可以给表起别名</span></span><br><span class="line"><span class="keyword">select</span> `id`,`pssword` <span class="keyword">as</span> `psw` <span class="keyword">from</span> student <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 函数concat（a,b) 拼接字符串</span></span><br><span class="line"><span class="keyword">select</span> concat(<span class="string">&#x27;姓名：&#x27;</span>,`name`)  <span class="keyword">from</span> student </span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>去重：distinct</strong></p><p>作用：去除select查询出来的结果中重复的数据，重复的数据只显示一条</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询一下有哪些同学参加了考试，成绩</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">result</span> <span class="comment">-- 查询全部的考试成绩</span></span><br><span class="line"><span class="comment">-- 查询有哪些同学参加了考试</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentNo` <span class="keyword">FROM</span> <span class="keyword">result</span> </span><br><span class="line"><span class="comment">-- 发现重复数据，去重</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> `studentNo` <span class="keyword">FROM</span> <span class="keyword">result</span> </span><br></pre></td></tr></table></figure><p><strong>数据库的列（表达式）</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查看数据库的版本</span></span><br><span class="line"><span class="keyword">SELECT</span> VERSION()    函数</span><br><span class="line"><span class="comment">-- 通过select可以进行简单的计算</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">100</span><span class="operator">*</span><span class="number">3</span><span class="number">-1</span> <span class="keyword">as</span> 计算结果;  计算表达式</span><br><span class="line"><span class="comment">-- 查询自增的步长</span></span><br><span class="line"><span class="keyword">SELECT</span> @<span class="variable">@auto</span>_increment_increment;  变量</span><br><span class="line"><span class="comment">-- 给所有学生的成绩加1分</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentresult`<span class="operator">+</span><span class="number">1</span> <span class="keyword">FROM</span> <span class="keyword">result</span>;</span><br></pre></td></tr></table></figure><p>数据库中的表达式：文本值，列，null，函数，计算表达式，系统变量</p><ul><li><strong>语法：select 表达式 from 表名</strong></li></ul><h3 id="4-3-where条件语句"><a href="#4-3-where条件语句" class="headerlink" title="4.3 where条件语句"></a>4.3 where条件语句</h3><p>搜索的一个或多个条件为真，返回的结果为真，在mysql中表示检索到了</p><p><strong>逻辑运算符</strong></p><div class="table-container"><table><thead><tr><th style="text-align:left">运算符</th><th style="text-align:center">语法</th><th>描述</th></tr></thead><tbody><tr><td style="text-align:left">逻辑与    and  &amp;&amp;</td><td style="text-align:center">a and b    a &amp;&amp; b</td><td>两个为真，结果为真</td></tr><tr><td style="text-align:left">逻辑或    or  \</td><td style="text-align:center">\</td><td></td><td>a or b    a \</td><td>\</td><td>b</td><td>一个为真，结果为真</td></tr><tr><td style="text-align:left">逻辑非    not  !</td><td style="text-align:center">not a    !a</td><td>取反操作</td></tr><tr><td style="text-align:left">模糊查询(区间查询)</td><td style="text-align:center">between…and…</td><td>两个为真，结果为真</td></tr></tbody></table></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询所有学生的成绩</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentresult` <span class="keyword">from</span> <span class="keyword">result</span>;</span><br><span class="line"><span class="comment">-- and &amp;&amp;查询90 -100分的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentresult` <span class="keyword">from</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">WHERE</span> studentresult<span class="operator">&gt;=</span><span class="number">90</span> <span class="keyword">and</span> studentresult<span class="operator">&lt;=</span><span class="number">100</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentresult` <span class="keyword">from</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">WHERE</span> studentresult<span class="operator">&gt;=</span><span class="number">90</span> <span class="operator">&amp;&amp;</span> studentresult<span class="operator">&lt;=</span><span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- or ||查询90 -100分的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentresult` <span class="keyword">from</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">WHERE</span> studentresult<span class="operator">&lt;=</span><span class="number">60</span> <span class="keyword">or</span> studentresult<span class="operator">&gt;=</span><span class="number">90</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentresult` <span class="keyword">from</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">WHERE</span> studentresult<span class="operator">&lt;=</span><span class="number">60</span> <span class="operator">||</span> studentresult<span class="operator">&gt;=</span><span class="number">90</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">-- not  !查询学号除了1000的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentresult` <span class="keyword">from</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">not</span> studentno<span class="operator">=</span><span class="number">1000</span>;</span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentresult` <span class="keyword">from</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">WHERE</span> studentno <span class="operator">!=</span><span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line"> <span class="comment">-- between and 查询90 -100分的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentresult` <span class="keyword">from</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">WHERE</span> studentresult <span class="keyword">between</span> <span class="number">90</span> <span class="keyword">and</span> <span class="number">100</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>模糊查询,比较运算符</strong></p><div class="table-container"><table><thead><tr><th>运算符</th><th>语法</th><th>描述</th></tr></thead><tbody><tr><td>是否为空    IS NULL</td><td>a is null</td><td>如果操作符为null，结果返回true</td></tr><tr><td>是否不为空    IS NOT NULL</td><td>a is not null</td><td>如果操作符不为null，结果返回true</td></tr><tr><td>区间判断    BETWEEN</td><td>between a and b</td><td>如果区间存在，结果返回true</td></tr><tr><td>模糊查询    LIKE</td><td>a like b</td><td>如果操作符a像b，结果返回为true</td></tr><tr><td>具体查询    IN</td><td>in(a,b)</td><td>如果包含了a,b，结果返回为true</td></tr></tbody></table></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 非空判断</span></span><br><span class="line"><span class="comment">-- IS NULL判断地址为空的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentname` <span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">WHERE</span> address <span class="keyword">is</span> <span class="keyword">NULL</span> <span class="keyword">OR</span> address<span class="operator">=</span><span class="string">&#x27;&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">--  IS NOT NULL判断地址不为空的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentname` <span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">WHERE</span> address <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">NULL</span> <span class="keyword">AND</span> `address` <span class="operator">!=</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- BETWEEN查询学号在1005~1015之间的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentname` <span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">WHERE</span> `studentno` <span class="keyword">BETWEEN</span> <span class="number">1005</span> <span class="keyword">AND</span> <span class="number">1015</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- LIKE查询姓赵的学生 like &#x27;%&#x27; 表示查询任意字符  &#x27;_&#x27; 表示查询一个字符</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentname` <span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">WHERE</span> `studentname` <span class="keyword">LIKE</span> <span class="string">&#x27;赵%&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- LIKE查询姓名带有强的学生 like &#x27;%&#x27; 表示查询任意字符  &#x27;_&#x27; 表示查询一个字符</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentname` <span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">WHERE</span> `studentname` <span class="keyword">LIKE</span> <span class="string">&#x27;%强%&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- IN查询学号有1001,1006,1009的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentname` <span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">WHERE</span> `studentno` <span class="keyword">in</span>(<span class="number">1001</span>,<span class="number">1006</span>,<span class="number">1009</span>)</span><br></pre></td></tr></table></figure><p>注意:在sql中，字符串没有值不一定是为null，也可以是空字符串</p><h3 id="4-4-联表查询"><a href="#4-4-联表查询" class="headerlink" title="4.4 联表查询"></a>4.4 联表查询</h3><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305031955207.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305031956605.png" alt="在这里插入图片描述"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span>联表查询 <span class="keyword">join</span> <span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span><span class="operator">=</span></span><br><span class="line"><span class="comment">-- 查询参加考试的同学 （学号，姓名，考试编号，分数）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student </span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">result</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1. 分析需求，分析查询的字段来自哪些表</span></span><br><span class="line"><span class="comment">2.确定使用哪种连接查询？7种</span></span><br><span class="line"><span class="comment">确定交叉点（这两个表中哪个数据是相同的）</span></span><br><span class="line"><span class="comment">判断的条件： 学生表中 studentNo = 成绩表中 studentNo </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- JION（表） ON （判断的条件）连接查询</span></span><br><span class="line"><span class="comment">-- where 等值查询</span></span><br><span class="line"><span class="comment">-- INNER JOIN</span></span><br><span class="line"><span class="keyword">SELECT</span> studentNo,studentName,SubjectNo,StudentResult</span><br><span class="line"><span class="keyword">FROM</span> student <span class="keyword">AS</span> s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> <span class="keyword">AS</span> r</span><br><span class="line"><span class="keyword">WHERE</span> s.studentNo<span class="operator">=</span>r.studentNo</span><br><span class="line"></span><br><span class="line"><span class="comment">-- Right Join</span></span><br><span class="line"><span class="keyword">SELECT</span> s.studentNo,studentName,SubjectNo,StudentResult</span><br><span class="line"><span class="keyword">FROM</span> student <span class="keyword">AS</span> s</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> <span class="keyword">AS</span> r</span><br><span class="line"><span class="keyword">ON</span> s.studentNo <span class="operator">=</span> r.studentNo</span><br><span class="line"></span><br><span class="line"><span class="comment">-- LEFT Join</span></span><br><span class="line"><span class="keyword">SELECT</span> s.studentNo,studentName,SubjectNo,StudentResult</span><br><span class="line"><span class="keyword">FROM</span> student <span class="keyword">AS</span> s</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> <span class="keyword">AS</span> r</span><br><span class="line"><span class="keyword">ON</span> s.studentNo <span class="operator">=</span> r.studentNo</span><br></pre></td></tr></table></figure><p>思路分析</p><ol><li>分析需求，查询的字段设计到哪些表</li><li>确定要哪种连接</li><li>判断交叉点，作为条件</li></ol><p>联表查询有7中，但只需要知道一下三个就行</p><ul><li>inner join 两表连接的相同数据</li><li>right join 以右表为基准查询</li><li>left join 以右表为基准查询</li></ul><div class="table-container"><table><thead><tr><th>连接</th><th>原理</th></tr></thead><tbody><tr><td>inner join</td><td>如果表中至少有一个匹配，就返回行</td></tr><tr><td>right join</td><td>会从右表返回所有的值，即使左表没有匹配</td></tr><tr><td>left join</td><td>会从左表返回所有的值，即使右表没有匹配</td></tr></tbody></table></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">语法:</span><br><span class="line"></span><br><span class="line">查询字段 from 表1 left join 表2 on 交叉条件</span><br><span class="line"></span><br><span class="line">查询字段 from 表1 right join 表2 on 交叉条件</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 自连接：自己表和自己表进行连接，核心：一张表拆分为两张一样的表即可</span></span><br><span class="line"><span class="keyword">SELECT</span> a.`categoryname`<span class="keyword">as</span> 父类, b.`categoryname` <span class="keyword">as</span> 子类</span><br><span class="line"><span class="keyword">FROM</span> category <span class="keyword">as</span> a,category <span class="keyword">as</span> b</span><br><span class="line"><span class="keyword">WHERE</span> a.categoryid<span class="operator">=</span>b.pid</span><br></pre></td></tr></table></figure><h3 id="4-5分页和排序"><a href="#4-5分页和排序" class="headerlink" title="4.5分页和排序"></a>4.5分页和排序</h3><ul><li>order by 排序<ul><li>升序 ASC</li><li>降序 DESC</li></ul></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询参加考试的同学，包含的信息包括学号，姓名，科目名，分数（以分数升序展示）</span></span><br><span class="line"><span class="keyword">SELECT</span> s.studentno,studentname,subjectname,studentresult</span><br><span class="line"><span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">ON</span> s.studentno<span class="operator">=</span>r.studentno</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">JOIN</span> `subject` sub</span><br><span class="line"><span class="keyword">on</span> r.subjectno<span class="operator">=</span>sub.subjectno</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> studentresult <span class="keyword">ASC</span></span><br><span class="line"><span class="comment">-- 查询参加考试的同学，包含的信息包括学号，姓名，科目名，分数（以分数降序展示）</span></span><br><span class="line"><span class="keyword">SELECT</span> s.studentno,studentname,subjectname,studentresult</span><br><span class="line"><span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">ON</span> s.studentno<span class="operator">=</span>r.studentno</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">JOIN</span> `subject` sub</span><br><span class="line"><span class="keyword">on</span> r.subjectno<span class="operator">=</span>sub.subjectno</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> studentresult <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure><ul><li>limit(起始下标，页面大小) 分页<ul><li>起始下标=(第几页面数-1) *页面大小 pageIndex</li><li>页面大小 pageSize</li><li>总页数=总数据条数 / 页面大小 pageCounts</li></ul></li></ul><p>分页的操作必须放在最后</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询参加考试的同学，包含的信息包括学号，姓名，科目名，分数（以分数降序展示）</span></span><br><span class="line"><span class="comment">-- LIMIT 起始下标,页面大小</span></span><br><span class="line"><span class="comment">-- 查询前面六位的同学</span></span><br><span class="line"><span class="keyword">SELECT</span> s.studentno,studentname,subjectname,studentresult</span><br><span class="line"><span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">ON</span> s.studentno<span class="operator">=</span>r.studentno</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">JOIN</span> `subject` sub</span><br><span class="line"><span class="keyword">on</span> r.subjectno<span class="operator">=</span>sub.subjectno</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> studentresult <span class="keyword">DESC</span></span><br><span class="line">LIMIT <span class="number">0</span>,<span class="number">6</span></span><br><span class="line"><span class="comment">-- 查询考试成绩前十名的同学（学号，姓名，成绩）</span></span><br><span class="line"><span class="keyword">SELECT</span> s.studentno,studentname,studentresult</span><br><span class="line"><span class="keyword">from</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">on</span> s.studentno<span class="operator">=</span>r.studentno</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> studentresult <span class="keyword">DESC</span></span><br><span class="line">LIMIT <span class="number">0</span>,<span class="number">10</span></span><br><span class="line"><span class="comment">-- 查询考试成绩大于80分，并且排在前六名的同学（学号，姓名，成绩）</span></span><br><span class="line"><span class="keyword">SELECT</span> s.studentno,studentname,studentresult</span><br><span class="line"><span class="keyword">from</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">on</span> s.studentno<span class="operator">=</span>r.studentno</span><br><span class="line"><span class="keyword">WHERE</span> studentresult<span class="operator">&gt;</span><span class="number">80</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> studentresult <span class="keyword">DESC</span></span><br><span class="line">limit <span class="number">0</span>,<span class="number">6</span></span><br></pre></td></tr></table></figure><h3 id="4-6子查询"><a href="#4-6子查询" class="headerlink" title="4.6子查询"></a>4.6子查询</h3><p>where(这个值是计算出来的)</p><p>本质：where里面嵌套一个子查询语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询参加高等数学考试的学生（学号，姓名。科目编号，成绩）,降序排列</span></span><br><span class="line"><span class="comment">-- 方式一：连接查询</span></span><br><span class="line"><span class="keyword">SELECT</span> s.studentno,studentname,r.subjectno,studentresult</span><br><span class="line"><span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">on</span> s.studentno<span class="operator">=</span>r.studentno</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `subject`sub</span><br><span class="line"><span class="keyword">on</span> sub.subjectno<span class="operator">=</span>r.subjectno</span><br><span class="line"><span class="keyword">WHERE</span> subjectname<span class="operator">=</span><span class="string">&#x27;高等数学-1&#x27;</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> studentresult <span class="keyword">DESC</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 方式二：子查询</span></span><br><span class="line"><span class="keyword">SELECT</span> s.studentno,studentname,r.subjectno,studentresult</span><br><span class="line"><span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">on</span> s.studentno<span class="operator">=</span>r.studentno</span><br><span class="line"><span class="keyword">WHERE</span> subjectno<span class="operator">=</span>(</span><br><span class="line"><span class="keyword">SELECT</span> subjectno <span class="keyword">from</span> `subject` <span class="keyword">WHERE</span> subjectname<span class="operator">=</span><span class="string">&#x27;高等数学-1&#x27;</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> studentresult <span class="keyword">DESC</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 查询分数不小于80的学生的学号，姓名</span></span><br><span class="line"><span class="keyword">SELECT</span> s.studentno,studentname</span><br><span class="line"><span class="keyword">from</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">on</span> s.studentno<span class="operator">=</span>r.studentno</span><br><span class="line"><span class="keyword">WHERE</span> studentresult<span class="operator">&gt;=</span><span class="number">80</span></span><br><span class="line"><span class="comment">-- 查询参加高等数学-1分数不小于80的学生的学号，姓名</span></span><br><span class="line"><span class="keyword">SELECT</span> s.studentno,studentname</span><br><span class="line"><span class="keyword">from</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">on</span> s.studentno<span class="operator">=</span>r.studentno</span><br><span class="line"><span class="keyword">WHERE</span> studentresult<span class="operator">&gt;=</span><span class="number">80</span></span><br><span class="line"> <span class="keyword">and</span> </span><br><span class="line">subjectno<span class="operator">=</span>(</span><br><span class="line"><span class="keyword">SELECT</span> subjectno <span class="keyword">from</span> `subject` <span class="keyword">WHERE</span> subjectname<span class="operator">=</span><span class="string">&#x27;高等数学-1&#x27;</span></span><br><span class="line">)</span><br><span class="line"><span class="comment">-- 查询参加高等数学-1分数不小于80的学生的学号，姓名</span></span><br><span class="line"><span class="comment">-- 嵌套查询(由里及外)</span></span><br><span class="line"><span class="keyword">SELECT</span> studentno,studentname</span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">WHERE</span> studentno <span class="keyword">in</span>(</span><br><span class="line"><span class="keyword">SELECT</span> studentno <span class="keyword">FROM</span> <span class="keyword">result</span> <span class="keyword">WHERE</span> studentresult<span class="operator">&gt;=</span><span class="number">80</span></span><br><span class="line"> <span class="keyword">and</span> </span><br><span class="line">subjectno<span class="operator">=</span>(</span><br><span class="line"><span class="keyword">SELECT</span> subjectno <span class="keyword">from</span> `subject` <span class="keyword">WHERE</span> subjectname<span class="operator">=</span><span class="string">&#x27;高等数学-1&#x27;</span></span><br><span class="line">))</span><br><span class="line"><span class="comment">-- 查询参加高等数学-1，前5名同学的信息（学号，姓名，成绩）</span></span><br><span class="line"><span class="comment">-- 联表查询</span></span><br><span class="line"><span class="keyword">SELECT</span> s.studentno,studentname,studentresult</span><br><span class="line"><span class="keyword">from</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">on</span> s.studentno<span class="operator">=</span>r.studentno</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `subject` sub</span><br><span class="line"><span class="keyword">ON</span> r.subjectno<span class="operator">=</span>sub.subjectno</span><br><span class="line"><span class="keyword">WHERE</span> subjectname<span class="operator">=</span><span class="string">&#x27;高等数学-1&#x27;</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> studentresult <span class="keyword">DESC</span></span><br><span class="line">LIMIT <span class="number">0</span>,<span class="number">5</span></span><br><span class="line"><span class="comment">-- 查询参加高等数学-1，前5名同学的信息（学号，姓名，成绩）</span></span><br><span class="line"><span class="comment">-- 子查询</span></span><br><span class="line"><span class="keyword">SELECT</span> s.studentno,studentname,studentresult</span><br><span class="line"><span class="keyword">from</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">on</span> s.studentno<span class="operator">=</span>r.studentno</span><br><span class="line"><span class="keyword">WHERE</span> subjectno<span class="operator">=</span> (</span><br><span class="line"><span class="keyword">SELECT</span> subjectno <span class="keyword">from</span> `subject` <span class="keyword">WHERE</span> subjectname<span class="operator">=</span><span class="string">&#x27;高等数学-1&#x27;</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> studentresult <span class="keyword">DESC</span></span><br><span class="line">LIMIT <span class="number">0</span>,<span class="number">5</span></span><br></pre></td></tr></table></figure><h2 id="5、MySQL函数"><a href="#5、MySQL函数" class="headerlink" title="5、MySQL函数"></a>5、MySQL函数</h2><h4 id="5-1、常用函数（不常用）"><a href="#5-1、常用函数（不常用）" class="headerlink" title="5.1、常用函数（不常用）"></a>5.1、常用函数（不常用）</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 数学运算</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">ABS</span>(<span class="number">-8</span>)   <span class="comment">-- 绝对值</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">ceiling</span>(<span class="number">9.4</span>) <span class="comment">-- 向上取整</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">floor</span>(<span class="number">9.4</span>)  <span class="comment">-- 向下取整</span></span><br><span class="line"><span class="keyword">select</span> rand()  <span class="comment">-- 返回0-1随机数</span></span><br><span class="line"><span class="keyword">select</span>  sign(<span class="number">-10</span>) <span class="comment">-- 判断一个数的符号，负数返回-1，正数返回1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 字符串函数</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">char_length</span>(<span class="string">&#x27;abcdesg&#x27;</span>)   <span class="comment">-- 返回字符串的长度</span></span><br><span class="line"><span class="keyword">select</span>  concat(<span class="string">&#x27;我的数字：&#x27;</span>,<span class="string">&#x27;123&#x27;</span>) <span class="comment">-- 拼接字符串</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">insert</span>(<span class="string">&#x27;java&#x27;</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;abcd&#x27;</span>)  <span class="comment">-- 从某个位置开始替换某个长度</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">upper</span>(<span class="string">&#x27;abc&#x27;</span>)  <span class="comment">-- 转换成大写</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">Lower</span>(<span class="string">&#x27;ABC&#x27;</span>)  <span class="comment">-- 转换成小写</span></span><br><span class="line"><span class="keyword">select</span> replace(<span class="string">&#x27;坚持就能胜利&#x27;</span>,<span class="string">&#x27;坚持&#x27;</span>,<span class="string">&#x27;努力&#x27;</span>)  <span class="comment">-- 替换，坚持替换成努力</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询姓狂的同学，改成姓周的</span></span><br><span class="line"><span class="keyword">select</span> replace(name,<span class="string">&#x27;狂&#x27;</span>,<span class="string">&#x27;周&#x27;</span>)<span class="keyword">from</span> student <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;狂%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 时间跟日期函数（记住）</span></span><br><span class="line"><span class="comment">-- 获取当前日期</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">CURRENT_DATE</span>()</span><br><span class="line"><span class="comment">-- 获取当前日期</span></span><br><span class="line"><span class="keyword">select</span> CURDATE()</span><br><span class="line"><span class="comment">-- 获取当前日期时间</span></span><br><span class="line"><span class="keyword">select</span> NOW()</span><br><span class="line"><span class="comment">-- 获取本地时间</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">LOCALTIME</span>()</span><br><span class="line"><span class="comment">-- 获取系统时间</span></span><br><span class="line"><span class="keyword">select</span> SYSDATE()</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">YEAR</span>(NOW())</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MONTH</span>(NOW())</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DAY</span>(NOW())</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">HOUR</span>(NOW())</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MINUTE</span>(NOW())</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SECOND</span>(NOW())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 系统</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">SYSTEM_USER</span>()  <span class="comment">-- 获取本机服务器名字</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">USER</span>()</span><br><span class="line"><span class="keyword">select</span> VERSION()</span><br></pre></td></tr></table></figure><h4 id="5-2聚合函数"><a href="#5-2聚合函数" class="headerlink" title="5.2聚合函数"></a>5.2聚合函数</h4><div class="table-container"><table><thead><tr><th>函数名</th><th>描述</th></tr></thead><tbody><tr><td>SUM()</td><td>求和</td></tr><tr><td>AVG()</td><td>求平均值</td></tr><tr><td>COUNT()</td><td>求总数</td></tr><tr><td>MAX()</td><td>求最大值</td></tr><tr><td>MIN()</td><td>求最小值</td></tr></tbody></table></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">SUM</span>(studentresult) <span class="keyword">as</span> 总和 <span class="keyword">from</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(studentresult) <span class="keyword">as</span> 平均值 <span class="keyword">from</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(studentresult) <span class="keyword">as</span> 最大值 <span class="keyword">from</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MIN</span>(studentresult) <span class="keyword">as</span> 最小值 <span class="keyword">from</span> <span class="keyword">result</span></span><br><span class="line"><span class="comment">-- 求指定字段的总条数。不会查出null的值</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">count</span>(studentresult) <span class="keyword">as</span> 最小值 <span class="keyword">from</span> <span class="keyword">result</span></span><br><span class="line"><span class="comment">-- 求表中所有数据的总条数。会查出null的值</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 最小值 <span class="keyword">from</span> <span class="keyword">result</span></span><br><span class="line"><span class="comment">-- 求表中所有数据的总条数。会查出null的值</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">as</span> 最小值 <span class="keyword">from</span> <span class="keyword">result</span></span><br><span class="line"><span class="comment">-- group by 分组计算</span></span><br><span class="line"><span class="keyword">SELECT</span> SubjectName, <span class="built_in">AVG</span>(Student1), <span class="built_in">MAX</span>(student1),<span class="built_in">MIN</span>(student1)</span><br><span class="line"><span class="keyword">FROM</span> <span class="keyword">result</span> <span class="keyword">as</span> r</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `subject` <span class="keyword">as</span> b</span><br><span class="line"><span class="keyword">on</span> r.SubjectNo <span class="operator">=</span> sub.SubjectNo</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> r.SubjectNo</span><br><span class="line"></span><br><span class="line"><span class="comment">-- having 筛选分组结果，之所以不能用where是应为先执行where，再执行group by，然后执行having</span></span><br><span class="line"><span class="keyword">SELECT</span> `name`, <span class="built_in">AVG</span>(grad) <span class="keyword">as</span> 平均分,<span class="built_in">MAX</span>(grad),<span class="built_in">MIN</span>(grad)</span><br><span class="line"><span class="keyword">FROM</span> a</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> b</span><br><span class="line"><span class="keyword">on</span> a.ID <span class="operator">=</span> b.A_ID</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> a.ID </span><br><span class="line"><span class="keyword">HAVING</span> 平均分<span class="operator">&gt;=</span><span class="number">80</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-数据库语言&quot;&gt;&lt;a href=&quot;#1-数据库语言&quot; class=&quot;headerlink&quot; title=&quot;1.数据库语言&quot;&gt;&lt;/a&gt;1.数据库语言&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl</summary>
      
    
    
    
    <category term="MySQL" scheme="https://unspman.github.io/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://unspman.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL学习02-安装MySQL\MySQLyog\java数据库驱动jar包</title>
    <link href="https://unspman.github.io/posts/99b4003e.html"/>
    <id>https://unspman.github.io/posts/99b4003e.html</id>
    <published>2023-04-30T18:58:59.000Z</published>
    <updated>2023-12-25T00:42:40.209Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、安装MySQL"><a href="#1、安装MySQL" class="headerlink" title="1、安装MySQL"></a>1、安装MySQL</h2><p>安装建议：</p><ul><li>尽量不要使用exe</li><li>尽可能使用压缩包安装</li></ul><p><strong>安装操作步骤</strong></p><p><a href="https://blog.csdn.net/weixin_43579015/article/details/117228159?ops_request_misc=%7B%22request%5Fid%22%3A%22168283460816800227426149%22%2C%22scm%22%3A%2220140713.130102334..%22%7D&amp;request_id=168283460816800227426149&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-2-117228159-null-null.142^v86^wechat,239^v2^insert_chatgpt&amp;utm_term=mysql安装配置教程&amp;spm=1018.2226.3001.4187">mysql8.0.25安装配置教程(windows 64位)最详细安装教程图解</a></p><h2 id="2、安装MySQLyog"><a href="#2、安装MySQLyog" class="headerlink" title="2、安装MySQLyog"></a>2、安装MySQLyog</h2><p><a href="https://blog.csdn.net/qq_43541746/article/details/123186058?ops_request_misc=%7B%22request%5Fid%22%3A%22168285273916800213061526%22%2C%22scm%22%3A%2220140713.130102334..%22%7D&amp;request_id=168285273916800213061526&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-123186058-null-null.142^v86^wechat,239^v2^insert_chatgpt&amp;utm_term=sqlyog安装教程&amp;spm=1018.2226.3001.4187">SQLyog详细安装教程</a></p><h4 id="1-百度网盘链接："><a href="#1-百度网盘链接：" class="headerlink" title="1.百度网盘链接："></a>1.百度网盘链接：</h4><h4 id="https-pan-baidu-com-s-1FEE-UF8-2-4lOxCUvk42VQ"><a href="#https-pan-baidu-com-s-1FEE-UF8-2-4lOxCUvk42VQ" class="headerlink" title="https://pan.baidu.com/s/1FEE-UF8-2-4lOxCUvk42VQ"></a><a href="https://pan.baidu.com/s/1FEE-UF8-2-4lOxCUvk42VQ">https://pan.baidu.com/s/1FEE-UF8-2-4lOxCUvk42VQ</a></h4><p>提取码：al90 </p><h4 id="2-将压缩包下载后解压，右键选择使用管理员身份运行安装包"><a href="#2-将压缩包下载后解压，右键选择使用管理员身份运行安装包" class="headerlink" title="2.将压缩包下载后解压，右键选择使用管理员身份运行安装包"></a>2.将压缩包下载后解压，右键选择使用管理员身份运行安装包</h4><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202304301918975.png" alt="在这里插入图片描述"></p><h4 id="3-选择语言，可以选中文"><a href="#3-选择语言，可以选中文" class="headerlink" title="3.选择语言，可以选中文"></a>3.选择语言，可以选中文</h4><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202304301921537.png" alt="在这里插入图片描述"></p><h4 id="4-接着就点击“下一步”，然后勾选“接受条款”"><a href="#4-接着就点击“下一步”，然后勾选“接受条款”" class="headerlink" title="4.接着就点击“下一步”，然后勾选“接受条款”"></a>4.接着就点击“下一步”，然后勾选“接受条款”</h4><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202304301922808.png" alt="在这里插入图片描述"></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202304301922139.png" alt="在这里插入图片描述"></p><h4 id="5-选择“下一步”，之后可以选择安装目录"><a href="#5-选择“下一步”，之后可以选择安装目录" class="headerlink" title="5.选择“下一步”，之后可以选择安装目录"></a>5.选择“下一步”，之后可以选择安装目录</h4><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202304301922253.png" alt="在这里插入图片描述"></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202304301922602.png" alt="在这里插入图片描述"></p><h4 id="6-完成安装，点击“下一步”"><a href="#6-完成安装，点击“下一步”" class="headerlink" title="6.完成安装，点击“下一步”"></a>6.完成安装，点击“下一步”</h4><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202304301923494.png" alt="在这里插入图片描述"></p><h4 id="7-点击“完成”"><a href="#7-点击“完成”" class="headerlink" title="7.点击“完成”"></a>7.点击“完成”</h4><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202304301924078.png" alt="在这里插入图片描述"></p><h4 id="8-弹出密钥验证"><a href="#8-弹出密钥验证" class="headerlink" title="8.弹出密钥验证"></a>8.弹出密钥验证</h4><p>名称：cr173<br>证书密钥：ec38d297-0543-4679-b098-4baadf91f983<br>（可以在网上随便搜一下）</p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202304301924065.png" alt="在这里插入图片描述"></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202304301924574.png" alt="在这里插入图片描述"></p><p>完成注册。</p><h4 id="9-如下图"><a href="#9-如下图" class="headerlink" title="9.如下图"></a>9.如下图</h4><p>（1）点击新建<br>（2）名字随意<br>（3）密码就是mysql的密码<br>（4）端口一般都是3306不用动</p><p>可以点击测试连接或者连接</p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202304301925047.png" alt="在这里插入图片描述"></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202304301925539.png" alt="在这里插入图片描述"></p><p>如图就成功了。</p><h2 id="3-java数据库驱动jar包"><a href="#3-java数据库驱动jar包" class="headerlink" title="3.java数据库驱动jar包"></a>3.java数据库驱动jar包</h2><h3 id="3-1第一步"><a href="#3-1第一步" class="headerlink" title="3.1第一步"></a>3.1第一步</h3><ul><li>点击进入<a href="https://dev.mysql.com/downloads/">mysql jar包下载官网</a></li></ul><p><strong>jar包下载及导入：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305052211040.png" alt="在这里插入图片描述"></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305052213521.png" alt="在这里插入图片描述"></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305052214306.png" alt="在这里插入图片描述"></p><p>将下载好的压缩包进行解压：</p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305052215117.png" alt="在这里插入图片描述"></p><p>解压之后下图就是连接数据库所用到的jar包：</p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305052216081.png" alt="在这里插入图片描述"></p><p>1.将jar包<strong>复制粘贴到IDEA所用的项目</strong>下，放置jar包的目录可以是自己新建的，也可以和项目同在一个目录下。</p><p>2.然后再：右键选择添加到<strong>add as Library</strong>下：</p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305052216996.png" alt="在这里插入图片描述"></p><p><strong>代码编写：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">jdbcDemo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Statement</span> <span class="variable">state</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//2.注册驱动</span></span><br><span class="line">            Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//3.获取数据库连接对象</span></span><br><span class="line">            conn = DriverManager.getConnection(<span class="string">&quot;jdbc:mysql://localhost:3306/zqq?serverTimezone=GMT%2B8&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;root&quot;</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//4.定义sql语句</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;update integral set stu_name=&#x27;老黄666&#x27; where id = &#x27;1&#x27;&quot;</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//5.获取执行sql的对象 Statement</span></span><br><span class="line">            state = conn.createStatement();</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//执行sql</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> state.executeUpdate(sql);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//7.处理结果</span></span><br><span class="line">            System.out.println(count);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (state!=<span class="literal">null</span>)&#123;</span><br><span class="line">                    <span class="comment">//8.释放资源</span></span><br><span class="line">                    state.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                throwables.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (conn!=<span class="literal">null</span>)&#123;</span><br><span class="line">                    conn.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                throwables.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：mysql 5之后的驱动jar包可以省略注册驱动编写的步骤。之前的需要要写上。</strong></p><p><strong>连接成功后的操作结果：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202305052217077.png" alt="在这里插入图片描述"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1、安装MySQL&quot;&gt;&lt;a href=&quot;#1、安装MySQL&quot; class=&quot;headerlink&quot; title=&quot;1、安装MySQL&quot;&gt;&lt;/a&gt;1、安装MySQL&lt;/h2&gt;&lt;p&gt;安装建议：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;尽量不要使用exe&lt;/li&gt;
&lt;li&gt;尽可能使</summary>
      
    
    
    
    <category term="MySQL" scheme="https://unspman.github.io/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://unspman.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL学习01(MySQL介绍)</title>
    <link href="https://unspman.github.io/posts/3712bf53.html"/>
    <id>https://unspman.github.io/posts/3712bf53.html</id>
    <published>2023-04-29T17:03:48.000Z</published>
    <updated>2023-12-25T00:42:40.209Z</updated>
    
    <content type="html"><![CDATA[<p><strong>官网：<a href="https://www.Mysql.com">https://www.Mysql.com</a></strong></p><h2 id="1、初始MySQL"><a href="#1、初始MySQL" class="headerlink" title="1、初始MySQL"></a>1、初始MySQL</h2><p>javaEE：企业级java开发 Web</p><p>前端（页面：展示，数据！）</p><p>后台（连接点：连接数据库JDBC，连接前端（控制，控制视图跳转，和给前端传递数据））</p><p>数据库（存数据，Txt，Excel，word）</p><h3 id="1-1、为什么学习数据库"><a href="#1-1、为什么学习数据库" class="headerlink" title="1.1、为什么学习数据库"></a>1.1、为什么学习数据库</h3><p>1.岗位需求<br>现在的世界，大数据时代 得数据者得天下<br>2.被迫需求：存数据<br>数据库是所有软件体系中最核心得存在 DBA</p><h3 id="1-2、什么是数据库"><a href="#1-2、什么是数据库" class="headerlink" title="1.2、什么是数据库"></a>1.2、什么是数据库</h3><p>数据库（DB，DataBase）</p><p>概念:数据仓库，软件，安装在操作系统（window，linux，mac，…）之上！SQL，可以存储大量得数据，500万数据</p><p>作用：存储数据，管理数据</p><h3 id="1-3、数据库分类"><a href="#1-3、数据库分类" class="headerlink" title="1.3、数据库分类"></a>1.3、数据库分类</h3><p>1.关系型数据库：（SQL）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MySQL，Oracle，Sql Server，DB2 , SQLlite</span><br><span class="line">通过表和表之间，行和列之间的关系进行数据的存储</span><br></pre></td></tr></table></figure><p>2.非关系型数据库：（NoSQL）Not Only</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Redis,MongDB</span><br><span class="line">非关系型数据库，对象存储，通过对象的自身的属性来决定</span><br></pre></td></tr></table></figure><p>3.DBMS(数据库管理系统)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">数据库的管理软件，科学有效的管理我们的数据。维护和获取数据；</span><br><span class="line">MySQL ，数据库管理系统</span><br></pre></td></tr></table></figure><h3 id="1-4、MySQL简介"><a href="#1-4、MySQL简介" class="headerlink" title="1.4、MySQL简介"></a>1.4、MySQL简介</h3><p>MySQL是一个关系型数据库管理系统</p><p>前世：瑞典MySQL AB 公司</p><p>今生：属于Oracle旗下产品</p><p>MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件之一。</p><p>开源的数据库软件</p><p>体积小、速度快、总体拥有成本低，招人成本比较低，所有人必须会</p><p>中小型网站、或者大型网站、集群！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;官网：&lt;a href=&quot;https://www.Mysql.com&quot;&gt;https://www.Mysql.com&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;1、初始MySQL&quot;&gt;&lt;a href=&quot;#1、初始MySQL&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="MySQL" scheme="https://unspman.github.io/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://unspman.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>test02</title>
    <link href="https://unspman.github.io/posts/4d40bec4.html"/>
    <id>https://unspman.github.io/posts/4d40bec4.html</id>
    <published>2023-04-21T19:25:06.000Z</published>
    <updated>2023-12-25T00:42:40.213Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>word</title>
    <link href="https://unspman.github.io/posts/c3f17511.html"/>
    <id>https://unspman.github.io/posts/c3f17511.html</id>
    <published>2023-03-06T11:29:30.000Z</published>
    <updated>2023-12-25T00:42:40.213Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-中英混合时，一行很多莫名空格："><a href="#1-中英混合时，一行很多莫名空格：" class="headerlink" title="1.中英混合时，一行很多莫名空格："></a>1.中英混合时，一行很多莫名空格：</h4><p>选中字段—&gt;右键—&gt;段落(若在单元格内则无段落选项)—&gt;换行和分页—&gt;允许西文换行</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;1-中英混合时，一行很多莫名空格：&quot;&gt;&lt;a href=&quot;#1-中英混合时，一行很多莫名空格：&quot; class=&quot;headerlink&quot; title=&quot;1.中英混合时，一行很多莫名空格：&quot;&gt;&lt;/a&gt;1.中英混合时，一行很多莫名空格：&lt;/h4&gt;&lt;p&gt;选中字段—&amp;gt;右</summary>
      
    
    
    
    <category term="tips" scheme="https://unspman.github.io/categories/tips/"/>
    
    
    <category term="tips" scheme="https://unspman.github.io/tags/tips/"/>
    
  </entry>
  
  <entry>
    <title>spider02(BeautifulSoup使用)</title>
    <link href="https://unspman.github.io/posts/fc6d79d7.html"/>
    <id>https://unspman.github.io/posts/fc6d79d7.html</id>
    <published>2023-03-05T11:29:30.000Z</published>
    <updated>2023-12-25T00:42:40.213Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装bs4"><a href="#安装bs4" class="headerlink" title="安装bs4"></a>安装bs4</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install bs4</span><br></pre></td></tr></table></figure><h3 id="使用BeautifulSoup解析HTML内容"><a href="#使用BeautifulSoup解析HTML内容" class="headerlink" title="使用BeautifulSoup解析HTML内容"></a>使用BeautifulSoup解析HTML内容</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="comment">#发送一个get请求获取网页内容（源码）</span></span><br><span class="line">content = requests.get(<span class="string">&quot;http://books.toscrape.com/&quot;</span>).text</span><br><span class="line"><span class="comment"># BeautifulSoup解析html内容 html.parser是解析器</span></span><br><span class="line">soup = BeautifulSoup(content, <span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line"><span class="comment">#通过findAll方法寻找网页所有符合class=price_color 的 p标签内容</span></span><br><span class="line">all_prices = soup.findAll(<span class="string">&quot;p&quot;</span>, attrs=&#123;<span class="string">&quot;class&quot;</span>: <span class="string">&quot;price_color&quot;</span>&#125;)</span><br><span class="line"><span class="comment"># 获取该页面上的价格信息</span></span><br><span class="line"><span class="keyword">for</span> price <span class="keyword">in</span> all_prices:</span><br><span class="line">    <span class="built_in">print</span>(price.string[<span class="number">2</span>:])</span><br><span class="line"><span class="comment">#通过findAll方法寻找网页所有h3标签内容</span></span><br><span class="line">all_titles = soup.findAll(<span class="string">&quot;h3&quot;</span>)</span><br><span class="line"><span class="comment"># 获取该页面上的书名信息</span></span><br><span class="line"><span class="keyword">for</span> title <span class="keyword">in</span> all_titles:</span><br><span class="line">    <span class="comment">#找到 h3 内容中的所有a标签内容</span></span><br><span class="line">    link = title.find(<span class="string">&quot;a&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(link.string)</span><br><span class="line">    <span class="comment"># A Light in the ...</span></span><br><span class="line">    <span class="comment"># Tipping the Velvet</span></span><br><span class="line">    <span class="comment"># Soumission</span></span><br><span class="line">    <span class="comment"># Sharp Objects</span></span><br><span class="line">    <span class="comment"># .....</span></span><br></pre></td></tr></table></figure><h3 id="使用BeautifulSoup-爬取豆瓣top250电影"><a href="#使用BeautifulSoup-爬取豆瓣top250电影" class="headerlink" title="使用BeautifulSoup 爬取豆瓣top250电影"></a>使用BeautifulSoup 爬取豆瓣top250电影</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#爬取豆瓣电影top250的电影</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36 Edg/111.0.1661.54&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> start_num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">250</span>,<span class="number">25</span>):</span><br><span class="line">    response = requests.get(<span class="string">f&quot;https://movie.douban.com/top250?start=<span class="subst">&#123;start_num&#125;</span>&quot;</span>,headers=headers)</span><br><span class="line">    html = response.text</span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line">    <span class="comment">#找到所有span中的 class = class的内容</span></span><br><span class="line">    all_titles = soup.findAll(<span class="string">&quot;span&quot;</span>,attrs=&#123;<span class="string">&quot;class&quot;</span>: <span class="string">&quot;title&quot;</span>&#125;)</span><br><span class="line">    <span class="keyword">for</span> title <span class="keyword">in</span> all_titles:</span><br><span class="line">        title_string = title.string</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;/&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> title_string:</span><br><span class="line">            <span class="built_in">print</span>(title_string)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;安装bs4&quot;&gt;&lt;a href=&quot;#安装bs4&quot; class=&quot;headerlink&quot; title=&quot;安装bs4&quot;&gt;&lt;/a&gt;安装bs4&lt;/h3&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut</summary>
      
    
    
    
    <category term="spider" scheme="https://unspman.github.io/categories/spider/"/>
    
    
    <category term="spider" scheme="https://unspman.github.io/tags/spider/"/>
    
  </entry>
  
  <entry>
    <title>spider03(正则表达式)</title>
    <link href="https://unspman.github.io/posts/ae9458fc.html"/>
    <id>https://unspman.github.io/posts/ae9458fc.html</id>
    <published>2023-03-05T11:29:30.000Z</published>
    <updated>2023-12-25T00:42:40.213Z</updated>
    
    <content type="html"><![CDATA[<p>学习自：<a href="https://www.bilibili.com/video/BV1da4y1p7iZ/?spm_id_from=333.999.0.0&amp;vd_source=3ba8e5c6f208a2b08d0e0bc4fc3e280f">奇乐编程学院：10分钟快速掌握正则表达式</a></p><h2 id="限定符"><a href="#限定符" class="headerlink" title="限定符"></a>限定符</h2><h4 id=""><a href="#" class="headerlink" title="?"></a>?</h4><p>前一个字符有 0 - 1 个<br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303311614816.png" alt=""></p><h4 id="-1"><a href="#-1" class="headerlink" title="*"></a>*</h4><p>前一个字符有 0 - n 个<br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303311614043.png" alt=""></p><h4 id="-2"><a href="#-2" class="headerlink" title="+"></a>+</h4><p>前一个字符有 1 - n 个<br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303311615856.png" alt=""></p><h4 id="x-y"><a href="#x-y" class="headerlink" title="{x,y}"></a>{x,y}</h4><p>前一个字符出现 x 到 y 次 (包括 x 次和 y 次)<br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303311617953.png" alt=""></p><h4 id="x"><a href="#x" class="headerlink" title="{x,}"></a>{x,}</h4><p>前一个字符出现 x 次以上<br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303311616895.png" alt=""></p><h4 id="mn"><a href="#mn" class="headerlink" title="(mn)"></a>(mn)</h4><p>多个字符匹配<br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303311623128.png" alt=""></p><h2 id="或运算符"><a href="#或运算符" class="headerlink" title="或运算符"></a>或运算符</h2><h4 id="m-n"><a href="#m-n" class="headerlink" title="(m|n)"></a>(m|n)</h4><p>匹配 m 或者 n<br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303311624473.png" alt=""><br>如果不写括号，则变成 a cat 或者 dog<br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303311625116.png" alt=""></p><h2 id="字符类"><a href="#字符类" class="headerlink" title="字符类"></a>字符类</h2><h4 id="xyz"><a href="#xyz" class="headerlink" title="[xyz]"></a><code>[xyz]</code></h4><p>匹配字符来自于 [] 中的内容<br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303311626566.png" alt=""></p><h4 id="a-zA-Z0-9"><a href="#a-zA-Z0-9" class="headerlink" title="[a-zA-Z0-9]"></a><code>[a-zA-Z0-9]</code></h4><p>匹配符合 a-z、A-Z、0-9 的字符<br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303311627790.png" alt=""></p><h4 id="a-zA-Z0-9-组合使用"><a href="#a-zA-Z0-9-组合使用" class="headerlink" title="[a-zA-Z0-9] 组合使用"></a><code>[a-zA-Z0-9] 组合使用</code></h4><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303311627516.png" alt=""></p><h4 id="xyz-1"><a href="#xyz-1" class="headerlink" title="[ ^xyz]"></a><code>[ ^xyz]</code></h4><p>所有不符合 [] 中得内容<br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303311628335.png" alt=""></p><h2 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h2><h4 id="d"><a href="#d" class="headerlink" title="\d"></a>\d</h4><p>数字<br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303311628340.png" alt=""></p><h4 id="w"><a href="#w" class="headerlink" title="\w"></a>\w</h4><p>字母、数字、下划线<br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303311629833.png" alt=""></p><h4 id="s"><a href="#s" class="headerlink" title="\s"></a>\s</h4><p>空白符 (包含 tab 和 换行符)<br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303311630235.png" alt=""></p><h4 id="D"><a href="#D" class="headerlink" title="\D"></a>\D</h4><p>非数字字符<br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303311630330.png" alt=""></p><h4 id="W"><a href="#W" class="headerlink" title="\W"></a>\W</h4><p>非数字、字母、下划线<br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303311631364.png" alt=""></p><h4 id="S"><a href="#S" class="headerlink" title="\S"></a>\S</h4><p>非空白符<br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303311632174.png" alt=""></p><h4 id="-3"><a href="#-3" class="headerlink" title="."></a>.</h4><p>任意字符，不包含换行符<br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303311632940.png" alt=""></p><h4 id="-4"><a href="#-4" class="headerlink" title="^"></a>^</h4><p>匹配行首<br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303311633296.png" alt=""></p><h4 id="-5"><a href="#-5" class="headerlink" title="$"></a>$</h4><p>匹配行尾<br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303311633772.png" alt=""></p><h2 id="贪婪与懒惰匹配"><a href="#贪婪与懒惰匹配" class="headerlink" title="贪婪与懒惰匹配"></a>贪婪与懒惰匹配</h2><p>贪婪匹配：尽可能多地匹配字符<br>懒惰匹配：即匹配尽可能少的字符，但是要匹配出所有的结果<br>当想要匹配带有 &lt;&gt; 的字符时，根据之前的知识可以这样写<br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303311639012.png" alt=""><br>由于 的 &lt; 和 的 &gt; 匹配上了，因此导致 Content = “ClickMe” 也被匹配上。</p><p>因此可以加上 ？ 使得该匹配由 贪婪匹配 变为 懒惰匹配，从而达到想要的效果<br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303311640787.png" alt=""></p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>匹配所有十六进制的 RGB 颜色值<br>条件<br>1.＃<br>2.a - f 或 A - F<br>3.0 - 9<br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303311641973.png" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;学习自：&lt;a href=&quot;https://www.bilibili.com/video/BV1da4y1p7iZ/?spm_id_from=333.999.0.0&amp;amp;vd_source=3ba8e5c6f208a2b08d0e0bc4fc3e280f&quot;&gt;奇乐编程学院：</summary>
      
    
    
    
    <category term="spider" scheme="https://unspman.github.io/categories/spider/"/>
    
    
    <category term="spider" scheme="https://unspman.github.io/tags/spider/"/>
    
  </entry>
  
  <entry>
    <title>spider01(requests+html使用)</title>
    <link href="https://unspman.github.io/posts/f16535de.html"/>
    <id>https://unspman.github.io/posts/f16535de.html</id>
    <published>2023-03-04T11:29:30.000Z</published>
    <updated>2023-12-25T00:42:40.213Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用Requests发送请求"><a href="#使用Requests发送请求" class="headerlink" title="使用Requests发送请求"></a>使用Requests发送请求</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="comment">#设置请求头 模拟网页请求</span></span><br><span class="line">head = &#123;<span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64)&quot;</span>&#125;</span><br><span class="line"><span class="comment"># 获取网页内容</span></span><br><span class="line">response = requests.get(<span class="string">&quot;http://yhdm86.com/&quot;</span>,header=head)</span><br><span class="line"><span class="keyword">if</span> response.ok:</span><br><span class="line">    <span class="built_in">print</span>(response.text)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;请求失败&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="使用Requests拿到豆瓣top250源码"><a href="#使用Requests拿到豆瓣top250源码" class="headerlink" title="使用Requests拿到豆瓣top250源码"></a>使用Requests拿到豆瓣top250源码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#爬取豆瓣电影top250的电影</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36 Edg/111.0.1661.54&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">response = requests.get(<span class="string">&quot;https://movie.douban.com/top250&quot;</span>,headers=headers)</span><br><span class="line"><span class="built_in">print</span>(response.status_code) <span class="comment">#status_code表示返回的状态码 418 没添加请求头别人不服务爬虫，200表示请求成功</span></span><br><span class="line"><span class="built_in">print</span>(response.text) <span class="comment"># text表示获取网页的源码</span></span><br></pre></td></tr></table></figure><h3 id="HTML常用标签"><a href="#HTML常用标签" class="headerlink" title="HTML常用标签"></a>HTML常用标签</h3><h4 id="标题标签-lt-h-gt"><a href="#标题标签-lt-h-gt" class="headerlink" title="标题标签&lt;h&gt;"></a><code>标题标签&lt;h&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是一个一级标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>这是一个二级标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>这是一个三级标题<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>这是一个四级标题<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>这是一个五级标题<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>这是一个六级标题<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303302150518.jpg" alt=""></p><h4 id="文本段落标签-lt-p-gt"><a href="#文本段落标签-lt-p-gt" class="headerlink" title="文本段落标签&lt;p&gt;"></a><code>文本段落标签&lt;p&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个文本段落标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303302151335.jpg" alt=""></p><h4 id="换行标签-lt-br-gt"><a href="#换行标签-lt-br-gt" class="headerlink" title="换行标签&lt;br&gt;"></a><code>换行标签&lt;br&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个文<span class="tag">&lt;<span class="name">br</span>&gt;</span>本段落标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303302152330.jpg" alt=""></p><h4 id="加粗标签-lt-b-gt"><a href="#加粗标签-lt-b-gt" class="headerlink" title="加粗标签&lt;b&gt;"></a><code>加粗标签&lt;b&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是<span class="tag">&lt;<span class="name">b</span>&gt;</span>一个<span class="tag">&lt;/<span class="name">b</span>&gt;</span>文本段落标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303302153599.jpg" alt=""></p><h4 id="斜体标签-lt-i-gt"><a href="#斜体标签-lt-i-gt" class="headerlink" title="斜体标签&lt;i&gt;"></a><code>斜体标签&lt;i&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是<span class="tag">&lt;<span class="name">i</span>&gt;</span>一个<span class="tag">&lt;/<span class="name">i</span>&gt;</span>文本段落标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303302154834.jpg" alt=""></p><h4 id="下划线标签-lt-u-gt"><a href="#下划线标签-lt-u-gt" class="headerlink" title="下划线标签&lt;u&gt;"></a><code>下划线标签&lt;u&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是<span class="tag">&lt;<span class="name">u</span>&gt;</span>一个<span class="tag">&lt;/<span class="name">u</span>&gt;</span>文本段落标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303302155241.jpg" alt=""></p><h4 id="图片标签-lt-img-gt"><a href="#图片标签-lt-img-gt" class="headerlink" title="图片标签&lt;img&gt;"></a><code>图片标签&lt;img&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://images.unsplash.com/photo-1609515602287-8470b8d9ac11&quot;</span> <span class="attr">width</span>=<span class="string">&quot;500px&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303302155205.jpg" alt=""></p><h4 id="链接标签-lt-a-gt"><a href="#链接标签-lt-a-gt" class="headerlink" title="链接标签&lt;a&gt;"></a><code>链接标签&lt;a&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://space.bilibili.com/523995133&quot;</span>&gt;</span>我的主页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303302156421.jpg" alt=""></p><h4 id="容器标签-lt-div-gt-lt-span-gt"><a href="#容器标签-lt-div-gt-lt-span-gt" class="headerlink" title="容器标签&lt;div&gt;&lt;span&gt;"></a><code>容器标签&lt;div&gt;&lt;span&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://baidu.com&quot;</span>&gt;</span>div元素下的链接1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://baidu.com&quot;</span>&gt;</span>div元素下的链接2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://baidu.com&quot;</span>&gt;</span>span元素下的链接1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://baidu.com&quot;</span>&gt;</span>span元素下的链接2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303302157107.jpg" alt=""></p><h4 id="有序列表标签-lt-ol-gt-，列表元素标签-lt-li-gt"><a href="#有序列表标签-lt-ol-gt-，列表元素标签-lt-li-gt" class="headerlink" title="有序列表标签&lt;ol&gt;，列表元素标签&lt;li&gt;"></a><code>有序列表标签&lt;ol&gt;，列表元素标签&lt;li&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>语文<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>数学<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>英语<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303302157459.jpg" alt=""></p><h4 id="无序列表标签-lt-ul-gt"><a href="#无序列表标签-lt-ul-gt" class="headerlink" title="无序列表标签&lt;ul&gt;"></a><code>无序列表标签&lt;ul&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>语文<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>数学<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>英语<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303302158680.jpg" alt=""></p><h4 id="表格标签-lt-table-gt"><a href="#表格标签-lt-table-gt" class="headerlink" title="表格标签&lt;table&gt;"></a><code>表格标签&lt;table&gt;</code></h4><p><code>表格标签：&lt;table&gt;</code></p><p><code>表格头部：&lt;thread&gt;</code></p><p><code>表格主体：&lt;tbody&gt;</code></p><p><code>表格行：&lt;tr&gt;</code></p><p><code>单元格：&lt;td&gt;</code><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>表头1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>表头2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>111<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>222<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>333<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>444<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303302159460.jpg" alt=""></p><h4 id="class属性"><a href="#class属性" class="headerlink" title="class属性"></a>class属性</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span>给岁月以文明<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span>而不是给文明以岁月<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;review&quot;</span>&gt;</span>五星好评！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303302200668.jpg" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;使用Requests发送请求&quot;&gt;&lt;a href=&quot;#使用Requests发送请求&quot; class=&quot;headerlink&quot; title=&quot;使用Requests发送请求&quot;&gt;&lt;/a&gt;使用Requests发送请求&lt;/h3&gt;&lt;figure class=&quot;highlight </summary>
      
    
    
    
    <category term="spider" scheme="https://unspman.github.io/categories/spider/"/>
    
    
    <category term="spider" scheme="https://unspman.github.io/tags/spider/"/>
    
  </entry>
  
  <entry>
    <title>spider</title>
    <link href="https://unspman.github.io/posts/6ad76a84.html"/>
    <id>https://unspman.github.io/posts/6ad76a84.html</id>
    <published>2023-03-03T11:29:30.000Z</published>
    <updated>2023-12-25T00:42:40.213Z</updated>
    
    <content type="html"><![CDATA[<h3 id="基本格式"><a href="#基本格式" class="headerlink" title="基本格式:"></a>基本格式:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    url = <span class="string">&#x27;https://www.sogou.com/web&#x27;</span></span><br><span class="line">    kw = <span class="built_in">input</span>(<span class="string">&#x27;enter a word:&#x27;</span>)</span><br><span class="line">    param = &#123;</span><br><span class="line">        <span class="string">&#x27;query&#x27;</span>:kw</span><br><span class="line">    &#125;</span><br><span class="line">    header = &#123;</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36 Edg/110.0.1587.57&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    response = requests.get(url=url, params=param, headers=header)</span><br><span class="line">    page_text = response.text</span><br><span class="line">    fileName = kw+<span class="string">&#x27;.html&#x27;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(fileName, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        fp.write(page_text)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;over!&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="常用库-BeautifulSoup，requests"><a href="#常用库-BeautifulSoup，requests" class="headerlink" title="常用库 BeautifulSoup，requests"></a>常用库 BeautifulSoup，requests</h3><p>eg:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入必要的库</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送请求并获取网页内容</span></span><br><span class="line">url = <span class="string">&quot;https://www.example.com&quot;</span></span><br><span class="line">response = requests.get(url)</span><br><span class="line">content = response.content</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解析网页内容</span></span><br><span class="line">soup = BeautifulSoup(content, <span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 找到需要的元素</span></span><br><span class="line">element = soup.find(<span class="string">&quot;div&quot;</span>, &#123;<span class="string">&quot;class&quot;</span>: <span class="string">&quot;example-class&quot;</span>&#125;)</span><br><span class="line"><span class="keyword">if</span> element:</span><br><span class="line">    <span class="comment"># 提取需要的信息</span></span><br><span class="line">    info = element.text.strip()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    info = <span class="string">&quot;Not found&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(info)</span><br></pre></td></tr></table></figure></p><h3 id="常用库-BeautifulSoup，requests使用实例"><a href="#常用库-BeautifulSoup，requests使用实例" class="headerlink" title="常用库 BeautifulSoup，requests使用实例"></a>常用库 BeautifulSoup，requests使用实例</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_anime_info</span>(<span class="params">url</span>):</span><br><span class="line">    response = requests.get(url)</span><br><span class="line">    soup = BeautifulSoup(response.text, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    title_tag = soup.find(<span class="string">&#x27;dt&#x27;</span>, class_=<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> title_tag:</span><br><span class="line">        name = title_tag.text.strip()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        name = <span class="string">&#x27;Unknown&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取集数</span></span><br><span class="line">    episode_tag = soup.find(<span class="string">&#x27;dd&#x27;</span>, text=re.<span class="built_in">compile</span>(<span class="string">&#x27;更新至&#x27;</span>))</span><br><span class="line">    <span class="keyword">if</span> episode_tag:</span><br><span class="line">        episode = episode_tag.text.strip().replace(<span class="string">&#x27;更新至&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        episode = <span class="string">&#x27;Unknown&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取地区</span></span><br><span class="line">    area_tag = soup.find(<span class="string">&#x27;b&#x27;</span>, text=<span class="string">&#x27;地区：&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> area_tag:</span><br><span class="line">        area = area_tag.nextSibling.strip()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        area = <span class="string">&#x27;Unknown&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取年份</span></span><br><span class="line">    year_tag = soup.find(<span class="string">&#x27;b&#x27;</span>, text=<span class="string">&#x27;年代：&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> year_tag:</span><br><span class="line">        year = year_tag.nextSibling.strip()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        year = <span class="string">&#x27;Unknown&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取类型</span></span><br><span class="line">    type_tags = soup.find_all(<span class="string">&#x27;a&#x27;</span>, target=<span class="string">&quot;_blank&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> type_tags:</span><br><span class="line">        anime_type = [t.text.strip() <span class="keyword">for</span> t <span class="keyword">in</span> type_tags]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        anime_type = [<span class="string">&#x27;Unknown&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取简介</span></span><br><span class="line">    description_tag = soup.find(<span class="string">&#x27;div&#x27;</span>, &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;des2&#x27;</span>&#125;)</span><br><span class="line">    <span class="keyword">if</span> description_tag:</span><br><span class="line">        description = description_tag.text.strip()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        description = <span class="string">&#x27;Unknown&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取封面图片</span></span><br><span class="line">    img_tag = soup.find(<span class="string">&#x27;img&#x27;</span>, &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;lazy&#x27;</span>&#125;)</span><br><span class="line">    <span class="keyword">if</span> img_tag:</span><br><span class="line">        img_url = img_tag.get(<span class="string">&#x27;data-original&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        img_url = [<span class="string">&#x27;Unknown&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取类型元素</span></span><br><span class="line">    <span class="comment"># 找到class为&quot;h2&quot;的元素</span></span><br><span class="line">    h2_element = soup.find(<span class="string">&#x27;div&#x27;</span>, class_=<span class="string">&#x27;h2&#x27;</span>)</span><br><span class="line">    <span class="comment"># 找到&lt;a&gt;标签并获取其文本内容</span></span><br><span class="line">    a_element = h2_element.find(<span class="string">&#x27;a&#x27;</span>, href=<span class="string">&#x27;/acg/&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> a_element:</span><br><span class="line">        type_text = a_element.text.strip()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        type_text = <span class="string">&#x27;Unknown&#x27;</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> name, episode, area, year, img_url, anime_type, type_text, description</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;基本格式&quot;&gt;&lt;a href=&quot;#基本格式&quot; class=&quot;headerlink&quot; title=&quot;基本格式:&quot;&gt;&lt;/a&gt;基本格式:&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;</summary>
      
    
    
    
    <category term="spider" scheme="https://unspman.github.io/categories/spider/"/>
    
    
    <category term="spider" scheme="https://unspman.github.io/tags/spider/"/>
    
  </entry>
  
  <entry>
    <title>Anaconda使用</title>
    <link href="https://unspman.github.io/posts/feaec37.html"/>
    <id>https://unspman.github.io/posts/feaec37.html</id>
    <published>2023-03-02T11:29:30.000Z</published>
    <updated>2023-12-25T00:42:40.209Z</updated>
    
    <content type="html"><![CDATA[<h3 id="anaconda-安装"><a href="#anaconda-安装" class="headerlink" title="anaconda 安装"></a>anaconda 安装</h3><p><a href="https://www.anaconda.com/products/distribution#macos">官网下载(非常慢不推荐)</a><br><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/">清华大学镜像站下载</a><br><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-5.2.0-Windows-x86_64.exe">个人使用版本</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303141049189.png" alt="1"><br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303141050191.png" alt="2"><br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303141050059.png" alt="3"><br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303141050496.png" alt="4"><br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303141050718.png" alt="5"></p><h4 id="测试安装"><a href="#测试安装" class="headerlink" title="测试安装"></a>测试安装</h4><p>cmd输入<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda --version</span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20200108134410262.png" alt="若出现像这样的conda版本号即安装成功"></p><h4 id="更改源"><a href="#更改源" class="headerlink" title="更改源"></a>更改源</h4><p>安装需要的Python包非常方便，但是官方服务器在国外，下载龟速，国内清华大学提供了Anaconda的镜像仓库，我们把源改为清华大学镜像源</p><p>更改方法一：cmd后依次输入下面命令<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span><br><span class="line">conda config --set show_channel_urls yes</span><br></pre></td></tr></table></figure><br>打开C盘用户目录，我这里是<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\User</span><br></pre></td></tr></table></figure><br>找到.condarc文件，里面长这样就成了<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ssl_verify: true</span><br><span class="line">channels:</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">  - defaults</span><br><span class="line">show_channel_urls: true</span><br></pre></td></tr></table></figure><br>更改方法二：打开 .condarc文件，直接简单粗暴的把上面的内容复制进去</p><h4 id="更新包"><a href="#更新包" class="headerlink" title="更新包"></a>更新包</h4><p>更新时间较长，建议找个空余时间更新,不更新也可以，但为避免后续安装其他东西出错最好更一下，这里我就不更了，把命令贴出来</p><p>先更新conda<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda update conda</span><br></pre></td></tr></table></figure><br>再更新第三方所有包<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda upgrade --all</span><br></pre></td></tr></table></figure></p><h3 id="Anaconda-修改默认虚拟环境安装位置"><a href="#Anaconda-修改默认虚拟环境安装位置" class="headerlink" title="Anaconda 修改默认虚拟环境安装位置"></a>Anaconda 修改默认虚拟环境安装位置</h3><p>保存虚拟环境的默认地址是C盘，而我想将下载的虚拟环境保存到我自定义的位置</p><h4 id="使用"><a href="#使用" class="headerlink" title="使用:"></a>使用:</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda config --show</span><br></pre></td></tr></table></figure><p>查看envs_dirs的信息，一般第一个路径是默认路径。把它修改成想要自定义的路径<br>方法1: windows+r输入%HOMEPATH% 找到.condarc文件，用记事本打开，将自定义文件夹的路径append到文件中。<br>比如:<br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303141051425.png" alt="6"><br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303141051415.png" alt="7"><br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303141051114.png" alt="8"><br>注意: 我看了很多材料说是把Anaconda3文件夹的只读属性去掉(右键属性即可找到)。但是我尝试后，新创建的虚拟环境还是在C盘。<br>⭐故大家在改完Anaconda3的文件夹属性后没成功的话可以试试，将envs文件夹(这是我的文件夹，因人而异)的只读属性去掉，并且在属性–&gt;安全–&gt;User中将权限全都勾上。此时再Anaconda Prompt中创建虚拟环境应该就没问题了。⭐</p><h4 id="在Anaconda-Prompt中使用命令，添加新的虚拟环境作为默认环境"><a href="#在Anaconda-Prompt中使用命令，添加新的虚拟环境作为默认环境" class="headerlink" title="在Anaconda Prompt中使用命令，添加新的虚拟环境作为默认环境"></a>在Anaconda Prompt中使用命令，添加新的虚拟环境作为默认环境</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda config --add envs_dirs 虚拟环境的绝对路径</span><br></pre></td></tr></table></figure><h4 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h4><p>查看anaconda的环境配置<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda config --show</span><br></pre></td></tr></table></figure></p><p>修改配置语法<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda config --add key value #添加语法</span><br><span class="line">conda config --remove key value #删除语法</span><br></pre></td></tr></table></figure><br>其中，key为 envs_dirs、pkgs_dirs等   value为key对应的值</p><p>添加、删除envs_dirs:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda config --add envs_dirs dir</span><br><span class="line">conda config --remove envs_dirs dir</span><br></pre></td></tr></table></figure><br>例如:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda config --add envs_dirs E:/File/Anaconda3/envs</span><br><span class="line">conda config --remove envs_dirs /Users/Lsz/.conda/envs</span><br></pre></td></tr></table></figure><br>这里记住要用 ” / “</p><p>如果想调整envs_dirs安装顺序， 也是采用conda config —add envs_dirs dir语法， 直接把顺序贴过去就行（如下图所示）<br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303141051792.png" alt="9"><br>再次查看anconda环境配置，就可以发现默认虚拟环境安装位置已经修改过来了。<br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303141052356.png" alt="10"></p><h3 id="anaconda使用"><a href="#anaconda使用" class="headerlink" title="anaconda使用"></a>anaconda使用</h3><h4 id="与软件包相关"><a href="#与软件包相关" class="headerlink" title="与软件包相关"></a>与软件包相关</h4><p>安装某一个包<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install package_name</span><br></pre></td></tr></table></figure><br>卸载包<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda remove package_name</span><br></pre></td></tr></table></figure><br>更新某一个具体的包<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda upgrade package_name</span><br></pre></td></tr></table></figure></p><h4 id="与环境有关的命令"><a href="#与环境有关的命令" class="headerlink" title="与环境有关的命令"></a>与环境有关的命令</h4><p>创建新的环境<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n env_name package_names</span><br></pre></td></tr></table></figure><br>需要注意的是，这里的package_names是可选参数，也就是可以通过设定。实现具体包的预安装以及包版本的管理</p><p>进入环境<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">activate env_name</span><br></pre></td></tr></table></figure></p><p>退出环境<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deactivate</span><br></pre></td></tr></table></figure></p><p>删除环境<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda env remove -n env_name</span><br></pre></td></tr></table></figure></p><p>查看当前环境下的包<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda <span class="built_in">list</span></span><br></pre></td></tr></table></figure></p><p>查看环境<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda env <span class="built_in">list</span></span><br></pre></td></tr></table></figure></p><h3 id="Anaconda-环境变量手动设置"><a href="#Anaconda-环境变量手动设置" class="headerlink" title="Anaconda 环境变量手动设置"></a>Anaconda 环境变量手动设置</h3><p>以下就是需要添加的环境变量，相应用户的目录存在差异，但是后面的路径名称相同<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">D:\anaconda</span><br><span class="line">D:\anaconda\Scripts\</span><br><span class="line">D:\anaconda\Library\bin</span><br><span class="line">D:\anaconda\Library\mingw-w64\bin</span><br></pre></td></tr></table></figure><br>重新启动运行命令框，再次输入conda，如果出现以下显示：<br><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303141052320.png" alt="11"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;anaconda-安装&quot;&gt;&lt;a href=&quot;#anaconda-安装&quot; class=&quot;headerlink&quot; title=&quot;anaconda 安装&quot;&gt;&lt;/a&gt;anaconda 安装&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://www.anaconda.com/</summary>
      
    
    
    
    <category term="Anaconda" scheme="https://unspman.github.io/categories/Anaconda/"/>
    
    
    <category term="Anaconda" scheme="https://unspman.github.io/tags/Anaconda/"/>
    
  </entry>
  
  <entry>
    <title>Bootstrap</title>
    <link href="https://unspman.github.io/posts/d352c4d3.html"/>
    <id>https://unspman.github.io/posts/d352c4d3.html</id>
    <published>2023-03-02T11:29:30.000Z</published>
    <updated>2023-12-25T00:42:40.209Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://v3.bootcss.com/getting-started/#download">下载地址</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://v3.bootcss.com/getting-started/#download&quot;&gt;下载地址&lt;/a&gt;&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Bootstrap" scheme="https://unspman.github.io/categories/Bootstrap/"/>
    
    
    <category term="Bootstrap" scheme="https://unspman.github.io/tags/Bootstrap/"/>
    
  </entry>
  
  <entry>
    <title>端口号占用</title>
    <link href="https://unspman.github.io/posts/3f11cddc.html"/>
    <id>https://unspman.github.io/posts/3f11cddc.html</id>
    <published>2023-01-31T00:00:00.000Z</published>
    <updated>2023-12-25T00:42:40.213Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用快捷键Windows-R，输入cmd进入dos命令窗口"><a href="#使用快捷键Windows-R，输入cmd进入dos命令窗口" class="headerlink" title="使用快捷键Windows+R，输入cmd进入dos命令窗口"></a>使用快捷键Windows+R，输入cmd进入dos命令窗口</h3><h3 id="输入netstat-nao，查看本地所有的端口号信息"><a href="#输入netstat-nao，查看本地所有的端口号信息" class="headerlink" title="输入netstat -nao，查看本地所有的端口号信息"></a>输入netstat -nao，查看本地所有的端口号信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">协议    本地地址：端口号    外部地址   PID    数字代号</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303202119717.png" alt=""></p><h3 id="然后在输入：taskkill-pid-数字代号-f"><a href="#然后在输入：taskkill-pid-数字代号-f" class="headerlink" title="然后在输入：taskkill /pid  数字代号 -f"></a>然后在输入：taskkill /pid  数字代号 -f</h3><p><img src="https://cdn.jsdelivr.net/gh/UnSpMan/picgo@master/img/202303202119696.png" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;使用快捷键Windows-R，输入cmd进入dos命令窗口&quot;&gt;&lt;a href=&quot;#使用快捷键Windows-R，输入cmd进入dos命令窗口&quot; class=&quot;headerlink&quot; title=&quot;使用快捷键Windows+R，输入cmd进入dos命令窗口&quot;&gt;&lt;/a</summary>
      
    
    
    
    <category term="tips" scheme="https://unspman.github.io/categories/tips/"/>
    
    
    <category term="tips" scheme="https://unspman.github.io/tags/tips/"/>
    
  </entry>
  
  <entry>
    <title>明日方舟脚本</title>
    <link href="https://unspman.github.io/posts/882f1047.html"/>
    <id>https://unspman.github.io/posts/882f1047.html</id>
    <published>2023-01-22T13:29:30.000Z</published>
    <updated>2023-12-25T00:42:40.213Z</updated>
    
    <content type="html"><![CDATA[<h3 id="MAA"><a href="#MAA" class="headerlink" title="MAA"></a>MAA</h3><p><a href="https://github.com/MaaAssistantArknights/MaaAssistantArknights">脚本出处</a></p><p>功能：</p><ul><li>刷理智，掉落识别及上传 <a href="https://penguin-stats.cn/">企鹅物流</a></li><li>智能基建换班，自动计算干员效率，单设施内最优解；同时也支持 <a href="https://maa.plus/docs/3.6-%E5%9F%BA%E5%BB%BA%E6%8E%92%E7%8F%AD%E5%8D%8F%E8%AE%AE.html">自定义排班</a></li><li>自动公招，可选使用加急许可，一次全部刷完！公招数据上传 <a href="https://penguin-stats.cn/result/stage/recruit/recruit">企鹅物流</a>，<a href="https://yituliu.site/maarecruitdata">一图流</a></li><li>访问好友、收取信用及购物、领取日常奖励等。一键全日常自动长草！</li><li>肉鸽全自动刷源石锭和蜡烛，自动识别干员及练度</li><li>选择作业 JSON 文件，自动抄作业！ <a href="https://www.bilibili.com/video/BV1H841177Fk/">视频演示</a></li><li>仓库识别并支持导出至 <a href="https://penguin-stats.cn/planner">企鹅物流刷图规划器</a>, <a href="https://arkn.lolicon.app/#/material">明日方舟工具箱</a>, <a href="https://ark-nights.com/settings">ARK-NIGHTS 干员培养表</a></li><li>支持 C, Python, Java, Rust, Golang, Java HTTP, Rust HTTP 等多种接口，方便集成调用，自定义你的 MAA！</li></ul><h3 id="一、模拟器下载"><a href="#一、模拟器下载" class="headerlink" title="一、模拟器下载"></a>一、模拟器下载</h3><p><a href="https://www.bluestacks.com/tw/index.html">BlueStack5</a></p><p>需要在模拟器“设定 - 进阶” 中打开 “Android调试桥”</p><h3 id="二、明日方舟APK文件下载"><a href="#二、明日方舟APK文件下载" class="headerlink" title="二、明日方舟APK文件下载"></a>二、明日方舟APK文件下载</h3><p><a href="https://ak.hypergryph.com/">明日方舟 - Arknights </a></p><p>右键选择模拟器打开</p><h3 id="三、阿巴阿巴"><a href="#三、阿巴阿巴" class="headerlink" title="三、阿巴阿巴"></a>三、阿巴阿巴</h3><p>保全派驻作业路径：MAA\MAA-v4.10.10-win-x64\resource\copilot\SSS_阿卡胡拉丛林.json</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;MAA&quot;&gt;&lt;a href=&quot;#MAA&quot; class=&quot;headerlink&quot; title=&quot;MAA&quot;&gt;&lt;/a&gt;MAA&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/MaaAssistantArknights/MaaAssistantArkn</summary>
      
    
    
    
    <category term="游戏" scheme="https://unspman.github.io/categories/%E6%B8%B8%E6%88%8F/"/>
    
    
    <category term="游戏" scheme="https://unspman.github.io/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>Node.js(video项目后端案例)</title>
    <link href="https://unspman.github.io/posts/88d28bf1.html"/>
    <id>https://unspman.github.io/posts/88d28bf1.html</id>
    <published>2023-01-15T00:00:00.000Z</published>
    <updated>2023-12-25T00:42:40.213Z</updated>
    
    <content type="html"><![CDATA[<h3 id="导包"><a href="#导包" class="headerlink" title="导包"></a>导包</h3><p>导入express<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add express</span><br></pre></td></tr></table></figure><br>导入template<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn add art-template</span><br><span class="line">yarn add express-art-template</span><br></pre></td></tr></table></figure><br>导入mysql</p><p>导入加密函数<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install bcryptjs</span><br></pre></td></tr></table></figure></p><h3 id="index-js文件编写"><a href="#index-js文件编写" class="headerlink" title="index.js文件编写"></a>index.js文件编写</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">//解决跨域问题</span></span><br><span class="line"><span class="keyword">const</span> cors = <span class="built_in">require</span>(<span class="string">&quot;cors&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> apiRouter = <span class="built_in">require</span>(<span class="string">&#x27;./module/api&#x27;</span>);</span><br><span class="line"><span class="comment">//初始化app</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="built_in">require</span>(<span class="string">&quot;dotenv&quot;</span>).<span class="title function_">config</span>();</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cors</span>());</span><br><span class="line"><span class="comment">//用于解析HTTP请求中的请求体（request body），并将其转换为JSON格式的数据</span></span><br><span class="line">app.<span class="title function_">use</span>(bodyParser.<span class="title function_">json</span>());</span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&#x27;/api&#x27;</span>, apiRouter);</span><br><span class="line"><span class="comment">//监听5000端口</span></span><br><span class="line"><span class="keyword">const</span> server = app.<span class="title function_">listen</span>(process.<span class="property">env</span>.<span class="property">PORT</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Server Started on Port <span class="subst">$&#123;process.env.PORT&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="数据库部分代码"><a href="#数据库部分代码" class="headerlink" title="数据库部分代码"></a>数据库部分代码</h3><h4 id="orm-js"><a href="#orm-js" class="headerlink" title="orm.js"></a>orm.js</h4><p>ORM中文意为：对象-关系映射<br>它能把数据库表中的每条记录映射成一个模型对象<br>1、不需要写数据库sql代码来操作数据库<br>2、避免了不同数据库之间的操作差异<br>3、可以通过简单的配置来更换数据库<br>不过项目中基本未使用</p><h4 id="handle-js"><a href="#handle-js" class="headerlink" title="handle.js"></a>handle.js</h4><p>为了调用方便，我们可以将这些异步代码全部封装：<br>不过项目中基本未使用</p><h3 id="token-js部分代码"><a href="#token-js部分代码" class="headerlink" title="token.js部分代码"></a>token.js部分代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&#x27;jsonwebtoken&#x27;</span>);</span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;dotenv&#x27;</span>).<span class="title function_">config</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Token</span> = &#123;</span><br><span class="line">  <span class="title function_">encode</span>(<span class="params">payload</span>) &#123;</span><br><span class="line">    <span class="comment">//sign(param1,param2)  加密对象，解密密匙</span></span><br><span class="line">    <span class="keyword">const</span> token = jwt.<span class="title function_">sign</span>(payload, process.<span class="property">env</span>.<span class="property">SECRET_KEY</span>);</span><br><span class="line">    <span class="keyword">return</span> token;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">decode</span>(<span class="params">token</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">//verify(param1,param2)  解密对象，解密密匙</span></span><br><span class="line">      <span class="keyword">const</span> payload = jwt.<span class="title function_">verify</span>(token, process.<span class="property">env</span>.<span class="property">SECRET_KEY</span>);</span><br><span class="line">      <span class="keyword">return</span> payload;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">Token</span>;</span><br></pre></td></tr></table></figure><h3 id="接口部分代码api"><a href="#接口部分代码api" class="headerlink" title="接口部分代码api"></a>接口部分代码api</h3><h4 id="注册接口-signin"><a href="#注册接口-signin" class="headerlink" title="注册接口 signin"></a>注册接口 signin</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注册</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/signin&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">json</span>(&#123;<span class="attr">message</span>: <span class="string">&#x27;注册界面&#x27;</span>&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/signin&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//获取参数</span></span><br><span class="line">  <span class="keyword">const</span> &#123; username, password&#125; = req.<span class="property">body</span>;</span><br><span class="line">  <span class="comment">//加密密码</span></span><br><span class="line">  <span class="keyword">const</span> payload = &#123; username &#125;;</span><br><span class="line">  <span class="keyword">const</span> token = <span class="title class_">Token</span>.<span class="title function_">encode</span>(payload);</span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;user&#x27;</span>).<span class="title function_">sql</span>(<span class="string">`INSERT INTO user (name, password) VALUES (&#x27;<span class="subst">$&#123;username&#125;</span>&#x27;, &#x27;<span class="subst">$&#123;password&#125;</span>&#x27;)`</span>, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;注册成功&#x27;</span>, <span class="attr">token</span>: token &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="登录接口-login"><a href="#登录接口-login" class="headerlink" title="登录接口 login"></a>登录接口 login</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//登录</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/login&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">json</span>(&#123;<span class="attr">message</span>: <span class="string">&#x27;登录界面&#x27;</span>&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/login&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 获取参数</span></span><br><span class="line">  <span class="keyword">const</span> &#123; username, password, token &#125; = req.<span class="property">body</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 如果有token，则尝试解密</span></span><br><span class="line">  <span class="keyword">if</span> (token) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> decoded = <span class="title class_">Token</span>.<span class="title function_">decode</span>(token);</span><br><span class="line">      <span class="keyword">if</span> (decoded.<span class="property">username</span> === username) &#123;</span><br><span class="line">        <span class="comment">// 如果解密成功，且用户名与请求一致，则返回登录成功,并找到user_id返回给前端</span></span><br><span class="line">        db.<span class="title function_">model</span>(<span class="string">&#x27;user&#x27;</span>).<span class="title function_">sql</span>(<span class="string">`SELECT id FROM user WHERE name=&#x27;<span class="subst">$&#123;username&#125;</span>&#x27;`</span>, <span class="function">(<span class="params">err, user_id</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (err) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">            res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;login Server Error&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;登录成功&#x27;</span>, <span class="attr">user_id</span>:user_id[<span class="number">0</span>].<span class="property">id</span>, <span class="attr">token</span>: token &#125;);</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      res.<span class="title function_">send</span>(<span class="string">&quot;解密失败&quot;</span>)</span><br><span class="line">      <span class="comment">// 如果解密失败，或用户名不一致，则忽略token，进行下一步验证</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(password) &#123;</span><br><span class="line">  <span class="comment">// 验证用户名和密码</span></span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;user&#x27;</span>).<span class="title function_">sql</span>(<span class="string">`SELECT COUNT(*) as count FROM user WHERE name=&#x27;<span class="subst">$&#123;username&#125;</span>&#x27; AND password=<span class="subst">$&#123;password&#125;</span>`</span>, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (results[<span class="number">0</span>].<span class="property">count</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">//如果用户存在，则找到user_id返回给前端</span></span><br><span class="line">      db.<span class="title function_">model</span>(<span class="string">&#x27;user&#x27;</span>).<span class="title function_">sql</span>(<span class="string">`SELECT id FROM user WHERE name=&#x27;<span class="subst">$&#123;username&#125;</span>&#x27;`</span>, <span class="function">(<span class="params">err, user_id</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">          res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;login Server Error&#x27;</span>);</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 生成新的token返回给客户端</span></span><br><span class="line">        <span class="keyword">const</span> payload = &#123; username &#125;;</span><br><span class="line">        <span class="keyword">const</span> newToken = <span class="title class_">Token</span>.<span class="title function_">encode</span>(payload);</span><br><span class="line">        res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;登录成功&#x27;</span>, <span class="attr">user_id</span>:user_id[<span class="number">0</span>].<span class="property">id</span>, <span class="attr">token</span>: newToken &#125;);</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: -<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;用户名或密码错误&#x27;</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: -<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;没输入密码&#x27;</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="测试数据库链接接口-test"><a href="#测试数据库链接接口-test" class="headerlink" title="测试数据库链接接口 test"></a>测试数据库链接接口 test</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//测试数据库连接</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/test&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;user&#x27;</span>).<span class="title function_">sql</span>(<span class="string">`select count(*) as count from user`</span>, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res.<span class="title function_">json</span>(&#123; <span class="attr">result</span>: results[<span class="number">0</span>].<span class="property">count</span>, <span class="attr">message</span>: <span class="string">&#x27;Database connection successful&#x27;</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="搜索接口-search"><a href="#搜索接口-search" class="headerlink" title="搜索接口 search"></a>搜索接口 search</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//搜索</span></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/search&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//获取搜索内容 msg:搜索str,user_id：搜索用户</span></span><br><span class="line">  <span class="keyword">const</span> &#123; msg, user_id&#125; = req.<span class="property">body</span>;</span><br><span class="line">  <span class="comment">//在数据库表video中进行模糊查找</span></span><br><span class="line">  <span class="keyword">const</span> searchQuery = <span class="string">`SELECT a.id, a.name,a.cover,a.type,b.name as tag,a.description FROM video as a,video_tag as b WHERE a.name LIKE &#x27;%<span class="subst">$&#123;msg&#125;</span>%&#x27; and a.id = b.video_id`</span>;</span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;video&#x27;</span>).<span class="title function_">sql</span>(searchQuery, <span class="function">(<span class="params">err, search_results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    search_data = search_results;</span><br><span class="line">    <span class="comment">//记录用户搜索记录</span></span><br><span class="line">    <span class="keyword">const</span> insertQuery = <span class="string">`insert into search_history (content,user_id) VALUES (&#x27;<span class="subst">$&#123;msg&#125;</span>&#x27;, &#x27;<span class="subst">$&#123;user_id&#125;</span>&#x27;);`</span>;</span><br><span class="line">    db.<span class="title function_">model</span>(<span class="string">&#x27;search_history&#x27;</span>).<span class="title function_">sql</span>(insertQuery,<span class="function">(<span class="params">err,insert_results</span>)=&gt;</span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">        res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">200</span>);</span><br><span class="line">      res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;搜索成功&#x27;</span>,<span class="attr">data</span>:search_data &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="图片接口-pictures"><a href="#图片接口-pictures" class="headerlink" title="图片接口 pictures"></a>图片接口 pictures</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//随机返回前端8张图片</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/pictures&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">const</span> sqlquery = <span class="string">`SELECT * FROM pictures ORDER BY RAND() LIMIT 8`</span>;</span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;pictures&#x27;</span>).<span class="title function_">sql</span>(sqlquery, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">200</span>);</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;返回8张图片&#x27;</span>, <span class="attr">pictures</span>:results&#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="动漫接口-anime"><a href="#动漫接口-anime" class="headerlink" title="动漫接口 anime"></a>动漫接口 anime</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//anime</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/anime&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="comment">//随机选取8个动漫</span></span><br><span class="line">  <span class="keyword">const</span> sqlquery = <span class="string">`SELECT video.id, video.name, video.description, video.cover, video_tag.name as tag FROM video,video_tag WHERE type = &#x27;动漫&#x27; and video.id = video_tag.video_id and video_tag.name &lt;&gt; &#x27;Unknown&#x27; ORDER BY RAND() LIMIT 8`</span></span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;video&#x27;</span>).<span class="title function_">sql</span>(sqlquery, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">200</span>);</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;随机选取8个动漫&#x27;</span>, <span class="attr">anime</span>:results&#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="电影接口-movie"><a href="#电影接口-movie" class="headerlink" title="电影接口 movie"></a>电影接口 movie</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//movie</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/movie&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="comment">//随机选取8个电影</span></span><br><span class="line">  <span class="keyword">const</span> sqlquery = <span class="string">`SELECT video.id, video.name, video.description, video.cover, video_tag.name as tag FROM video,video_tag WHERE type = &#x27;电影&#x27; and video.id = video_tag.video_id and video_tag.name &lt;&gt; &#x27;Unknown&#x27; ORDER BY RAND() LIMIT 8`</span></span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;video&#x27;</span>).<span class="title function_">sql</span>(sqlquery, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">200</span>);</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;随机选取8个电影&#x27;</span>, <span class="attr">movie</span>:results&#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="电视剧接口-tv"><a href="#电视剧接口-tv" class="headerlink" title="电视剧接口 tv"></a>电视剧接口 tv</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tv</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/tv&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="comment">//随机选取8个电视剧</span></span><br><span class="line">  <span class="keyword">const</span> sqlquery = <span class="string">`SELECT video.id, video.name, video.description, video.cover, video_tag.name as tag FROM video,video_tag WHERE type = &#x27;电视剧&#x27; and video.id = video_tag.video_id and video_tag.name &lt;&gt; &#x27;Unknown&#x27; ORDER BY RAND() LIMIT 8`</span></span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;video&#x27;</span>).<span class="title function_">sql</span>(sqlquery, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">200</span>);</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;随机选取8个电视剧&#x27;</span>, <span class="attr">tv</span>:results&#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="综艺接口-variety"><a href="#综艺接口-variety" class="headerlink" title="综艺接口 variety"></a>综艺接口 variety</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//variety</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/variety&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="comment">//随机选取8个综艺</span></span><br><span class="line">  <span class="keyword">const</span> sqlquery = <span class="string">`SELECT video.id, video.name, video.description, video.cover, video_tag.name as tag FROM video,video_tag WHERE type = &#x27;综艺&#x27; and video.id = video_tag.video_id and video_tag.name &lt;&gt; &#x27;Unknown&#x27; ORDER BY RAND() LIMIT 8`</span></span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;video&#x27;</span>).<span class="title function_">sql</span>(sqlquery, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">200</span>);</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;随机选取8个综艺&#x27;</span>, <span class="attr">variety</span>:results&#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="排行榜接口-rank"><a href="#排行榜接口-rank" class="headerlink" title="排行榜接口 rank"></a>排行榜接口 rank</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//排行榜</span></span><br><span class="line"><span class="comment">//由于非正式项目，故选择随机选取10个数据</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/rank&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="comment">//随机选取10个动漫</span></span><br><span class="line">  <span class="keyword">const</span> videoQuery1 = <span class="string">`SELECT video.id, video.name, video.cover, video_tag.name as tag FROM video,video_tag WHERE type = &#x27;动漫&#x27; and video.id = video_tag.video_id and video_tag.name &lt;&gt; &#x27;Unknown&#x27; ORDER BY RAND() LIMIT 10`</span></span><br><span class="line">  <span class="comment">//随机选取10个综艺</span></span><br><span class="line">  <span class="keyword">const</span> videoQuery2 = <span class="string">`SELECT video.id, video.name, video.cover, video_tag.name as tag FROM video,video_tag WHERE type = &#x27;综艺&#x27; and video.id = video_tag.video_id and video_tag.name &lt;&gt; &#x27;Unknown&#x27; ORDER BY RAND() LIMIT 10`</span></span><br><span class="line">  <span class="comment">//随机选取10个电视剧</span></span><br><span class="line">  <span class="keyword">const</span> videoQuery3 = <span class="string">`SELECT video.id, video.name, video.cover, video_tag.name as tag FROM video,video_tag WHERE type = &#x27;电视剧&#x27; and video.id = video_tag.video_id and video_tag.name &lt;&gt; &#x27;Unknown&#x27; ORDER BY RAND() LIMIT 10`</span></span><br><span class="line">  <span class="comment">//随机选取10个图片</span></span><br><span class="line">  <span class="keyword">const</span> pictureQuery = <span class="string">`SELECT * FROM pictures ORDER BY RAND() LIMIT 10`</span>;</span><br><span class="line">  <span class="comment">//随机选取10张播出表数据</span></span><br><span class="line">  <span class="keyword">const</span> rotateQuery = <span class="string">`SELECT video.id, video.name, video.cover, video_tag.name as tag FROM video,video_tag,video_round WHERE video.id = video_tag.video_id and video_tag.name &lt;&gt; &#x27;Unknown&#x27;  and video_round.video_id = video.id ORDER BY RAND() LIMIT 10`</span></span><br><span class="line">  <span class="comment">//第一次</span></span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;video&#x27;</span>).<span class="title function_">sql</span>(videoQuery1, <span class="function">(<span class="params">err, results1</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    video1 = results1;</span><br><span class="line">    <span class="comment">//第二次</span></span><br><span class="line">    db.<span class="title function_">model</span>(<span class="string">&#x27;video&#x27;</span>).<span class="title function_">sql</span>(videoQuery2, <span class="function">(<span class="params">err, results2</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">        res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//第三次</span></span><br><span class="line">      db.<span class="title function_">model</span>(<span class="string">&#x27;video&#x27;</span>).<span class="title function_">sql</span>(videoQuery3, <span class="function">(<span class="params">err, results3</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">          res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//第四次</span></span><br><span class="line">        db.<span class="title function_">model</span>(<span class="string">&#x27;pictures&#x27;</span>).<span class="title function_">sql</span>(pictureQuery, <span class="function">(<span class="params">err, results4</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (err) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">            res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="comment">//第五次</span></span><br><span class="line">          db.<span class="title function_">model</span>(<span class="string">&#x27;video_round&#x27;</span>).<span class="title function_">sql</span>(rotateQuery, <span class="function">(<span class="params">err, results5</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (err) &#123;</span><br><span class="line">              <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">              res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">              <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            res.<span class="title function_">status</span>(<span class="number">200</span>);</span><br><span class="line">          res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;排行榜&#x27;</span>, <span class="attr">anime</span>:results1, <span class="attr">variety</span>:results2, <span class="attr">TV</span>:results3, <span class="attr">pictures</span>:results4,<span class="attr">rotate</span>:results5&#125;);</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="播出表接口-rotate"><a href="#播出表接口-rotate" class="headerlink" title="播出表接口 rotate"></a>播出表接口 rotate</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//轮播表</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/rotate&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//从播出表中将每一天的播出video找出，共84个</span></span><br><span class="line">  <span class="keyword">const</span> sqlquery = <span class="string">`select video.id,video.name,video.cover from video_round,video,video_tag where video.id = video_tag.video_id and video_round.video_id = video.id`</span></span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;user&#x27;</span>).<span class="title function_">sql</span>(sqlquery, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">//将得到的84数据分开，由于按顺序读出，故12个数据即对应一天</span></span><br><span class="line">      <span class="keyword">const</span> smallArrays = [];</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; results.<span class="property">length</span>; i += <span class="number">12</span>) &#123;</span><br><span class="line">        smallArrays.<span class="title function_">push</span>(results.<span class="title function_">slice</span>(i, i + <span class="number">12</span>));</span><br><span class="line">      &#125;</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">200</span>);</span><br><span class="line">      res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>:<span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;轮播表&#x27;</span>, <span class="title class_">Monday</span>:smallArrays[<span class="number">0</span>], <span class="title class_">Tuesday</span>:smallArrays[<span class="number">1</span>], <span class="title class_">Wednesday</span>:smallArrays[<span class="number">2</span>], <span class="title class_">Thursday</span>:smallArrays[<span class="number">3</span>], <span class="title class_">Friday</span>:smallArrays[<span class="number">4</span>], <span class="title class_">Saturday</span>:smallArrays[<span class="number">5</span>], <span class="title class_">Sunday</span>:smallArrays[<span class="number">6</span>] &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="返回指定video-id信息-getVideoInfo"><a href="#返回指定video-id信息-getVideoInfo" class="headerlink" title="返回指定video_id信息 getVideoInfo"></a>返回指定video_id信息 getVideoInfo</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//返回video_url</span></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/getVideoInfo&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> video_id = req.<span class="property">body</span>.<span class="property">video_id</span>;</span><br><span class="line">  <span class="keyword">const</span> sqlquery = <span class="string">`SELECT video.name, video.type, video.year,video.area, video.description,video.episodes,video_tag.name as tag FROM video, video_tag WHERE video.id = video_tag.video_id AND video.id = &#x27;<span class="subst">$&#123;video_id&#125;</span>&#x27;`</span>;</span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;user&#x27;</span>).<span class="title function_">sql</span>(sqlquery, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;get_video_info&#x27;</span>, <span class="attr">results</span>:results[<span class="number">0</span>] &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="获取搜索记录-getHistory"><a href="#获取搜索记录-getHistory" class="headerlink" title="获取搜索记录 getHistory"></a>获取搜索记录 getHistory</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/getHistory&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">const</span> user_id = req.<span class="property">body</span>.<span class="property">user_id</span>;</span><br><span class="line">  <span class="keyword">if</span> (user_id === <span class="number">0</span>)&#123;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">json</span>(&#123;<span class="attr">code</span>:<span class="number">0</span>,<span class="attr">message</span>:<span class="string">&quot;user_id = 0&quot;</span>, <span class="attr">value</span>:[]&#125;);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> sqlquery = <span class="string">`select search_history.value from search_history where user_id = &#x27;<span class="subst">$&#123;user_id&#125;</span>&#x27;`</span>;</span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;user&#x27;</span>).<span class="title function_">sql</span>(sqlquery, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123;<span class="attr">code</span>:-<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">json</span>(&#123;<span class="attr">code</span>:<span class="number">0</span>,<span class="attr">message</span>:<span class="string">&quot;getHistory&quot;</span>, <span class="attr">data</span>:results&#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="发表评论接口-makeComment"><a href="#发表评论接口-makeComment" class="headerlink" title="发表评论接口 makeComment"></a>发表评论接口 makeComment</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/makeComment&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">const</span> &#123;video_id,content,user_id&#125; = req.<span class="property">body</span>;</span><br><span class="line">  <span class="keyword">if</span>(user_id === <span class="number">0</span>)&#123;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">json</span>(&#123;<span class="attr">code</span>:<span class="number">0</span>,<span class="attr">message</span>:<span class="string">&quot;请先登录再评论&quot;</span>&#125;);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> sqlquery = <span class="string">`insert into comment (video_id,content,user_id,createTime,commitLikeCount) VALUES(&#x27;<span class="subst">$&#123;video_id&#125;</span>&#x27;,&#x27;<span class="subst">$&#123;content&#125;</span>&#x27;,&#x27;<span class="subst">$&#123;user_id&#125;</span>&#x27;,NOW(),FLOOR(RAND() * 100))`</span>;</span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;comment&#x27;</span>).<span class="title function_">sql</span>(sqlquery, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123;<span class="attr">cosw</span>:-<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">json</span>(&#123;<span class="attr">code</span>:<span class="number">0</span>,<span class="attr">message</span>:<span class="string">&quot;评论成功&quot;</span>&#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="返回一级评论-getComment1"><a href="#返回一级评论-getComment1" class="headerlink" title="返回一级评论 getComment1"></a>返回一级评论 getComment1</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/getComment1&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> video_id = req.<span class="property">body</span>.<span class="property">video_id</span>;</span><br><span class="line">  <span class="keyword">const</span> pagenum = req.<span class="property">body</span>.<span class="property">pagenum</span> || <span class="number">1</span>; <span class="comment">// 如果未提供 pagenum 参数，默认为第一页</span></span><br><span class="line">  <span class="keyword">const</span> pagesize = req.<span class="property">body</span>.<span class="property">pagesize</span> || <span class="number">10</span>; <span class="comment">// 如果未提供 pagesize 参数，默认每页显示 10 条评论</span></span><br><span class="line">  <span class="keyword">const</span> offset = (pagenum - <span class="number">1</span>) * pagesize; <span class="comment">// 计算需要跳过的评论数量</span></span><br><span class="line">  <span class="comment">//获取评论总数</span></span><br><span class="line">  <span class="keyword">const</span> queryTotal = <span class="string">`SELECT COUNT(*) AS total FROM comment WHERE comment.video_id = &#x27;<span class="subst">$&#123;video_id&#125;</span>&#x27; AND comment.rootCommentID = 0`</span>;</span><br><span class="line">  <span class="comment">// 按照 createTime 降序排序查询符合条件的评论详细信息</span></span><br><span class="line">  <span class="keyword">const</span> queryByTime = <span class="string">`</span></span><br><span class="line"><span class="string">    SELECT comment.videoCommentID AS id, user.name AS nickname, content, DATE_FORMAT(createTime, &#x27;%Y-%m-%d %H:%i:%s&#x27;) AS createTime, commitLikeCount </span></span><br><span class="line"><span class="string">    FROM user, comment </span></span><br><span class="line"><span class="string">    WHERE video_id = &#x27;<span class="subst">$&#123;video_id&#125;</span>&#x27; AND user.id = comment.user_id AND comment.rootCommentID = 0</span></span><br><span class="line"><span class="string">    ORDER BY createTime ASC </span></span><br><span class="line"><span class="string">    LIMIT <span class="subst">$&#123;offset&#125;</span>, <span class="subst">$&#123;pagesize&#125;</span></span></span><br><span class="line"><span class="string">  `</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 按照 commitLikeCount 降序排序查询符合条件的评论详细信息</span></span><br><span class="line">  <span class="keyword">const</span> queryByHot = <span class="string">`</span></span><br><span class="line"><span class="string">    SELECT comment.videoCommentID AS id, user.name AS nickname, content, DATE_FORMAT(createTime, &#x27;%Y-%m-%d %H:%i:%s&#x27;) AS createTime, commitLikeCount </span></span><br><span class="line"><span class="string">    FROM user, comment </span></span><br><span class="line"><span class="string">    WHERE video_id = &#x27;<span class="subst">$&#123;video_id&#125;</span>&#x27; AND user.id = comment.user_id AND comment.rootCommentID = 0</span></span><br><span class="line"><span class="string">    ORDER BY commitLikeCount DESC, createTime ASC </span></span><br><span class="line"><span class="string">    LIMIT <span class="subst">$&#123;offset&#125;</span>, <span class="subst">$&#123;pagesize&#125;</span></span></span><br><span class="line"><span class="string">  `</span>;</span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;comment&#x27;</span>).<span class="title function_">sql</span>(queryByTime, <span class="function">(<span class="params">err, rowsByTime</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123; <span class="attr">code</span>: -<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    db.<span class="title function_">model</span>(<span class="string">&#x27;comment&#x27;</span>).<span class="title function_">sql</span>(queryByHot, <span class="function">(<span class="params">err, rowsByHot</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">        res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123; <span class="attr">code</span>: -<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      db.<span class="title function_">model</span>(<span class="string">&#x27;comment&#x27;</span>).<span class="title function_">sql</span>(queryTotal, <span class="function">(<span class="params">err, total</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">          res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123; <span class="attr">code</span>: -<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;查询成功&#x27;</span>, <span class="attr">total</span>:total[<span class="number">0</span>].<span class="property">total</span>, rowsByTime, rowsByHot &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="返回二级评论-getComment2"><a href="#返回二级评论-getComment2" class="headerlink" title="返回二级评论 getComment2"></a>返回二级评论 getComment2</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/getComment2&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> videoCommentid = req.<span class="property">body</span>.<span class="property">videoCommentid</span>;</span><br><span class="line">  <span class="keyword">const</span> pagenum = req.<span class="property">body</span>.<span class="property">pagenum</span> || <span class="number">1</span>; <span class="comment">// 如果未提供 pagenum 参数，默认为第一页</span></span><br><span class="line">  <span class="keyword">const</span> pagesize = req.<span class="property">body</span>.<span class="property">pagesize</span> || <span class="number">10</span>; <span class="comment">// 如果未提供 pagesize 参数，默认每页显示 10 条评论</span></span><br><span class="line">  <span class="keyword">const</span> state = req.<span class="property">body</span>.<span class="property">state</span> || <span class="string">&quot;createtime&quot;</span>;</span><br><span class="line">  <span class="keyword">const</span> offset = (pagenum - <span class="number">1</span>) * pagesize; <span class="comment">// 计算需要跳过的评论数量</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 查询符合条件的评论总数</span></span><br><span class="line">  <span class="keyword">const</span> sqlquery1 = <span class="string">`SELECT COUNT(*) AS total FROM comment WHERE comment.rootCommentID = &#x27;<span class="subst">$&#123;videoCommentid&#125;</span>&#x27;`</span>;</span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;comment&#x27;</span>).<span class="title function_">sql</span>(sqlquery1, <span class="function">(<span class="params">err, results1</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123; <span class="attr">code</span>: -<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询符合条件的评论详细信息，并按照 createTime 降序或者 commitLikeCount 降序排序</span></span><br><span class="line">    <span class="keyword">let</span> orderBy = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (state === <span class="string">&#x27;hot&#x27;</span>) &#123;</span><br><span class="line">      orderBy = <span class="string">&#x27;ORDER BY commitLikeCount ASC, createTime ASC&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (state === <span class="string">&#x27;time&#x27;</span>) &#123;</span><br><span class="line">      orderBy = <span class="string">&#x27;ORDER BY createTime ASC&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> sqlquery2 = <span class="string">`</span></span><br><span class="line"><span class="string">      SELECT comment.videoCommentID AS id, user.name AS nickname, content, DATE_FORMAT(createTime, &#x27;%Y-%m-%d %H:%i:%s&#x27;) AS createTime, commitLikeCount </span></span><br><span class="line"><span class="string">      FROM user, comment </span></span><br><span class="line"><span class="string">      WHERE rootCommentID = &#x27;<span class="subst">$&#123;videoCommentid&#125;</span>&#x27; AND user.id = comment.user_id </span></span><br><span class="line"><span class="string">      <span class="subst">$&#123;orderBy&#125;</span> </span></span><br><span class="line"><span class="string">      LIMIT <span class="subst">$&#123;offset&#125;</span>, <span class="subst">$&#123;pagesize&#125;</span></span></span><br><span class="line"><span class="string">    `</span>;</span><br><span class="line">    db.<span class="title function_">model</span>(<span class="string">&#x27;comment&#x27;</span>).<span class="title function_">sql</span>(sqlquery2, <span class="function">(<span class="params">err, results2</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">        res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123; <span class="attr">code</span>: -<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">const</span> total = results1[<span class="number">0</span>].<span class="property">total</span>; <span class="comment">// 总评论数</span></span><br><span class="line">      <span class="keyword">const</span> rows = results2; <span class="comment">// 当前页评论数据</span></span><br><span class="line"></span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;查询成功&#x27;</span>, total, rows &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="获取url-getUrl"><a href="#获取url-getUrl" class="headerlink" title="获取url getUrl"></a>获取url getUrl</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/getUrl&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">const</span> video_id = req.<span class="property">body</span>.<span class="property">video_id</span></span><br><span class="line">  <span class="keyword">const</span> sqlquery = <span class="string">`SELECT video_episodes.episodes, MIN(video_episodes.url) AS url FROM video_episodes INNER JOIN video_road ON video_road.id = video_episodes.road_id INNER JOIN video ON video.id = video_road.video_id WHERE video.id = &#x27;<span class="subst">$&#123;video_id&#125;</span>&#x27; GROUP BY video_episodes.episodes ORDER BY episodes;`</span></span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;video_episodes&#x27;</span>).<span class="title function_">sql</span>(sqlquery, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123;<span class="attr">cosw</span>:-<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">json</span>(&#123;<span class="attr">code</span>:<span class="number">0</span>, <span class="attr">message</span>:<span class="string">&quot;GETURL&quot;</span>, <span class="attr">data</span>:results&#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;导包&quot;&gt;&lt;a href=&quot;#导包&quot; class=&quot;headerlink&quot; title=&quot;导包&quot;&gt;&lt;/a&gt;导包&lt;/h3&gt;&lt;p&gt;导入express&lt;br&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=</summary>
      
    
    
    
    <category term="后端" scheme="https://unspman.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Node.js" scheme="https://unspman.github.io/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>Node.js(14.Nodejs中使用jwt(JSON Web Token)模块)</title>
    <link href="https://unspman.github.io/posts/ab1892.html"/>
    <id>https://unspman.github.io/posts/ab1892.html</id>
    <published>2023-01-14T00:00:00.000Z</published>
    <updated>2023-12-25T00:42:40.209Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装jwt模块："><a href="#安装jwt模块：" class="headerlink" title="安装jwt模块："></a>安装jwt模块：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i jsonwebtoken</span><br></pre></td></tr></table></figure><h3 id="编写"><a href="#编写" class="headerlink" title="编写"></a>编写</h3><p>token.js:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.安装jsonwebtoken</span></span><br><span class="line"><span class="comment">//2.使用jwt中的两个方法来加密和解密token</span></span><br><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&#x27;jsonwebtoken&#x27;</span>);</span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;dotenv&#x27;</span>).<span class="title function_">config</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Token</span> = &#123;</span><br><span class="line">  <span class="title function_">encode</span>(<span class="params">payload</span>) &#123;<span class="comment">//加密token</span></span><br><span class="line">    <span class="comment">// jwt.sign(param1,param2); param1:加密的内容；param2:解密的密钥</span></span><br><span class="line">    <span class="keyword">const</span> token = jwt.<span class="title function_">sign</span>(payload, process.<span class="property">env</span>.<span class="property">SECRET_KEY</span>);</span><br><span class="line">    <span class="keyword">return</span> token;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">decode</span>(<span class="params">token</span>) &#123;<span class="comment">//解密token</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">//jwt.verify(param1,param2); param1:解密的对象；param2:解密的密钥</span></span><br><span class="line">      <span class="keyword">const</span> payload = jwt.<span class="title function_">verify</span>(token, process.<span class="property">env</span>.<span class="property">SECRET_KEY</span>);</span><br><span class="line">      <span class="keyword">return</span> payload;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">Token</span>;</span><br></pre></td></tr></table></figure></p><h3 id="使用token实现登录接口-免密登录"><a href="#使用token实现登录接口-免密登录" class="headerlink" title="使用token实现登录接口(免密登录)"></a>使用token实现登录接口(免密登录)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/login&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 获取参数</span></span><br><span class="line">  <span class="keyword">const</span> &#123; username, password, token &#125; = req.<span class="property">body</span>;</span><br><span class="line">  <span class="comment">//免密登录：</span></span><br><span class="line">  <span class="comment">// 如果有token，则尝试解密</span></span><br><span class="line">  <span class="keyword">if</span> (token) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> decoded = <span class="title class_">Token</span>.<span class="title function_">decode</span>(token);</span><br><span class="line">      <span class="keyword">if</span> (decoded.<span class="property">username</span> === username) &#123;</span><br><span class="line">        <span class="comment">// 如果解密成功，且用户名与请求一致，则返回登录成功</span></span><br><span class="line">        res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;登录成功&#x27;</span>, <span class="attr">token</span>: token &#125;);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      res.<span class="title function_">send</span>(<span class="string">&quot;解密失败&quot;</span>)</span><br><span class="line">      <span class="comment">// 如果解密失败，或用户名不一致，则忽略token，进行下一步验证</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 验证用户名和密码</span></span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;user&#x27;</span>).<span class="title function_">sql</span>(<span class="string">`SELECT COUNT(*) as count FROM user WHERE name=&#x27;<span class="subst">$&#123;username&#125;</span>&#x27; AND password=<span class="subst">$&#123;password&#125;</span>`</span>, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (results[<span class="number">0</span>].<span class="property">count</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">// 生成新的token返回给客户端</span></span><br><span class="line">      <span class="keyword">const</span> payload = &#123; username &#125;;</span><br><span class="line">      <span class="keyword">const</span> newToken = <span class="title class_">Token</span>.<span class="title function_">encode</span>(payload);</span><br><span class="line">      res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;登录成功&#x27;</span>, <span class="attr">token</span>: newToken &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: -<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;用户名或密码错误&#x27;</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;安装jwt模块：&quot;&gt;&lt;a href=&quot;#安装jwt模块：&quot; class=&quot;headerlink&quot; title=&quot;安装jwt模块：&quot;&gt;&lt;/a&gt;安装jwt模块：&lt;/h3&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t</summary>
      
    
    
    
    <category term="后端" scheme="https://unspman.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Node.js" scheme="https://unspman.github.io/tags/Node-js/"/>
    
  </entry>
  
</feed>
