<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>UnSpMan</title>
  
  <subtitle>无敌于世间</subtitle>
  <link href="https://unspman.github.io/atom.xml" rel="self"/>
  
  <link href="https://unspman.github.io/"/>
  <updated>2023-04-20T13:04:26.767Z</updated>
  <id>https://unspman.github.io/</id>
  
  <author>
    <name>佩奇</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>word</title>
    <link href="https://unspman.github.io/posts/c3f17511.html"/>
    <id>https://unspman.github.io/posts/c3f17511.html</id>
    <published>2023-03-06T11:29:30.000Z</published>
    <updated>2023-04-20T13:04:26.767Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-中英混合时，一行很多莫名空格："><a href="#1-中英混合时，一行很多莫名空格：" class="headerlink" title="1.中英混合时，一行很多莫名空格："></a>1.中英混合时，一行很多莫名空格：</h4><p>选中字段—&gt;右键—&gt;段落(若在单元格内则无段落选项)—&gt;换行和分页—&gt;允许西文换行</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;1-中英混合时，一行很多莫名空格：&quot;&gt;&lt;a href=&quot;#1-中英混合时，一行很多莫名空格：&quot; class=&quot;headerlink&quot; title=&quot;1.中英混合时，一行很多莫名空格：&quot;&gt;&lt;/a&gt;1.中英混合时，一行很多莫名空格：&lt;/h4&gt;&lt;p&gt;选中字段—&amp;gt;右</summary>
      
    
    
    
    <category term="tips" scheme="https://unspman.github.io/categories/tips/"/>
    
    
    <category term="tips" scheme="https://unspman.github.io/tags/tips/"/>
    
  </entry>
  
  <entry>
    <title>spider02(BeautifulSoup使用)</title>
    <link href="https://unspman.github.io/posts/fc6d79d7.html"/>
    <id>https://unspman.github.io/posts/fc6d79d7.html</id>
    <published>2023-03-05T11:29:30.000Z</published>
    <updated>2023-04-20T13:04:26.767Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装bs4"><a href="#安装bs4" class="headerlink" title="安装bs4"></a>安装bs4</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install bs4</span><br></pre></td></tr></table></figure><h3 id="使用BeautifulSoup解析HTML内容"><a href="#使用BeautifulSoup解析HTML内容" class="headerlink" title="使用BeautifulSoup解析HTML内容"></a>使用BeautifulSoup解析HTML内容</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="comment">#发送一个get请求获取网页内容（源码）</span></span><br><span class="line">content = requests.get(<span class="string">&quot;http://books.toscrape.com/&quot;</span>).text</span><br><span class="line"><span class="comment"># BeautifulSoup解析html内容 html.parser是解析器</span></span><br><span class="line">soup = BeautifulSoup(content, <span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line"><span class="comment">#通过findAll方法寻找网页所有符合class=price_color 的 p标签内容</span></span><br><span class="line">all_prices = soup.findAll(<span class="string">&quot;p&quot;</span>, attrs=&#123;<span class="string">&quot;class&quot;</span>: <span class="string">&quot;price_color&quot;</span>&#125;)</span><br><span class="line"><span class="comment"># 获取该页面上的价格信息</span></span><br><span class="line"><span class="keyword">for</span> price <span class="keyword">in</span> all_prices:</span><br><span class="line">    <span class="built_in">print</span>(price.string[<span class="number">2</span>:])</span><br><span class="line"><span class="comment">#通过findAll方法寻找网页所有h3标签内容</span></span><br><span class="line">all_titles = soup.findAll(<span class="string">&quot;h3&quot;</span>)</span><br><span class="line"><span class="comment"># 获取该页面上的书名信息</span></span><br><span class="line"><span class="keyword">for</span> title <span class="keyword">in</span> all_titles:</span><br><span class="line">    <span class="comment">#找到 h3 内容中的所有a标签内容</span></span><br><span class="line">    link = title.find(<span class="string">&quot;a&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(link.string)</span><br><span class="line">    <span class="comment"># A Light in the ...</span></span><br><span class="line">    <span class="comment"># Tipping the Velvet</span></span><br><span class="line">    <span class="comment"># Soumission</span></span><br><span class="line">    <span class="comment"># Sharp Objects</span></span><br><span class="line">    <span class="comment"># .....</span></span><br></pre></td></tr></table></figure><h3 id="使用BeautifulSoup-爬取豆瓣top250电影"><a href="#使用BeautifulSoup-爬取豆瓣top250电影" class="headerlink" title="使用BeautifulSoup 爬取豆瓣top250电影"></a>使用BeautifulSoup 爬取豆瓣top250电影</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#爬取豆瓣电影top250的电影</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36 Edg/111.0.1661.54&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> start_num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">250</span>,<span class="number">25</span>):</span><br><span class="line">    response = requests.get(<span class="string">f&quot;https://movie.douban.com/top250?start=<span class="subst">&#123;start_num&#125;</span>&quot;</span>,headers=headers)</span><br><span class="line">    html = response.text</span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line">    <span class="comment">#找到所有span中的 class = class的内容</span></span><br><span class="line">    all_titles = soup.findAll(<span class="string">&quot;span&quot;</span>,attrs=&#123;<span class="string">&quot;class&quot;</span>: <span class="string">&quot;title&quot;</span>&#125;)</span><br><span class="line">    <span class="keyword">for</span> title <span class="keyword">in</span> all_titles:</span><br><span class="line">        title_string = title.string</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;/&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> title_string:</span><br><span class="line">            <span class="built_in">print</span>(title_string)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;安装bs4&quot;&gt;&lt;a href=&quot;#安装bs4&quot; class=&quot;headerlink&quot; title=&quot;安装bs4&quot;&gt;&lt;/a&gt;安装bs4&lt;/h3&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut</summary>
      
    
    
    
    <category term="spider" scheme="https://unspman.github.io/categories/spider/"/>
    
    
    <category term="spider" scheme="https://unspman.github.io/tags/spider/"/>
    
  </entry>
  
  <entry>
    <title>spider03(正则表达式)</title>
    <link href="https://unspman.github.io/posts/ae9458fc.html"/>
    <id>https://unspman.github.io/posts/ae9458fc.html</id>
    <published>2023-03-05T11:29:30.000Z</published>
    <updated>2023-04-20T13:04:26.767Z</updated>
    
    <content type="html"><![CDATA[<p>学习自：<a href="https://www.bilibili.com/video/BV1da4y1p7iZ/?spm_id_from=333.999.0.0&amp;vd_source=3ba8e5c6f208a2b08d0e0bc4fc3e280f">奇乐编程学院：10分钟快速掌握正则表达式</a></p><h2 id="限定符"><a href="#限定符" class="headerlink" title="限定符"></a>限定符</h2><h4 id=""><a href="#" class="headerlink" title="?"></a>?</h4><p>前一个字符有 0 - 1 个<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311614816.png" alt=""></p><h4 id="-1"><a href="#-1" class="headerlink" title="*"></a>*</h4><p>前一个字符有 0 - n 个<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311614043.png" alt=""></p><h4 id="-2"><a href="#-2" class="headerlink" title="+"></a>+</h4><p>前一个字符有 1 - n 个<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311615856.png" alt=""></p><h4 id="x-y"><a href="#x-y" class="headerlink" title="{x,y}"></a>{x,y}</h4><p>前一个字符出现 x 到 y 次 (包括 x 次和 y 次)<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311617953.png" alt=""></p><h4 id="x"><a href="#x" class="headerlink" title="{x,}"></a>{x,}</h4><p>前一个字符出现 x 次以上<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311616895.png" alt=""></p><h4 id="mn"><a href="#mn" class="headerlink" title="(mn)"></a>(mn)</h4><p>多个字符匹配<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311623128.png" alt=""></p><h2 id="或运算符"><a href="#或运算符" class="headerlink" title="或运算符"></a>或运算符</h2><h4 id="m-n"><a href="#m-n" class="headerlink" title="(m|n)"></a>(m|n)</h4><p>匹配 m 或者 n<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311624473.png" alt=""><br>如果不写括号，则变成 a cat 或者 dog<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311625116.png" alt=""></p><h2 id="字符类"><a href="#字符类" class="headerlink" title="字符类"></a>字符类</h2><h4 id="xyz"><a href="#xyz" class="headerlink" title="[xyz]"></a><code>[xyz]</code></h4><p>匹配字符来自于 [] 中的内容<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311626566.png" alt=""></p><h4 id="a-zA-Z0-9"><a href="#a-zA-Z0-9" class="headerlink" title="[a-zA-Z0-9]"></a><code>[a-zA-Z0-9]</code></h4><p>匹配符合 a-z、A-Z、0-9 的字符<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311627790.png" alt=""></p><h4 id="a-zA-Z0-9-组合使用"><a href="#a-zA-Z0-9-组合使用" class="headerlink" title="[a-zA-Z0-9] 组合使用"></a><code>[a-zA-Z0-9] 组合使用</code></h4><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311627516.png" alt=""></p><h4 id="xyz-1"><a href="#xyz-1" class="headerlink" title="[ ^xyz]"></a><code>[ ^xyz]</code></h4><p>所有不符合 [] 中得内容<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311628335.png" alt=""></p><h2 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h2><h4 id="d"><a href="#d" class="headerlink" title="\d"></a>\d</h4><p>数字<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311628340.png" alt=""></p><h4 id="w"><a href="#w" class="headerlink" title="\w"></a>\w</h4><p>字母、数字、下划线<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311629833.png" alt=""></p><h4 id="s"><a href="#s" class="headerlink" title="\s"></a>\s</h4><p>空白符 (包含 tab 和 换行符)<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311630235.png" alt=""></p><h4 id="D"><a href="#D" class="headerlink" title="\D"></a>\D</h4><p>非数字字符<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311630330.png" alt=""></p><h4 id="W"><a href="#W" class="headerlink" title="\W"></a>\W</h4><p>非数字、字母、下划线<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311631364.png" alt=""></p><h4 id="S"><a href="#S" class="headerlink" title="\S"></a>\S</h4><p>非空白符<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311632174.png" alt=""></p><h4 id="-3"><a href="#-3" class="headerlink" title="."></a>.</h4><p>任意字符，不包含换行符<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311632940.png" alt=""></p><h4 id="-4"><a href="#-4" class="headerlink" title="^"></a>^</h4><p>匹配行首<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311633296.png" alt=""></p><h4 id="-5"><a href="#-5" class="headerlink" title="$"></a>$</h4><p>匹配行尾<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311633772.png" alt=""></p><h2 id="贪婪与懒惰匹配"><a href="#贪婪与懒惰匹配" class="headerlink" title="贪婪与懒惰匹配"></a>贪婪与懒惰匹配</h2><p>贪婪匹配：尽可能多地匹配字符<br>懒惰匹配：即匹配尽可能少的字符，但是要匹配出所有的结果<br>当想要匹配带有 &lt;&gt; 的字符时，根据之前的知识可以这样写<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311639012.png" alt=""><br>由于 的 &lt; 和 的 &gt; 匹配上了，因此导致 Content = “ClickMe” 也被匹配上。</p><p>因此可以加上 ？ 使得该匹配由 贪婪匹配 变为 懒惰匹配，从而达到想要的效果<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311640787.png" alt=""></p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>匹配所有十六进制的 RGB 颜色值<br>条件<br>1.＃<br>2.a - f 或 A - F<br>3.0 - 9<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303311641973.png" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;学习自：&lt;a href=&quot;https://www.bilibili.com/video/BV1da4y1p7iZ/?spm_id_from=333.999.0.0&amp;amp;vd_source=3ba8e5c6f208a2b08d0e0bc4fc3e280f&quot;&gt;奇乐编程学院：</summary>
      
    
    
    
    <category term="spider" scheme="https://unspman.github.io/categories/spider/"/>
    
    
    <category term="spider" scheme="https://unspman.github.io/tags/spider/"/>
    
  </entry>
  
  <entry>
    <title>spider01(requests+html使用)</title>
    <link href="https://unspman.github.io/posts/f16535de.html"/>
    <id>https://unspman.github.io/posts/f16535de.html</id>
    <published>2023-03-04T11:29:30.000Z</published>
    <updated>2023-04-20T13:04:26.767Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用Requests发送请求"><a href="#使用Requests发送请求" class="headerlink" title="使用Requests发送请求"></a>使用Requests发送请求</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="comment">#设置请求头 模拟网页请求</span></span><br><span class="line">head = &#123;<span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64)&quot;</span>&#125;</span><br><span class="line"><span class="comment"># 获取网页内容</span></span><br><span class="line">response = requests.get(<span class="string">&quot;http://yhdm86.com/&quot;</span>,header=head)</span><br><span class="line"><span class="keyword">if</span> response.ok:</span><br><span class="line">    <span class="built_in">print</span>(response.text)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;请求失败&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="使用Requests拿到豆瓣top250源码"><a href="#使用Requests拿到豆瓣top250源码" class="headerlink" title="使用Requests拿到豆瓣top250源码"></a>使用Requests拿到豆瓣top250源码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#爬取豆瓣电影top250的电影</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36 Edg/111.0.1661.54&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">response = requests.get(<span class="string">&quot;https://movie.douban.com/top250&quot;</span>,headers=headers)</span><br><span class="line"><span class="built_in">print</span>(response.status_code) <span class="comment">#status_code表示返回的状态码 418 没添加请求头别人不服务爬虫，200表示请求成功</span></span><br><span class="line"><span class="built_in">print</span>(response.text) <span class="comment"># text表示获取网页的源码</span></span><br></pre></td></tr></table></figure><h3 id="HTML常用标签"><a href="#HTML常用标签" class="headerlink" title="HTML常用标签"></a>HTML常用标签</h3><h4 id="标题标签-lt-h-gt"><a href="#标题标签-lt-h-gt" class="headerlink" title="标题标签&lt;h&gt;"></a><code>标题标签&lt;h&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是一个一级标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>这是一个二级标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>这是一个三级标题<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>这是一个四级标题<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>这是一个五级标题<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>这是一个六级标题<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303302150518.jpg" alt=""></p><h4 id="文本段落标签-lt-p-gt"><a href="#文本段落标签-lt-p-gt" class="headerlink" title="文本段落标签&lt;p&gt;"></a><code>文本段落标签&lt;p&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个文本段落标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303302151335.jpg" alt=""></p><h4 id="换行标签-lt-br-gt"><a href="#换行标签-lt-br-gt" class="headerlink" title="换行标签&lt;br&gt;"></a><code>换行标签&lt;br&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个文<span class="tag">&lt;<span class="name">br</span>&gt;</span>本段落标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303302152330.jpg" alt=""></p><h4 id="加粗标签-lt-b-gt"><a href="#加粗标签-lt-b-gt" class="headerlink" title="加粗标签&lt;b&gt;"></a><code>加粗标签&lt;b&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是<span class="tag">&lt;<span class="name">b</span>&gt;</span>一个<span class="tag">&lt;/<span class="name">b</span>&gt;</span>文本段落标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303302153599.jpg" alt=""></p><h4 id="斜体标签-lt-i-gt"><a href="#斜体标签-lt-i-gt" class="headerlink" title="斜体标签&lt;i&gt;"></a><code>斜体标签&lt;i&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是<span class="tag">&lt;<span class="name">i</span>&gt;</span>一个<span class="tag">&lt;/<span class="name">i</span>&gt;</span>文本段落标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303302154834.jpg" alt=""></p><h4 id="下划线标签-lt-u-gt"><a href="#下划线标签-lt-u-gt" class="headerlink" title="下划线标签&lt;u&gt;"></a><code>下划线标签&lt;u&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是<span class="tag">&lt;<span class="name">u</span>&gt;</span>一个<span class="tag">&lt;/<span class="name">u</span>&gt;</span>文本段落标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303302155241.jpg" alt=""></p><h4 id="图片标签-lt-img-gt"><a href="#图片标签-lt-img-gt" class="headerlink" title="图片标签&lt;img&gt;"></a><code>图片标签&lt;img&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://images.unsplash.com/photo-1609515602287-8470b8d9ac11&quot;</span> <span class="attr">width</span>=<span class="string">&quot;500px&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303302155205.jpg" alt=""></p><h4 id="链接标签-lt-a-gt"><a href="#链接标签-lt-a-gt" class="headerlink" title="链接标签&lt;a&gt;"></a><code>链接标签&lt;a&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://space.bilibili.com/523995133&quot;</span>&gt;</span>我的主页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303302156421.jpg" alt=""></p><h4 id="容器标签-lt-div-gt-lt-span-gt"><a href="#容器标签-lt-div-gt-lt-span-gt" class="headerlink" title="容器标签&lt;div&gt;&lt;span&gt;"></a><code>容器标签&lt;div&gt;&lt;span&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://baidu.com&quot;</span>&gt;</span>div元素下的链接1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://baidu.com&quot;</span>&gt;</span>div元素下的链接2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://baidu.com&quot;</span>&gt;</span>span元素下的链接1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://baidu.com&quot;</span>&gt;</span>span元素下的链接2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303302157107.jpg" alt=""></p><h4 id="有序列表标签-lt-ol-gt-，列表元素标签-lt-li-gt"><a href="#有序列表标签-lt-ol-gt-，列表元素标签-lt-li-gt" class="headerlink" title="有序列表标签&lt;ol&gt;，列表元素标签&lt;li&gt;"></a><code>有序列表标签&lt;ol&gt;，列表元素标签&lt;li&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>语文<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>数学<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>英语<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303302157459.jpg" alt=""></p><h4 id="无序列表标签-lt-ul-gt"><a href="#无序列表标签-lt-ul-gt" class="headerlink" title="无序列表标签&lt;ul&gt;"></a><code>无序列表标签&lt;ul&gt;</code></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>语文<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>数学<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>英语<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303302158680.jpg" alt=""></p><h4 id="表格标签-lt-table-gt"><a href="#表格标签-lt-table-gt" class="headerlink" title="表格标签&lt;table&gt;"></a><code>表格标签&lt;table&gt;</code></h4><p><code>表格标签：&lt;table&gt;</code></p><p><code>表格头部：&lt;thread&gt;</code></p><p><code>表格主体：&lt;tbody&gt;</code></p><p><code>表格行：&lt;tr&gt;</code></p><p><code>单元格：&lt;td&gt;</code><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>表头1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>表头2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>111<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>222<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>333<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>444<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303302159460.jpg" alt=""></p><h4 id="class属性"><a href="#class属性" class="headerlink" title="class属性"></a>class属性</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span>给岁月以文明<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span>而不是给文明以岁月<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;review&quot;</span>&gt;</span>五星好评！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303302200668.jpg" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;使用Requests发送请求&quot;&gt;&lt;a href=&quot;#使用Requests发送请求&quot; class=&quot;headerlink&quot; title=&quot;使用Requests发送请求&quot;&gt;&lt;/a&gt;使用Requests发送请求&lt;/h3&gt;&lt;figure class=&quot;highlight </summary>
      
    
    
    
    <category term="spider" scheme="https://unspman.github.io/categories/spider/"/>
    
    
    <category term="spider" scheme="https://unspman.github.io/tags/spider/"/>
    
  </entry>
  
  <entry>
    <title>spider</title>
    <link href="https://unspman.github.io/posts/6ad76a84.html"/>
    <id>https://unspman.github.io/posts/6ad76a84.html</id>
    <published>2023-03-03T11:29:30.000Z</published>
    <updated>2023-04-20T13:04:26.767Z</updated>
    
    <content type="html"><![CDATA[<h3 id="基本格式"><a href="#基本格式" class="headerlink" title="基本格式:"></a>基本格式:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    url = <span class="string">&#x27;https://www.sogou.com/web&#x27;</span></span><br><span class="line">    kw = <span class="built_in">input</span>(<span class="string">&#x27;enter a word:&#x27;</span>)</span><br><span class="line">    param = &#123;</span><br><span class="line">        <span class="string">&#x27;query&#x27;</span>:kw</span><br><span class="line">    &#125;</span><br><span class="line">    header = &#123;</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36 Edg/110.0.1587.57&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    response = requests.get(url=url, params=param, headers=header)</span><br><span class="line">    page_text = response.text</span><br><span class="line">    fileName = kw+<span class="string">&#x27;.html&#x27;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(fileName, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        fp.write(page_text)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;over!&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="常用库-BeautifulSoup，requests"><a href="#常用库-BeautifulSoup，requests" class="headerlink" title="常用库 BeautifulSoup，requests"></a>常用库 BeautifulSoup，requests</h3><p>eg:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入必要的库</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送请求并获取网页内容</span></span><br><span class="line">url = <span class="string">&quot;https://www.example.com&quot;</span></span><br><span class="line">response = requests.get(url)</span><br><span class="line">content = response.content</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解析网页内容</span></span><br><span class="line">soup = BeautifulSoup(content, <span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 找到需要的元素</span></span><br><span class="line">element = soup.find(<span class="string">&quot;div&quot;</span>, &#123;<span class="string">&quot;class&quot;</span>: <span class="string">&quot;example-class&quot;</span>&#125;)</span><br><span class="line"><span class="keyword">if</span> element:</span><br><span class="line">    <span class="comment"># 提取需要的信息</span></span><br><span class="line">    info = element.text.strip()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    info = <span class="string">&quot;Not found&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(info)</span><br></pre></td></tr></table></figure></p><h3 id="常用库-BeautifulSoup，requests使用实例"><a href="#常用库-BeautifulSoup，requests使用实例" class="headerlink" title="常用库 BeautifulSoup，requests使用实例"></a>常用库 BeautifulSoup，requests使用实例</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_anime_info</span>(<span class="params">url</span>):</span><br><span class="line">    response = requests.get(url)</span><br><span class="line">    soup = BeautifulSoup(response.text, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    title_tag = soup.find(<span class="string">&#x27;dt&#x27;</span>, class_=<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> title_tag:</span><br><span class="line">        name = title_tag.text.strip()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        name = <span class="string">&#x27;Unknown&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取集数</span></span><br><span class="line">    episode_tag = soup.find(<span class="string">&#x27;dd&#x27;</span>, text=re.<span class="built_in">compile</span>(<span class="string">&#x27;更新至&#x27;</span>))</span><br><span class="line">    <span class="keyword">if</span> episode_tag:</span><br><span class="line">        episode = episode_tag.text.strip().replace(<span class="string">&#x27;更新至&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        episode = <span class="string">&#x27;Unknown&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取地区</span></span><br><span class="line">    area_tag = soup.find(<span class="string">&#x27;b&#x27;</span>, text=<span class="string">&#x27;地区：&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> area_tag:</span><br><span class="line">        area = area_tag.nextSibling.strip()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        area = <span class="string">&#x27;Unknown&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取年份</span></span><br><span class="line">    year_tag = soup.find(<span class="string">&#x27;b&#x27;</span>, text=<span class="string">&#x27;年代：&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> year_tag:</span><br><span class="line">        year = year_tag.nextSibling.strip()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        year = <span class="string">&#x27;Unknown&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取类型</span></span><br><span class="line">    type_tags = soup.find_all(<span class="string">&#x27;a&#x27;</span>, target=<span class="string">&quot;_blank&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> type_tags:</span><br><span class="line">        anime_type = [t.text.strip() <span class="keyword">for</span> t <span class="keyword">in</span> type_tags]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        anime_type = [<span class="string">&#x27;Unknown&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取简介</span></span><br><span class="line">    description_tag = soup.find(<span class="string">&#x27;div&#x27;</span>, &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;des2&#x27;</span>&#125;)</span><br><span class="line">    <span class="keyword">if</span> description_tag:</span><br><span class="line">        description = description_tag.text.strip()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        description = <span class="string">&#x27;Unknown&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取封面图片</span></span><br><span class="line">    img_tag = soup.find(<span class="string">&#x27;img&#x27;</span>, &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;lazy&#x27;</span>&#125;)</span><br><span class="line">    <span class="keyword">if</span> img_tag:</span><br><span class="line">        img_url = img_tag.get(<span class="string">&#x27;data-original&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        img_url = [<span class="string">&#x27;Unknown&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取类型元素</span></span><br><span class="line">    <span class="comment"># 找到class为&quot;h2&quot;的元素</span></span><br><span class="line">    h2_element = soup.find(<span class="string">&#x27;div&#x27;</span>, class_=<span class="string">&#x27;h2&#x27;</span>)</span><br><span class="line">    <span class="comment"># 找到&lt;a&gt;标签并获取其文本内容</span></span><br><span class="line">    a_element = h2_element.find(<span class="string">&#x27;a&#x27;</span>, href=<span class="string">&#x27;/acg/&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> a_element:</span><br><span class="line">        type_text = a_element.text.strip()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        type_text = <span class="string">&#x27;Unknown&#x27;</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> name, episode, area, year, img_url, anime_type, type_text, description</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;基本格式&quot;&gt;&lt;a href=&quot;#基本格式&quot; class=&quot;headerlink&quot; title=&quot;基本格式:&quot;&gt;&lt;/a&gt;基本格式:&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;</summary>
      
    
    
    
    <category term="spider" scheme="https://unspman.github.io/categories/spider/"/>
    
    
    <category term="spider" scheme="https://unspman.github.io/tags/spider/"/>
    
  </entry>
  
  <entry>
    <title>Anaconda使用</title>
    <link href="https://unspman.github.io/posts/feaec37.html"/>
    <id>https://unspman.github.io/posts/feaec37.html</id>
    <published>2023-03-02T11:29:30.000Z</published>
    <updated>2023-04-20T13:04:26.763Z</updated>
    
    <content type="html"><![CDATA[<h3 id="anaconda-安装"><a href="#anaconda-安装" class="headerlink" title="anaconda 安装"></a>anaconda 安装</h3><p><a href="https://www.anaconda.com/products/distribution#macos">官网下载(非常慢不推荐)</a><br><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/">清华大学镜像站下载</a><br><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-5.2.0-Windows-x86_64.exe">个人使用版本</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141049189.png" alt="1"><br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141050191.png" alt="2"><br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141050059.png" alt="3"><br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141050496.png" alt="4"><br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141050718.png" alt="5"></p><h4 id="测试安装"><a href="#测试安装" class="headerlink" title="测试安装"></a>测试安装</h4><p>cmd输入<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda --version</span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20200108134410262.png" alt="若出现像这样的conda版本号即安装成功"></p><h4 id="更改源"><a href="#更改源" class="headerlink" title="更改源"></a>更改源</h4><p>安装需要的Python包非常方便，但是官方服务器在国外，下载龟速，国内清华大学提供了Anaconda的镜像仓库，我们把源改为清华大学镜像源</p><p>更改方法一：cmd后依次输入下面命令<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span><br><span class="line">conda config --set show_channel_urls yes</span><br></pre></td></tr></table></figure><br>打开C盘用户目录，我这里是<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\User</span><br></pre></td></tr></table></figure><br>找到.condarc文件，里面长这样就成了<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ssl_verify: true</span><br><span class="line">channels:</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">  - defaults</span><br><span class="line">show_channel_urls: true</span><br></pre></td></tr></table></figure><br>更改方法二：打开 .condarc文件，直接简单粗暴的把上面的内容复制进去</p><h4 id="更新包"><a href="#更新包" class="headerlink" title="更新包"></a>更新包</h4><p>更新时间较长，建议找个空余时间更新,不更新也可以，但为避免后续安装其他东西出错最好更一下，这里我就不更了，把命令贴出来</p><p>先更新conda<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda update conda</span><br></pre></td></tr></table></figure><br>再更新第三方所有包<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda upgrade --all</span><br></pre></td></tr></table></figure></p><h3 id="Anaconda-修改默认虚拟环境安装位置"><a href="#Anaconda-修改默认虚拟环境安装位置" class="headerlink" title="Anaconda 修改默认虚拟环境安装位置"></a>Anaconda 修改默认虚拟环境安装位置</h3><p>保存虚拟环境的默认地址是C盘，而我想将下载的虚拟环境保存到我自定义的位置</p><h4 id="使用"><a href="#使用" class="headerlink" title="使用:"></a>使用:</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda config --show</span><br></pre></td></tr></table></figure><p>查看envs_dirs的信息，一般第一个路径是默认路径。把它修改成想要自定义的路径<br>方法1: windows+r输入%HOMEPATH% 找到.condarc文件，用记事本打开，将自定义文件夹的路径append到文件中。<br>比如:<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141051425.png" alt="6"><br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141051415.png" alt="7"><br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141051114.png" alt="8"><br>注意: 我看了很多材料说是把Anaconda3文件夹的只读属性去掉(右键属性即可找到)。但是我尝试后，新创建的虚拟环境还是在C盘。<br>⭐故大家在改完Anaconda3的文件夹属性后没成功的话可以试试，将envs文件夹(这是我的文件夹，因人而异)的只读属性去掉，并且在属性–&gt;安全–&gt;User中将权限全都勾上。此时再Anaconda Prompt中创建虚拟环境应该就没问题了。⭐</p><h4 id="在Anaconda-Prompt中使用命令，添加新的虚拟环境作为默认环境"><a href="#在Anaconda-Prompt中使用命令，添加新的虚拟环境作为默认环境" class="headerlink" title="在Anaconda Prompt中使用命令，添加新的虚拟环境作为默认环境"></a>在Anaconda Prompt中使用命令，添加新的虚拟环境作为默认环境</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda config --add envs_dirs 虚拟环境的绝对路径</span><br></pre></td></tr></table></figure><h4 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h4><p>查看anaconda的环境配置<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda config --show</span><br></pre></td></tr></table></figure></p><p>修改配置语法<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda config --add key value #添加语法</span><br><span class="line">conda config --remove key value #删除语法</span><br></pre></td></tr></table></figure><br>其中，key为 envs_dirs、pkgs_dirs等   value为key对应的值</p><p>添加、删除envs_dirs:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda config --add envs_dirs dir</span><br><span class="line">conda config --remove envs_dirs dir</span><br></pre></td></tr></table></figure><br>例如:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda config --add envs_dirs E:/File/Anaconda3/envs</span><br><span class="line">conda config --remove envs_dirs /Users/Lsz/.conda/envs</span><br></pre></td></tr></table></figure><br>这里记住要用 ” / “</p><p>如果想调整envs_dirs安装顺序， 也是采用conda config —add envs_dirs dir语法， 直接把顺序贴过去就行（如下图所示）<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141051792.png" alt="9"><br>再次查看anconda环境配置，就可以发现默认虚拟环境安装位置已经修改过来了。<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141052356.png" alt="10"></p><h3 id="anaconda使用"><a href="#anaconda使用" class="headerlink" title="anaconda使用"></a>anaconda使用</h3><h4 id="与软件包相关"><a href="#与软件包相关" class="headerlink" title="与软件包相关"></a>与软件包相关</h4><p>安装某一个包<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install package_name</span><br></pre></td></tr></table></figure><br>卸载包<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda remove package_name</span><br></pre></td></tr></table></figure><br>更新某一个具体的包<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda upgrade package_name</span><br></pre></td></tr></table></figure></p><h4 id="与环境有关的命令"><a href="#与环境有关的命令" class="headerlink" title="与环境有关的命令"></a>与环境有关的命令</h4><p>创建新的环境<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n env_name package_names</span><br></pre></td></tr></table></figure><br>需要注意的是，这里的package_names是可选参数，也就是可以通过设定。实现具体包的预安装以及包版本的管理</p><p>进入环境<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">activate env_name</span><br></pre></td></tr></table></figure></p><p>退出环境<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deactivate</span><br></pre></td></tr></table></figure></p><p>删除环境<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda env remove -n env_name</span><br></pre></td></tr></table></figure></p><p>查看当前环境下的包<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda <span class="built_in">list</span></span><br></pre></td></tr></table></figure></p><p>查看环境<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda env <span class="built_in">list</span></span><br></pre></td></tr></table></figure></p><h3 id="Anaconda-环境变量手动设置"><a href="#Anaconda-环境变量手动设置" class="headerlink" title="Anaconda 环境变量手动设置"></a>Anaconda 环境变量手动设置</h3><p>以下就是需要添加的环境变量，相应用户的目录存在差异，但是后面的路径名称相同<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">D:\anaconda</span><br><span class="line">D:\anaconda\Scripts\</span><br><span class="line">D:\anaconda\Library\bin</span><br><span class="line">D:\anaconda\Library\mingw-w64\bin</span><br></pre></td></tr></table></figure><br>重新启动运行命令框，再次输入conda，如果出现以下显示：<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303141052320.png" alt="11"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;anaconda-安装&quot;&gt;&lt;a href=&quot;#anaconda-安装&quot; class=&quot;headerlink&quot; title=&quot;anaconda 安装&quot;&gt;&lt;/a&gt;anaconda 安装&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://www.anaconda.com/</summary>
      
    
    
    
    <category term="Anaconda" scheme="https://unspman.github.io/categories/Anaconda/"/>
    
    
    <category term="Anaconda" scheme="https://unspman.github.io/tags/Anaconda/"/>
    
  </entry>
  
  <entry>
    <title>Bootstrap</title>
    <link href="https://unspman.github.io/posts/d352c4d3.html"/>
    <id>https://unspman.github.io/posts/d352c4d3.html</id>
    <published>2023-03-02T11:29:30.000Z</published>
    <updated>2023-04-20T13:04:26.763Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://v3.bootcss.com/getting-started/#download">下载地址</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://v3.bootcss.com/getting-started/#download&quot;&gt;下载地址&lt;/a&gt;&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Bootstrap" scheme="https://unspman.github.io/categories/Bootstrap/"/>
    
    
    <category term="Bootstrap" scheme="https://unspman.github.io/tags/Bootstrap/"/>
    
  </entry>
  
  <entry>
    <title>端口号占用</title>
    <link href="https://unspman.github.io/posts/3f11cddc.html"/>
    <id>https://unspman.github.io/posts/3f11cddc.html</id>
    <published>2023-01-31T00:00:00.000Z</published>
    <updated>2023-04-20T13:04:26.767Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用快捷键Windows-R，输入cmd进入dos命令窗口"><a href="#使用快捷键Windows-R，输入cmd进入dos命令窗口" class="headerlink" title="使用快捷键Windows+R，输入cmd进入dos命令窗口"></a>使用快捷键Windows+R，输入cmd进入dos命令窗口</h3><h3 id="输入netstat-nao，查看本地所有的端口号信息"><a href="#输入netstat-nao，查看本地所有的端口号信息" class="headerlink" title="输入netstat -nao，查看本地所有的端口号信息"></a>输入netstat -nao，查看本地所有的端口号信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">协议    本地地址：端口号    外部地址   PID    数字代号</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303202119717.png" alt=""></p><h3 id="然后在输入：taskkill-pid-数字代号-f"><a href="#然后在输入：taskkill-pid-数字代号-f" class="headerlink" title="然后在输入：taskkill /pid  数字代号 -f"></a>然后在输入：taskkill /pid  数字代号 -f</h3><p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303202119696.png" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;使用快捷键Windows-R，输入cmd进入dos命令窗口&quot;&gt;&lt;a href=&quot;#使用快捷键Windows-R，输入cmd进入dos命令窗口&quot; class=&quot;headerlink&quot; title=&quot;使用快捷键Windows+R，输入cmd进入dos命令窗口&quot;&gt;&lt;/a</summary>
      
    
    
    
    <category term="tips" scheme="https://unspman.github.io/categories/tips/"/>
    
    
    <category term="tips" scheme="https://unspman.github.io/tags/tips/"/>
    
  </entry>
  
  <entry>
    <title>明日方舟脚本</title>
    <link href="https://unspman.github.io/posts/882f1047.html"/>
    <id>https://unspman.github.io/posts/882f1047.html</id>
    <published>2023-01-22T13:29:30.000Z</published>
    <updated>2023-04-20T13:04:26.767Z</updated>
    
    <content type="html"><![CDATA[<h3 id="MAA"><a href="#MAA" class="headerlink" title="MAA"></a>MAA</h3><p><a href="https://github.com/MaaAssistantArknights/MaaAssistantArknights">脚本出处</a></p><p>功能：</p><ul><li>刷理智，掉落识别及上传 <a href="https://penguin-stats.cn/">企鹅物流</a></li><li>智能基建换班，自动计算干员效率，单设施内最优解；同时也支持 <a href="https://maa.plus/docs/3.6-%E5%9F%BA%E5%BB%BA%E6%8E%92%E7%8F%AD%E5%8D%8F%E8%AE%AE.html">自定义排班</a></li><li>自动公招，可选使用加急许可，一次全部刷完！公招数据上传 <a href="https://penguin-stats.cn/result/stage/recruit/recruit">企鹅物流</a>，<a href="https://yituliu.site/maarecruitdata">一图流</a></li><li>访问好友、收取信用及购物、领取日常奖励等。一键全日常自动长草！</li><li>肉鸽全自动刷源石锭和蜡烛，自动识别干员及练度</li><li>选择作业 JSON 文件，自动抄作业！ <a href="https://www.bilibili.com/video/BV1H841177Fk/">视频演示</a></li><li>仓库识别并支持导出至 <a href="https://penguin-stats.cn/planner">企鹅物流刷图规划器</a>, <a href="https://arkn.lolicon.app/#/material">明日方舟工具箱</a>, <a href="https://ark-nights.com/settings">ARK-NIGHTS 干员培养表</a></li><li>支持 C, Python, Java, Rust, Golang, Java HTTP, Rust HTTP 等多种接口，方便集成调用，自定义你的 MAA！</li></ul><h3 id="一、模拟器下载"><a href="#一、模拟器下载" class="headerlink" title="一、模拟器下载"></a>一、模拟器下载</h3><p><a href="https://www.bluestacks.com/tw/index.html">BlueStack5</a></p><p>需要在模拟器“设定 - 进阶” 中打开 “Android调试桥”</p><h3 id="二、明日方舟APK文件下载"><a href="#二、明日方舟APK文件下载" class="headerlink" title="二、明日方舟APK文件下载"></a>二、明日方舟APK文件下载</h3><p><a href="https://ak.hypergryph.com/">明日方舟 - Arknights </a></p><p>右键选择模拟器打开</p><h3 id="三、阿巴阿巴"><a href="#三、阿巴阿巴" class="headerlink" title="三、阿巴阿巴"></a>三、阿巴阿巴</h3><p>保全派驻作业路径：MAA\MAA-v4.10.10-win-x64\resource\copilot\SSS_阿卡胡拉丛林.json</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;MAA&quot;&gt;&lt;a href=&quot;#MAA&quot; class=&quot;headerlink&quot; title=&quot;MAA&quot;&gt;&lt;/a&gt;MAA&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/MaaAssistantArknights/MaaAssistantArkn</summary>
      
    
    
    
    <category term="游戏" scheme="https://unspman.github.io/categories/%E6%B8%B8%E6%88%8F/"/>
    
    
    <category term="游戏" scheme="https://unspman.github.io/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>Node.js(video项目后端案例)</title>
    <link href="https://unspman.github.io/posts/88d28bf1.html"/>
    <id>https://unspman.github.io/posts/88d28bf1.html</id>
    <published>2023-01-15T00:00:00.000Z</published>
    <updated>2023-04-20T13:04:26.767Z</updated>
    
    <content type="html"><![CDATA[<h3 id="导包"><a href="#导包" class="headerlink" title="导包"></a>导包</h3><p>导入express<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add express</span><br></pre></td></tr></table></figure><br>导入template<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn add art-template</span><br><span class="line">yarn add express-art-template</span><br></pre></td></tr></table></figure><br>导入mysql</p><p>导入加密函数<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install bcryptjs</span><br></pre></td></tr></table></figure></p><h3 id="index-js文件编写"><a href="#index-js文件编写" class="headerlink" title="index.js文件编写"></a>index.js文件编写</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">//解决跨域问题</span></span><br><span class="line"><span class="keyword">const</span> cors = <span class="built_in">require</span>(<span class="string">&quot;cors&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> apiRouter = <span class="built_in">require</span>(<span class="string">&#x27;./module/api&#x27;</span>);</span><br><span class="line"><span class="comment">//初始化app</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="built_in">require</span>(<span class="string">&quot;dotenv&quot;</span>).<span class="title function_">config</span>();</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cors</span>());</span><br><span class="line"><span class="comment">//用于解析HTTP请求中的请求体（request body），并将其转换为JSON格式的数据</span></span><br><span class="line">app.<span class="title function_">use</span>(bodyParser.<span class="title function_">json</span>());</span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&#x27;/api&#x27;</span>, apiRouter);</span><br><span class="line"><span class="comment">//监听5000端口</span></span><br><span class="line"><span class="keyword">const</span> server = app.<span class="title function_">listen</span>(process.<span class="property">env</span>.<span class="property">PORT</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Server Started on Port <span class="subst">$&#123;process.env.PORT&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="数据库部分代码"><a href="#数据库部分代码" class="headerlink" title="数据库部分代码"></a>数据库部分代码</h3><h4 id="orm-js"><a href="#orm-js" class="headerlink" title="orm.js"></a>orm.js</h4><p>ORM中文意为：对象-关系映射<br>它能把数据库表中的每条记录映射成一个模型对象<br>1、不需要写数据库sql代码来操作数据库<br>2、避免了不同数据库之间的操作差异<br>3、可以通过简单的配置来更换数据库<br>不过项目中基本未使用</p><h4 id="handle-js"><a href="#handle-js" class="headerlink" title="handle.js"></a>handle.js</h4><p>为了调用方便，我们可以将这些异步代码全部封装：<br>不过项目中基本未使用</p><h3 id="token-js部分代码"><a href="#token-js部分代码" class="headerlink" title="token.js部分代码"></a>token.js部分代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&#x27;jsonwebtoken&#x27;</span>);</span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;dotenv&#x27;</span>).<span class="title function_">config</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Token</span> = &#123;</span><br><span class="line">  <span class="title function_">encode</span>(<span class="params">payload</span>) &#123;</span><br><span class="line">    <span class="comment">//sign(param1,param2)  加密对象，解密密匙</span></span><br><span class="line">    <span class="keyword">const</span> token = jwt.<span class="title function_">sign</span>(payload, process.<span class="property">env</span>.<span class="property">SECRET_KEY</span>);</span><br><span class="line">    <span class="keyword">return</span> token;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">decode</span>(<span class="params">token</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">//verify(param1,param2)  解密对象，解密密匙</span></span><br><span class="line">      <span class="keyword">const</span> payload = jwt.<span class="title function_">verify</span>(token, process.<span class="property">env</span>.<span class="property">SECRET_KEY</span>);</span><br><span class="line">      <span class="keyword">return</span> payload;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">Token</span>;</span><br></pre></td></tr></table></figure><h3 id="接口部分代码api"><a href="#接口部分代码api" class="headerlink" title="接口部分代码api"></a>接口部分代码api</h3><h4 id="注册接口-signin"><a href="#注册接口-signin" class="headerlink" title="注册接口 signin"></a>注册接口 signin</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注册</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/signin&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">json</span>(&#123;<span class="attr">message</span>: <span class="string">&#x27;注册界面&#x27;</span>&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/signin&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//获取参数</span></span><br><span class="line">  <span class="keyword">const</span> &#123; username, password&#125; = req.<span class="property">body</span>;</span><br><span class="line">  <span class="comment">//加密密码</span></span><br><span class="line">  <span class="keyword">const</span> payload = &#123; username &#125;;</span><br><span class="line">  <span class="keyword">const</span> token = <span class="title class_">Token</span>.<span class="title function_">encode</span>(payload);</span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;user&#x27;</span>).<span class="title function_">sql</span>(<span class="string">`INSERT INTO user (name, password) VALUES (&#x27;<span class="subst">$&#123;username&#125;</span>&#x27;, &#x27;<span class="subst">$&#123;password&#125;</span>&#x27;)`</span>, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;注册成功&#x27;</span>, <span class="attr">token</span>: token &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="登录接口-login"><a href="#登录接口-login" class="headerlink" title="登录接口 login"></a>登录接口 login</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//登录</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/login&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">json</span>(&#123;<span class="attr">message</span>: <span class="string">&#x27;登录界面&#x27;</span>&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/login&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 获取参数</span></span><br><span class="line">  <span class="keyword">const</span> &#123; username, password, token &#125; = req.<span class="property">body</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 如果有token，则尝试解密</span></span><br><span class="line">  <span class="keyword">if</span> (token) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> decoded = <span class="title class_">Token</span>.<span class="title function_">decode</span>(token);</span><br><span class="line">      <span class="keyword">if</span> (decoded.<span class="property">username</span> === username) &#123;</span><br><span class="line">        <span class="comment">// 如果解密成功，且用户名与请求一致，则返回登录成功,并找到user_id返回给前端</span></span><br><span class="line">        db.<span class="title function_">model</span>(<span class="string">&#x27;user&#x27;</span>).<span class="title function_">sql</span>(<span class="string">`SELECT id FROM user WHERE name=&#x27;<span class="subst">$&#123;username&#125;</span>&#x27;`</span>, <span class="function">(<span class="params">err, user_id</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (err) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">            res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;login Server Error&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;登录成功&#x27;</span>, <span class="attr">user_id</span>:user_id[<span class="number">0</span>].<span class="property">id</span>, <span class="attr">token</span>: token &#125;);</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      res.<span class="title function_">send</span>(<span class="string">&quot;解密失败&quot;</span>)</span><br><span class="line">      <span class="comment">// 如果解密失败，或用户名不一致，则忽略token，进行下一步验证</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(password) &#123;</span><br><span class="line">  <span class="comment">// 验证用户名和密码</span></span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;user&#x27;</span>).<span class="title function_">sql</span>(<span class="string">`SELECT COUNT(*) as count FROM user WHERE name=&#x27;<span class="subst">$&#123;username&#125;</span>&#x27; AND password=<span class="subst">$&#123;password&#125;</span>`</span>, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (results[<span class="number">0</span>].<span class="property">count</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">//如果用户存在，则找到user_id返回给前端</span></span><br><span class="line">      db.<span class="title function_">model</span>(<span class="string">&#x27;user&#x27;</span>).<span class="title function_">sql</span>(<span class="string">`SELECT id FROM user WHERE name=&#x27;<span class="subst">$&#123;username&#125;</span>&#x27;`</span>, <span class="function">(<span class="params">err, user_id</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">          res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;login Server Error&#x27;</span>);</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 生成新的token返回给客户端</span></span><br><span class="line">        <span class="keyword">const</span> payload = &#123; username &#125;;</span><br><span class="line">        <span class="keyword">const</span> newToken = <span class="title class_">Token</span>.<span class="title function_">encode</span>(payload);</span><br><span class="line">        res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;登录成功&#x27;</span>, <span class="attr">user_id</span>:user_id[<span class="number">0</span>].<span class="property">id</span>, <span class="attr">token</span>: newToken &#125;);</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: -<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;用户名或密码错误&#x27;</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: -<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;没输入密码&#x27;</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="测试数据库链接接口-test"><a href="#测试数据库链接接口-test" class="headerlink" title="测试数据库链接接口 test"></a>测试数据库链接接口 test</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//测试数据库连接</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/test&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;user&#x27;</span>).<span class="title function_">sql</span>(<span class="string">`select count(*) as count from user`</span>, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res.<span class="title function_">json</span>(&#123; <span class="attr">result</span>: results[<span class="number">0</span>].<span class="property">count</span>, <span class="attr">message</span>: <span class="string">&#x27;Database connection successful&#x27;</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="搜索接口-search"><a href="#搜索接口-search" class="headerlink" title="搜索接口 search"></a>搜索接口 search</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//搜索</span></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/search&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//获取搜索内容 msg:搜索str,user_id：搜索用户</span></span><br><span class="line">  <span class="keyword">const</span> &#123; msg, user_id&#125; = req.<span class="property">body</span>;</span><br><span class="line">  <span class="comment">//在数据库表video中进行模糊查找</span></span><br><span class="line">  <span class="keyword">const</span> searchQuery = <span class="string">`SELECT a.id, a.name,a.cover,a.type,b.name as tag,a.description FROM video as a,video_tag as b WHERE a.name LIKE &#x27;%<span class="subst">$&#123;msg&#125;</span>%&#x27; and a.id = b.video_id`</span>;</span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;video&#x27;</span>).<span class="title function_">sql</span>(searchQuery, <span class="function">(<span class="params">err, search_results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    search_data = search_results;</span><br><span class="line">    <span class="comment">//记录用户搜索记录</span></span><br><span class="line">    <span class="keyword">const</span> insertQuery = <span class="string">`insert into search_history (content,user_id) VALUES (&#x27;<span class="subst">$&#123;msg&#125;</span>&#x27;, &#x27;<span class="subst">$&#123;user_id&#125;</span>&#x27;);`</span>;</span><br><span class="line">    db.<span class="title function_">model</span>(<span class="string">&#x27;search_history&#x27;</span>).<span class="title function_">sql</span>(insertQuery,<span class="function">(<span class="params">err,insert_results</span>)=&gt;</span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">        res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">200</span>);</span><br><span class="line">      res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;搜索成功&#x27;</span>,<span class="attr">data</span>:search_data &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="图片接口-pictures"><a href="#图片接口-pictures" class="headerlink" title="图片接口 pictures"></a>图片接口 pictures</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//随机返回前端8张图片</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/pictures&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">const</span> sqlquery = <span class="string">`SELECT * FROM pictures ORDER BY RAND() LIMIT 8`</span>;</span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;pictures&#x27;</span>).<span class="title function_">sql</span>(sqlquery, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">200</span>);</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;返回8张图片&#x27;</span>, <span class="attr">pictures</span>:results&#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="动漫接口-anime"><a href="#动漫接口-anime" class="headerlink" title="动漫接口 anime"></a>动漫接口 anime</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//anime</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/anime&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="comment">//随机选取8个动漫</span></span><br><span class="line">  <span class="keyword">const</span> sqlquery = <span class="string">`SELECT video.id, video.name, video.description, video.cover, video_tag.name as tag FROM video,video_tag WHERE type = &#x27;动漫&#x27; and video.id = video_tag.video_id and video_tag.name &lt;&gt; &#x27;Unknown&#x27; ORDER BY RAND() LIMIT 8`</span></span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;video&#x27;</span>).<span class="title function_">sql</span>(sqlquery, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">200</span>);</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;随机选取8个动漫&#x27;</span>, <span class="attr">anime</span>:results&#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="电影接口-movie"><a href="#电影接口-movie" class="headerlink" title="电影接口 movie"></a>电影接口 movie</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//movie</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/movie&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="comment">//随机选取8个电影</span></span><br><span class="line">  <span class="keyword">const</span> sqlquery = <span class="string">`SELECT video.id, video.name, video.description, video.cover, video_tag.name as tag FROM video,video_tag WHERE type = &#x27;电影&#x27; and video.id = video_tag.video_id and video_tag.name &lt;&gt; &#x27;Unknown&#x27; ORDER BY RAND() LIMIT 8`</span></span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;video&#x27;</span>).<span class="title function_">sql</span>(sqlquery, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">200</span>);</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;随机选取8个电影&#x27;</span>, <span class="attr">movie</span>:results&#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="电视剧接口-tv"><a href="#电视剧接口-tv" class="headerlink" title="电视剧接口 tv"></a>电视剧接口 tv</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tv</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/tv&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="comment">//随机选取8个电视剧</span></span><br><span class="line">  <span class="keyword">const</span> sqlquery = <span class="string">`SELECT video.id, video.name, video.description, video.cover, video_tag.name as tag FROM video,video_tag WHERE type = &#x27;电视剧&#x27; and video.id = video_tag.video_id and video_tag.name &lt;&gt; &#x27;Unknown&#x27; ORDER BY RAND() LIMIT 8`</span></span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;video&#x27;</span>).<span class="title function_">sql</span>(sqlquery, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">200</span>);</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;随机选取8个电视剧&#x27;</span>, <span class="attr">tv</span>:results&#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="综艺接口-variety"><a href="#综艺接口-variety" class="headerlink" title="综艺接口 variety"></a>综艺接口 variety</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//variety</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/variety&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="comment">//随机选取8个综艺</span></span><br><span class="line">  <span class="keyword">const</span> sqlquery = <span class="string">`SELECT video.id, video.name, video.description, video.cover, video_tag.name as tag FROM video,video_tag WHERE type = &#x27;综艺&#x27; and video.id = video_tag.video_id and video_tag.name &lt;&gt; &#x27;Unknown&#x27; ORDER BY RAND() LIMIT 8`</span></span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;video&#x27;</span>).<span class="title function_">sql</span>(sqlquery, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">200</span>);</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;随机选取8个综艺&#x27;</span>, <span class="attr">variety</span>:results&#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="排行榜接口-rank"><a href="#排行榜接口-rank" class="headerlink" title="排行榜接口 rank"></a>排行榜接口 rank</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//排行榜</span></span><br><span class="line"><span class="comment">//由于非正式项目，故选择随机选取10个数据</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/rank&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="comment">//随机选取10个动漫</span></span><br><span class="line">  <span class="keyword">const</span> videoQuery1 = <span class="string">`SELECT video.id, video.name, video.cover, video_tag.name as tag FROM video,video_tag WHERE type = &#x27;动漫&#x27; and video.id = video_tag.video_id and video_tag.name &lt;&gt; &#x27;Unknown&#x27; ORDER BY RAND() LIMIT 10`</span></span><br><span class="line">  <span class="comment">//随机选取10个综艺</span></span><br><span class="line">  <span class="keyword">const</span> videoQuery2 = <span class="string">`SELECT video.id, video.name, video.cover, video_tag.name as tag FROM video,video_tag WHERE type = &#x27;综艺&#x27; and video.id = video_tag.video_id and video_tag.name &lt;&gt; &#x27;Unknown&#x27; ORDER BY RAND() LIMIT 10`</span></span><br><span class="line">  <span class="comment">//随机选取10个电视剧</span></span><br><span class="line">  <span class="keyword">const</span> videoQuery3 = <span class="string">`SELECT video.id, video.name, video.cover, video_tag.name as tag FROM video,video_tag WHERE type = &#x27;电视剧&#x27; and video.id = video_tag.video_id and video_tag.name &lt;&gt; &#x27;Unknown&#x27; ORDER BY RAND() LIMIT 10`</span></span><br><span class="line">  <span class="comment">//随机选取10个图片</span></span><br><span class="line">  <span class="keyword">const</span> pictureQuery = <span class="string">`SELECT * FROM pictures ORDER BY RAND() LIMIT 10`</span>;</span><br><span class="line">  <span class="comment">//随机选取10张播出表数据</span></span><br><span class="line">  <span class="keyword">const</span> rotateQuery = <span class="string">`SELECT video.id, video.name, video.cover, video_tag.name as tag FROM video,video_tag,video_round WHERE video.id = video_tag.video_id and video_tag.name &lt;&gt; &#x27;Unknown&#x27;  and video_round.video_id = video.id ORDER BY RAND() LIMIT 10`</span></span><br><span class="line">  <span class="comment">//第一次</span></span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;video&#x27;</span>).<span class="title function_">sql</span>(videoQuery1, <span class="function">(<span class="params">err, results1</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    video1 = results1;</span><br><span class="line">    <span class="comment">//第二次</span></span><br><span class="line">    db.<span class="title function_">model</span>(<span class="string">&#x27;video&#x27;</span>).<span class="title function_">sql</span>(videoQuery2, <span class="function">(<span class="params">err, results2</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">        res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//第三次</span></span><br><span class="line">      db.<span class="title function_">model</span>(<span class="string">&#x27;video&#x27;</span>).<span class="title function_">sql</span>(videoQuery3, <span class="function">(<span class="params">err, results3</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">          res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//第四次</span></span><br><span class="line">        db.<span class="title function_">model</span>(<span class="string">&#x27;pictures&#x27;</span>).<span class="title function_">sql</span>(pictureQuery, <span class="function">(<span class="params">err, results4</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (err) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">            res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="comment">//第五次</span></span><br><span class="line">          db.<span class="title function_">model</span>(<span class="string">&#x27;video_round&#x27;</span>).<span class="title function_">sql</span>(rotateQuery, <span class="function">(<span class="params">err, results5</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (err) &#123;</span><br><span class="line">              <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">              res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">              <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            res.<span class="title function_">status</span>(<span class="number">200</span>);</span><br><span class="line">          res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;排行榜&#x27;</span>, <span class="attr">anime</span>:results1, <span class="attr">variety</span>:results2, <span class="attr">TV</span>:results3, <span class="attr">pictures</span>:results4,<span class="attr">rotate</span>:results5&#125;);</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="播出表接口-rotate"><a href="#播出表接口-rotate" class="headerlink" title="播出表接口 rotate"></a>播出表接口 rotate</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//轮播表</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/rotate&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//从播出表中将每一天的播出video找出，共84个</span></span><br><span class="line">  <span class="keyword">const</span> sqlquery = <span class="string">`select video.id,video.name,video.cover from video_round,video,video_tag where video.id = video_tag.video_id and video_round.video_id = video.id`</span></span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;user&#x27;</span>).<span class="title function_">sql</span>(sqlquery, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">//将得到的84数据分开，由于按顺序读出，故12个数据即对应一天</span></span><br><span class="line">      <span class="keyword">const</span> smallArrays = [];</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; results.<span class="property">length</span>; i += <span class="number">12</span>) &#123;</span><br><span class="line">        smallArrays.<span class="title function_">push</span>(results.<span class="title function_">slice</span>(i, i + <span class="number">12</span>));</span><br><span class="line">      &#125;</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">200</span>);</span><br><span class="line">      res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>:<span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;轮播表&#x27;</span>, <span class="title class_">Monday</span>:smallArrays[<span class="number">0</span>], <span class="title class_">Tuesday</span>:smallArrays[<span class="number">1</span>], <span class="title class_">Wednesday</span>:smallArrays[<span class="number">2</span>], <span class="title class_">Thursday</span>:smallArrays[<span class="number">3</span>], <span class="title class_">Friday</span>:smallArrays[<span class="number">4</span>], <span class="title class_">Saturday</span>:smallArrays[<span class="number">5</span>], <span class="title class_">Sunday</span>:smallArrays[<span class="number">6</span>] &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="返回指定video-id信息-getVideoInfo"><a href="#返回指定video-id信息-getVideoInfo" class="headerlink" title="返回指定video_id信息 getVideoInfo"></a>返回指定video_id信息 getVideoInfo</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//返回video_url</span></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/getVideoInfo&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> video_id = req.<span class="property">body</span>.<span class="property">video_id</span>;</span><br><span class="line">  <span class="keyword">const</span> sqlquery = <span class="string">`SELECT video.name, video.type, video.year,video.area, video.description,video.episodes,video_tag.name as tag FROM video, video_tag WHERE video.id = video_tag.video_id AND video.id = &#x27;<span class="subst">$&#123;video_id&#125;</span>&#x27;`</span>;</span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;user&#x27;</span>).<span class="title function_">sql</span>(sqlquery, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;get_video_info&#x27;</span>, <span class="attr">results</span>:results[<span class="number">0</span>] &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="获取搜索记录-getHistory"><a href="#获取搜索记录-getHistory" class="headerlink" title="获取搜索记录 getHistory"></a>获取搜索记录 getHistory</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/getHistory&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">const</span> user_id = req.<span class="property">body</span>.<span class="property">user_id</span>;</span><br><span class="line">  <span class="keyword">if</span> (user_id === <span class="number">0</span>)&#123;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">json</span>(&#123;<span class="attr">code</span>:<span class="number">0</span>,<span class="attr">message</span>:<span class="string">&quot;user_id = 0&quot;</span>, <span class="attr">value</span>:[]&#125;);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> sqlquery = <span class="string">`select search_history.value from search_history where user_id = &#x27;<span class="subst">$&#123;user_id&#125;</span>&#x27;`</span>;</span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;user&#x27;</span>).<span class="title function_">sql</span>(sqlquery, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123;<span class="attr">code</span>:-<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">json</span>(&#123;<span class="attr">code</span>:<span class="number">0</span>,<span class="attr">message</span>:<span class="string">&quot;getHistory&quot;</span>, <span class="attr">data</span>:results&#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="发表评论接口-makeComment"><a href="#发表评论接口-makeComment" class="headerlink" title="发表评论接口 makeComment"></a>发表评论接口 makeComment</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/makeComment&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">const</span> &#123;video_id,content,user_id&#125; = req.<span class="property">body</span>;</span><br><span class="line">  <span class="keyword">if</span>(user_id === <span class="number">0</span>)&#123;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">json</span>(&#123;<span class="attr">code</span>:<span class="number">0</span>,<span class="attr">message</span>:<span class="string">&quot;请先登录再评论&quot;</span>&#125;);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> sqlquery = <span class="string">`insert into comment (video_id,content,user_id,createTime,commitLikeCount) VALUES(&#x27;<span class="subst">$&#123;video_id&#125;</span>&#x27;,&#x27;<span class="subst">$&#123;content&#125;</span>&#x27;,&#x27;<span class="subst">$&#123;user_id&#125;</span>&#x27;,NOW(),FLOOR(RAND() * 100))`</span>;</span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;comment&#x27;</span>).<span class="title function_">sql</span>(sqlquery, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123;<span class="attr">cosw</span>:-<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">json</span>(&#123;<span class="attr">code</span>:<span class="number">0</span>,<span class="attr">message</span>:<span class="string">&quot;评论成功&quot;</span>&#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="返回一级评论-getComment1"><a href="#返回一级评论-getComment1" class="headerlink" title="返回一级评论 getComment1"></a>返回一级评论 getComment1</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/getComment1&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> video_id = req.<span class="property">body</span>.<span class="property">video_id</span>;</span><br><span class="line">  <span class="keyword">const</span> pagenum = req.<span class="property">body</span>.<span class="property">pagenum</span> || <span class="number">1</span>; <span class="comment">// 如果未提供 pagenum 参数，默认为第一页</span></span><br><span class="line">  <span class="keyword">const</span> pagesize = req.<span class="property">body</span>.<span class="property">pagesize</span> || <span class="number">10</span>; <span class="comment">// 如果未提供 pagesize 参数，默认每页显示 10 条评论</span></span><br><span class="line">  <span class="keyword">const</span> offset = (pagenum - <span class="number">1</span>) * pagesize; <span class="comment">// 计算需要跳过的评论数量</span></span><br><span class="line">  <span class="comment">//获取评论总数</span></span><br><span class="line">  <span class="keyword">const</span> queryTotal = <span class="string">`SELECT COUNT(*) AS total FROM comment WHERE comment.video_id = &#x27;<span class="subst">$&#123;video_id&#125;</span>&#x27; AND comment.rootCommentID = 0`</span>;</span><br><span class="line">  <span class="comment">// 按照 createTime 降序排序查询符合条件的评论详细信息</span></span><br><span class="line">  <span class="keyword">const</span> queryByTime = <span class="string">`</span></span><br><span class="line"><span class="string">    SELECT comment.videoCommentID AS id, user.name AS nickname, content, DATE_FORMAT(createTime, &#x27;%Y-%m-%d %H:%i:%s&#x27;) AS createTime, commitLikeCount </span></span><br><span class="line"><span class="string">    FROM user, comment </span></span><br><span class="line"><span class="string">    WHERE video_id = &#x27;<span class="subst">$&#123;video_id&#125;</span>&#x27; AND user.id = comment.user_id AND comment.rootCommentID = 0</span></span><br><span class="line"><span class="string">    ORDER BY createTime ASC </span></span><br><span class="line"><span class="string">    LIMIT <span class="subst">$&#123;offset&#125;</span>, <span class="subst">$&#123;pagesize&#125;</span></span></span><br><span class="line"><span class="string">  `</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 按照 commitLikeCount 降序排序查询符合条件的评论详细信息</span></span><br><span class="line">  <span class="keyword">const</span> queryByHot = <span class="string">`</span></span><br><span class="line"><span class="string">    SELECT comment.videoCommentID AS id, user.name AS nickname, content, DATE_FORMAT(createTime, &#x27;%Y-%m-%d %H:%i:%s&#x27;) AS createTime, commitLikeCount </span></span><br><span class="line"><span class="string">    FROM user, comment </span></span><br><span class="line"><span class="string">    WHERE video_id = &#x27;<span class="subst">$&#123;video_id&#125;</span>&#x27; AND user.id = comment.user_id AND comment.rootCommentID = 0</span></span><br><span class="line"><span class="string">    ORDER BY commitLikeCount DESC, createTime ASC </span></span><br><span class="line"><span class="string">    LIMIT <span class="subst">$&#123;offset&#125;</span>, <span class="subst">$&#123;pagesize&#125;</span></span></span><br><span class="line"><span class="string">  `</span>;</span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;comment&#x27;</span>).<span class="title function_">sql</span>(queryByTime, <span class="function">(<span class="params">err, rowsByTime</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123; <span class="attr">code</span>: -<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    db.<span class="title function_">model</span>(<span class="string">&#x27;comment&#x27;</span>).<span class="title function_">sql</span>(queryByHot, <span class="function">(<span class="params">err, rowsByHot</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">        res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123; <span class="attr">code</span>: -<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      db.<span class="title function_">model</span>(<span class="string">&#x27;comment&#x27;</span>).<span class="title function_">sql</span>(queryTotal, <span class="function">(<span class="params">err, total</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">          res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123; <span class="attr">code</span>: -<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;查询成功&#x27;</span>, <span class="attr">total</span>:total[<span class="number">0</span>].<span class="property">total</span>, rowsByTime, rowsByHot &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="返回二级评论-getComment2"><a href="#返回二级评论-getComment2" class="headerlink" title="返回二级评论 getComment2"></a>返回二级评论 getComment2</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/getComment2&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> videoCommentid = req.<span class="property">body</span>.<span class="property">videoCommentid</span>;</span><br><span class="line">  <span class="keyword">const</span> pagenum = req.<span class="property">body</span>.<span class="property">pagenum</span> || <span class="number">1</span>; <span class="comment">// 如果未提供 pagenum 参数，默认为第一页</span></span><br><span class="line">  <span class="keyword">const</span> pagesize = req.<span class="property">body</span>.<span class="property">pagesize</span> || <span class="number">10</span>; <span class="comment">// 如果未提供 pagesize 参数，默认每页显示 10 条评论</span></span><br><span class="line">  <span class="keyword">const</span> state = req.<span class="property">body</span>.<span class="property">state</span> || <span class="string">&quot;createtime&quot;</span>;</span><br><span class="line">  <span class="keyword">const</span> offset = (pagenum - <span class="number">1</span>) * pagesize; <span class="comment">// 计算需要跳过的评论数量</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 查询符合条件的评论总数</span></span><br><span class="line">  <span class="keyword">const</span> sqlquery1 = <span class="string">`SELECT COUNT(*) AS total FROM comment WHERE comment.rootCommentID = &#x27;<span class="subst">$&#123;videoCommentid&#125;</span>&#x27;`</span>;</span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;comment&#x27;</span>).<span class="title function_">sql</span>(sqlquery1, <span class="function">(<span class="params">err, results1</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123; <span class="attr">code</span>: -<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询符合条件的评论详细信息，并按照 createTime 降序或者 commitLikeCount 降序排序</span></span><br><span class="line">    <span class="keyword">let</span> orderBy = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (state === <span class="string">&#x27;hot&#x27;</span>) &#123;</span><br><span class="line">      orderBy = <span class="string">&#x27;ORDER BY commitLikeCount ASC, createTime ASC&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (state === <span class="string">&#x27;time&#x27;</span>) &#123;</span><br><span class="line">      orderBy = <span class="string">&#x27;ORDER BY createTime ASC&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> sqlquery2 = <span class="string">`</span></span><br><span class="line"><span class="string">      SELECT comment.videoCommentID AS id, user.name AS nickname, content, DATE_FORMAT(createTime, &#x27;%Y-%m-%d %H:%i:%s&#x27;) AS createTime, commitLikeCount </span></span><br><span class="line"><span class="string">      FROM user, comment </span></span><br><span class="line"><span class="string">      WHERE rootCommentID = &#x27;<span class="subst">$&#123;videoCommentid&#125;</span>&#x27; AND user.id = comment.user_id </span></span><br><span class="line"><span class="string">      <span class="subst">$&#123;orderBy&#125;</span> </span></span><br><span class="line"><span class="string">      LIMIT <span class="subst">$&#123;offset&#125;</span>, <span class="subst">$&#123;pagesize&#125;</span></span></span><br><span class="line"><span class="string">    `</span>;</span><br><span class="line">    db.<span class="title function_">model</span>(<span class="string">&#x27;comment&#x27;</span>).<span class="title function_">sql</span>(sqlquery2, <span class="function">(<span class="params">err, results2</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">        res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123; <span class="attr">code</span>: -<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">const</span> total = results1[<span class="number">0</span>].<span class="property">total</span>; <span class="comment">// 总评论数</span></span><br><span class="line">      <span class="keyword">const</span> rows = results2; <span class="comment">// 当前页评论数据</span></span><br><span class="line"></span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;查询成功&#x27;</span>, total, rows &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="获取url-getUrl"><a href="#获取url-getUrl" class="headerlink" title="获取url getUrl"></a>获取url getUrl</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/getUrl&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">const</span> video_id = req.<span class="property">body</span>.<span class="property">video_id</span></span><br><span class="line">  <span class="keyword">const</span> sqlquery = <span class="string">`SELECT video_episodes.episodes, MIN(video_episodes.url) AS url FROM video_episodes INNER JOIN video_road ON video_road.id = video_episodes.road_id INNER JOIN video ON video.id = video_road.video_id WHERE video.id = &#x27;<span class="subst">$&#123;video_id&#125;</span>&#x27; GROUP BY video_episodes.episodes ORDER BY episodes;`</span></span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;video_episodes&#x27;</span>).<span class="title function_">sql</span>(sqlquery, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123;<span class="attr">cosw</span>:-<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;Failed to execute SQL query&#x27;</span> &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">json</span>(&#123;<span class="attr">code</span>:<span class="number">0</span>, <span class="attr">message</span>:<span class="string">&quot;GETURL&quot;</span>, <span class="attr">data</span>:results&#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;导包&quot;&gt;&lt;a href=&quot;#导包&quot; class=&quot;headerlink&quot; title=&quot;导包&quot;&gt;&lt;/a&gt;导包&lt;/h3&gt;&lt;p&gt;导入express&lt;br&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=</summary>
      
    
    
    
    <category term="后端" scheme="https://unspman.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Node.js" scheme="https://unspman.github.io/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>Node.js(14.Nodejs中使用jwt(JSON Web Token)模块)</title>
    <link href="https://unspman.github.io/posts/ab1892.html"/>
    <id>https://unspman.github.io/posts/ab1892.html</id>
    <published>2023-01-14T00:00:00.000Z</published>
    <updated>2023-04-20T13:04:26.763Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装jwt模块："><a href="#安装jwt模块：" class="headerlink" title="安装jwt模块："></a>安装jwt模块：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i jsonwebtoken</span><br></pre></td></tr></table></figure><h3 id="编写"><a href="#编写" class="headerlink" title="编写"></a>编写</h3><p>token.js:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.安装jsonwebtoken</span></span><br><span class="line"><span class="comment">//2.使用jwt中的两个方法来加密和解密token</span></span><br><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&#x27;jsonwebtoken&#x27;</span>);</span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;dotenv&#x27;</span>).<span class="title function_">config</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Token</span> = &#123;</span><br><span class="line">  <span class="title function_">encode</span>(<span class="params">payload</span>) &#123;<span class="comment">//加密token</span></span><br><span class="line">    <span class="comment">// jwt.sign(param1,param2); param1:加密的内容；param2:解密的密钥</span></span><br><span class="line">    <span class="keyword">const</span> token = jwt.<span class="title function_">sign</span>(payload, process.<span class="property">env</span>.<span class="property">SECRET_KEY</span>);</span><br><span class="line">    <span class="keyword">return</span> token;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">decode</span>(<span class="params">token</span>) &#123;<span class="comment">//解密token</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">//jwt.verify(param1,param2); param1:解密的对象；param2:解密的密钥</span></span><br><span class="line">      <span class="keyword">const</span> payload = jwt.<span class="title function_">verify</span>(token, process.<span class="property">env</span>.<span class="property">SECRET_KEY</span>);</span><br><span class="line">      <span class="keyword">return</span> payload;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">Token</span>;</span><br></pre></td></tr></table></figure></p><h3 id="使用token实现登录接口-免密登录"><a href="#使用token实现登录接口-免密登录" class="headerlink" title="使用token实现登录接口(免密登录)"></a>使用token实现登录接口(免密登录)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/login&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 获取参数</span></span><br><span class="line">  <span class="keyword">const</span> &#123; username, password, token &#125; = req.<span class="property">body</span>;</span><br><span class="line">  <span class="comment">//免密登录：</span></span><br><span class="line">  <span class="comment">// 如果有token，则尝试解密</span></span><br><span class="line">  <span class="keyword">if</span> (token) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> decoded = <span class="title class_">Token</span>.<span class="title function_">decode</span>(token);</span><br><span class="line">      <span class="keyword">if</span> (decoded.<span class="property">username</span> === username) &#123;</span><br><span class="line">        <span class="comment">// 如果解密成功，且用户名与请求一致，则返回登录成功</span></span><br><span class="line">        res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;登录成功&#x27;</span>, <span class="attr">token</span>: token &#125;);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      res.<span class="title function_">send</span>(<span class="string">&quot;解密失败&quot;</span>)</span><br><span class="line">      <span class="comment">// 如果解密失败，或用户名不一致，则忽略token，进行下一步验证</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 验证用户名和密码</span></span><br><span class="line">  db.<span class="title function_">model</span>(<span class="string">&#x27;user&#x27;</span>).<span class="title function_">sql</span>(<span class="string">`SELECT COUNT(*) as count FROM user WHERE name=&#x27;<span class="subst">$&#123;username&#125;</span>&#x27; AND password=<span class="subst">$&#123;password&#125;</span>`</span>, <span class="function">(<span class="params">err, results</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal Server Error&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (results[<span class="number">0</span>].<span class="property">count</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">// 生成新的token返回给客户端</span></span><br><span class="line">      <span class="keyword">const</span> payload = &#123; username &#125;;</span><br><span class="line">      <span class="keyword">const</span> newToken = <span class="title class_">Token</span>.<span class="title function_">encode</span>(payload);</span><br><span class="line">      res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">message</span>: <span class="string">&#x27;登录成功&#x27;</span>, <span class="attr">token</span>: newToken &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res.<span class="title function_">json</span>(&#123; <span class="attr">code</span>: -<span class="number">1</span>, <span class="attr">message</span>: <span class="string">&#x27;用户名或密码错误&#x27;</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;安装jwt模块：&quot;&gt;&lt;a href=&quot;#安装jwt模块：&quot; class=&quot;headerlink&quot; title=&quot;安装jwt模块：&quot;&gt;&lt;/a&gt;安装jwt模块：&lt;/h3&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t</summary>
      
    
    
    
    <category term="后端" scheme="https://unspman.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Node.js" scheme="https://unspman.github.io/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>Node.js(13.状态保持技术cookie和session)</title>
    <link href="https://unspman.github.io/posts/76f375b1.html"/>
    <id>https://unspman.github.io/posts/76f375b1.html</id>
    <published>2023-01-13T00:00:00.000Z</published>
    <updated>2023-04-20T13:04:26.763Z</updated>
    
    <content type="html"><![CDATA[<h3 id="状态保持技术cookie和session"><a href="#状态保持技术cookie和session" class="headerlink" title="状态保持技术cookie和session"></a>状态保持技术cookie和session</h3><p>我们应该理解，http是一种无状态的协议，浏览器请求服务器是无状态的，在这里为什么是无状态的呢？这是因为在每次用户发起请求的时候，无论是浏览器还是服务器都无法知道之前这个用户做过什么，每一次请求都是一次新的请求。具体的原因呢，是因为浏览器与服务器是使用socket进行通信的，服务器将请求结果返回给浏览器后，会关闭当前的socket连接，而且服务器也会在处理页面完毕之后销毁页面对象。<br>        而有时我们必须保持用户的某些状态，比如是否登录，浏览过什么。<br>        我们实现状态保持主要有两种方式:</p><pre><code>    1、在客户端存储信息使用Cookie    2、在服务器端存储信息使用Session</code></pre><h3 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h3><p>特点：<br>1、cookie是由服务器生成，保存在浏览器端的一小段文本信息<br>2、cookie是以键和值的形式进行存储的<br>3、浏览器在访问一个网站的服务器时，会自发的在请求头中把和本网站相关的所有cookie发送到服务器。<br>4、cookie是基于域名安全的<br>5、cookie有过期时间，默认关闭浏览器之后过期，这个可以自己设置</p><p>使用<br>1、先安装和引入cookie-parser<br>2、再注册到app.js中：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">const cookieParase = require(&#x27;cookie-parser&#x27;);</span><br><span class="line">app.use(cookieParase());</span><br></pre></td></tr></table></figure><br>设置cookie：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res.cookie(&#x27;name&#x27;, &quot;node&quot;, &#123;maxAge: 1000 * 60 * 60 * 2 &#125;); </span><br></pre></td></tr></table></figure><br>获取cookie：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let name = req.cookies[&quot;name&quot;]</span><br></pre></td></tr></table></figure><br>完整使用代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">/ <span class="number">1</span>、安装cookie-parser</span><br><span class="line"><span class="comment">// 2、引入cookie-parser并注册到app中</span></span><br><span class="line"><span class="keyword">const</span> cookieParase = <span class="built_in">require</span>(<span class="string">&#x27;cookie-parser&#x27;</span>);</span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cookieParase</span>());</span><br><span class="line"> </span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/setCookie&quot;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//设置cookie</span></span><br><span class="line">    res.<span class="title function_">cookie</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&quot;node&quot;</span>, &#123;<span class="attr">maxAge</span>: <span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">2</span> &#125;);    <span class="comment">// 过期时间：单位毫秒</span></span><br><span class="line">    res.<span class="title function_">cookie</span>(<span class="string">&#x27;age&#x27;</span>, <span class="number">11</span>); </span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&quot;设置了cookie&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/getCookie&quot;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//获取cookie信息</span></span><br><span class="line">    <span class="keyword">let</span> name = req.<span class="property">cookies</span>[<span class="string">&quot;name&quot;</span>];</span><br><span class="line">    <span class="keyword">let</span> age = req.<span class="property">cookies</span>[<span class="string">&quot;age&quot;</span>];</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">`获取cookie, <span class="subst">$&#123;name&#125;</span>, <span class="subst">$&#123;age&#125;</span>`</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><h3 id="session"><a href="#session" class="headerlink" title="session"></a>session</h3><p>特点：<br>1、session数据保存在服务器端<br>2、session跟cookie一样是以键和值的形式进行存储<br>3、session依赖于cookie，每个session信息对应的客户端标识保存在cookie中</p><p>使用<br>1、安装和引入：cookie-session<br>2、注册到app.js:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">app.use(cookieSession(&#123;</span><br><span class="line">    name:&quot;my_session&quot;,  //name为session名，自己起一个字符串就行</span><br><span class="line">    keys:[&quot;$^%%&amp;^&amp;%$RT%&amp;TYGSGSFRR554785432$#@$$#%$@#%&quot;],  // 内部加密需要的keys， keys为随机字符串</span><br><span class="line">    maxAge: 1000 * 60 * 60 * 24   // 过期时间</span><br><span class="line">&#125;))</span><br></pre></td></tr></table></figure><br>注意注册session要有key<br>设置session：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">req.session[&quot;name&quot;] = &quot;session_node&quot;</span><br></pre></td></tr></table></figure><br>获取session：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let name = req.session[&quot;name&quot;]</span><br></pre></td></tr></table></figure><br>完整代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1、先安装：yarn add cookie-session     </span></span><br><span class="line"><span class="comment">//    如果报错，后面添加版本号，然后一直回车就好    yarn add cookie-session@2.0.0</span></span><br><span class="line"><span class="comment">// 2、设置到app中  </span></span><br><span class="line"><span class="keyword">const</span> cookieSession = <span class="built_in">require</span>(<span class="string">&#x27;cookie-session&#x27;</span>);</span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cookieSession</span>(&#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&quot;my_session&quot;</span>,  <span class="comment">//name为session名，自己起一个字符串就行</span></span><br><span class="line">    <span class="attr">keys</span>:[<span class="string">&quot;$^%%&amp;^&amp;%$RT%&amp;TYGSGSFRR554785432$#@$$#%$@#%&quot;</span>],  <span class="comment">// 内部加密需要的keys， keys为随机字符串</span></span><br><span class="line">    <span class="attr">maxAge</span>: <span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span>   <span class="comment">// 过期时间</span></span><br><span class="line">&#125;))</span><br><span class="line"> </span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/setSession&quot;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//设置session</span></span><br><span class="line">    req.<span class="property">session</span>[<span class="string">&quot;name&quot;</span>] = <span class="string">&quot;session_node&quot;</span></span><br><span class="line">    req.<span class="property">session</span>[<span class="string">&quot;age&quot;</span>] = <span class="number">11</span> </span><br><span class="line">    </span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&quot;设置了Session&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/getSession&quot;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//获取session信息</span></span><br><span class="line">    <span class="keyword">let</span> name = req.<span class="property">session</span>[<span class="string">&quot;name&quot;</span>]</span><br><span class="line">    <span class="keyword">let</span> age = req.<span class="property">session</span>[<span class="string">&quot;age&quot;</span>]</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">`获取Session, <span class="subst">$&#123;name&#125;</span>, <span class="subst">$&#123;age&#125;</span>`</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;状态保持技术cookie和session&quot;&gt;&lt;a href=&quot;#状态保持技术cookie和session&quot; class=&quot;headerlink&quot; title=&quot;状态保持技术cookie和session&quot;&gt;&lt;/a&gt;状态保持技术cookie和session&lt;/h3&gt;&lt;</summary>
      
    
    
    
    <category term="后端" scheme="https://unspman.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Node.js" scheme="https://unspman.github.io/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>Node.js(12.ajax)</title>
    <link href="https://unspman.github.io/posts/42c57cbe.html"/>
    <id>https://unspman.github.io/posts/42c57cbe.html</id>
    <published>2023-01-12T00:00:00.000Z</published>
    <updated>2023-04-20T13:04:26.763Z</updated>
    
    <content type="html"><![CDATA[<h3 id="ajax简介"><a href="#ajax简介" class="headerlink" title="ajax简介"></a>ajax简介</h3><p>AJAX即异步JavaScript与XML技术，是一套综合了多项技术的浏览器端网络开发技术。</p><p>简单来说，AJAX就是使用JavaScript代码发送网络请求并处理响应，有浏览器即客户端实现。</p><p>ajax技术能够在页面不刷新的情况下，和服务器端进行交互，可以仅向服务器发送并取回必须的数据，并在客户端采用js处理响应。交换的数据大大减少，服务器的响应更加迅速，把数据处理工作放到了客户端进行，减少了web服务器的负荷。</p><p>特点：异步请求，局部刷新<br>异步是指：发送数据后，不等待响应，直接发送下一个数据包</p><h3 id="AJAX书写步骤"><a href="#AJAX书写步骤" class="headerlink" title="AJAX书写步骤"></a>AJAX书写步骤</h3><p>1、创建AJAX对象<br>2、设置请求路径，请求方式<br>3、绑定监听状态改变的处理函数，在处理函数可获取响应数据<br>4、发送请求<br>但是注意，创建ajax对象会有浏览器兼容性问题：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">createAjax</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> ajax;</span><br><span class="line">    <span class="keyword">try</span> &#123;       <span class="comment">// 非 IE </span></span><br><span class="line">        ajax = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (e) &#123; <span class="comment">// IE</span></span><br><span class="line">        ajax = <span class="keyword">new</span> <span class="title class_">ActiveXObject</span>(<span class="string">&#x27;Microsoft.XMLHTTP&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ajax;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="响应处理与响应流程"><a href="#响应处理与响应流程" class="headerlink" title="响应处理与响应流程"></a>响应处理与响应流程</h3><p> 响应处理是服务端响应客户端的数据，根据状态码和ajax对象的状态信息进行不同的处理。</p><p>ajax对象有四个属性：<br>1、readyState:共5个状态，0-4，每个值代表不同的含义：<br>        0：初始化，ajax对象还没有完成初始化<br>        1：载入，ajax对象开始发送请求<br>        2：载入完成，ajax对象的请求发送完成<br>        3：解析，ajax对象开始读取服务器的响应<br>        4：完成，ajax对系读取服务器的响应结束<br>2、status表示响应的HTTP状态码：<br>        200：成功<br>        302：重定向<br>        404：找不到资源<br>        500：服务端错误<br>3、responseText获得字符串形式的响应数据<br>4、rersponseXML获取XML形式的响应数据</p><p>我们可以知道，在状态改变的处理函数一般针对readyState==4且status==200的情况才处理。</p><h3 id="利用AJAX发送get请求"><a href="#利用AJAX发送get请求" class="headerlink" title="利用AJAX发送get请求"></a>利用AJAX发送get请求</h3><p>前端js代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">let</span> obtn = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;obtn&quot;</span>);</span><br><span class="line">    <span class="keyword">let</span> odiv = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;odiv&quot;</span>);</span><br><span class="line"> </span><br><span class="line">    obtn.<span class="property">onclick</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//发送ajax请求</span></span><br><span class="line">        <span class="comment">// 1、创建 AJAX 对象；</span></span><br><span class="line">        <span class="keyword">let</span> ajax = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// 2、设置请求路径，请求方式等；ajax.open(请求方式，路径)</span></span><br><span class="line">        ajax.<span class="title function_">open</span>(<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;/get_data&#x27;</span>);</span><br><span class="line">        <span class="comment">// 3、绑定监听状态改变的处理函数，在处理函数可获取响应数据；</span></span><br><span class="line">        ajax.<span class="property">onreadystatechange</span> = <span class="function">()=&gt;</span>&#123;</span><br><span class="line">            <span class="comment">// 获取响应回来的数据</span></span><br><span class="line">            <span class="keyword">if</span>(ajax.<span class="property">readyState</span>===<span class="number">4</span>&amp;&amp; ajax.<span class="property">status</span>===<span class="number">200</span>)&#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(ajax.<span class="property">readyState</span>);</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(ajax.<span class="property">responseText</span>);</span><br><span class="line">                <span class="comment">// 请求到数据之后，就可以把数据更新到页面上</span></span><br><span class="line">                odiv.<span class="property">innerHTML</span> = ajax.<span class="property">responseText</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 4、发送请求。</span></span><br><span class="line">        ajax.<span class="title function_">send</span>()</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><br>服务端代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(requestUrl=== <span class="string">&quot;/get_data&quot;</span>)&#123;       <span class="comment">//或者写成：/get_data.*/.test(requestUrl)</span></span><br><span class="line">    response.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-type&quot;</span>,<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">    response.<span class="title function_">write</span>(<span class="string">&quot;这个数据是来自服务器的...&quot;</span>);</span><br><span class="line">    response.<span class="title function_">end</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>避免缓存：<br>为了保证我们读取的信息都是最新的，我们要禁止他的缓存功能，解决方法如下:</p><p>在 URL 后面加上一个随机数：Math.random()。<br>在 URL 后面加上时间搓：new Date().getTime()。<br>在使用 AJAX 发送请求前加上 ajax.setRequestHeader(‘Cache-Control’, ‘no-cache’)。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ajax.open( ..... );</span><br><span class="line">ajax.setRequestHeader(&#x27;Cache-Control&#x27;, &#x27;no-cache&#x27;);</span><br><span class="line">ajax.send();</span><br></pre></td></tr></table></figure></p><h3 id="利用AJAX发送post请求"><a href="#利用AJAX发送post请求" class="headerlink" title="利用AJAX发送post请求"></a>利用AJAX发送post请求</h3><p>前端代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">let</span> obtn = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;obtn&quot;</span>);</span><br><span class="line">    <span class="keyword">let</span> odiv = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;odiv&quot;</span>);</span><br><span class="line">    obtn.<span class="property">onclick</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> username = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;username&quot;</span>).<span class="property">value</span>;</span><br><span class="line">        <span class="keyword">let</span> password = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;password&quot;</span>).<span class="property">value</span>;</span><br><span class="line">        <span class="keyword">let</span> params = <span class="string">`username=<span class="subst">$&#123;username&#125;</span>&amp;password=<span class="subst">$&#123;password&#125;</span>`</span>;</span><br><span class="line">        <span class="comment">//发送ajax请求</span></span><br><span class="line">        <span class="comment">// 1、创建 AJAX 对象；</span></span><br><span class="line">        <span class="keyword">let</span> ajax = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// 2、设置请求路径，请求方式等；ajax.open(请求方式，路径)</span></span><br><span class="line">        ajax.<span class="title function_">open</span>(<span class="string">&#x27;POST&#x27;</span>, <span class="string">&#x27;/login_post&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        ajax.<span class="title function_">setRequestHeader</span>(<span class="string">&quot;enctype&quot;</span>,<span class="string">&quot;application/x-www-form-urlencoded&quot;</span>);</span><br><span class="line">        <span class="comment">// 3、绑定监听状态改变的处理函数，在处理函数可获取响应数据；</span></span><br><span class="line">        ajax.<span class="property">onreadystatechange</span> = <span class="function">()=&gt;</span>&#123;</span><br><span class="line">            <span class="comment">// 获取响应回来的数据</span></span><br><span class="line">            <span class="keyword">if</span>(ajax.<span class="property">readyState</span>===<span class="number">4</span>&amp;&amp; ajax.<span class="property">status</span>===<span class="number">200</span>)&#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(ajax.<span class="property">readyState</span>);</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(ajax.<span class="property">responseText</span>);</span><br><span class="line">                <span class="comment">// 请求到数据之后，就可以把数据更新到页面上</span></span><br><span class="line">                odiv.<span class="property">innerHTML</span> = ajax.<span class="property">responseText</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 4、发送请求。</span></span><br><span class="line">        ajax.<span class="title function_">send</span>(params)</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><br>服务端代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(requestUrl=== <span class="string">&quot;/login_post&quot;</span>)&#123;   <span class="comment">//来处理css文件的请求   如果这个路径包含.css</span></span><br><span class="line">    request.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>,<span class="function">(<span class="params">postData</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">let</span> uname = postData.<span class="title function_">toString</span>().<span class="title function_">split</span>(<span class="string">&quot;&amp;&quot;</span>)[<span class="number">0</span>].<span class="title function_">split</span>(<span class="string">&quot;=&quot;</span>)[<span class="number">1</span>];   <span class="comment">// 获取用户提交的用户名</span></span><br><span class="line">        <span class="keyword">let</span> pwd = postData.<span class="title function_">toString</span>().<span class="title function_">split</span>(<span class="string">&quot;&amp;&quot;</span>)[<span class="number">1</span>].<span class="title function_">split</span>(<span class="string">&quot;=&quot;</span>)[<span class="number">1</span>];    <span class="comment">// 获取用户提交的密码</span></span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span>(uname===username &amp;&amp; pwd===password)&#123;</span><br><span class="line">            response.<span class="title function_">end</span>(<span class="string">&quot;账号密码正确，登录成功&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            response.<span class="title function_">end</span>(<span class="string">&quot;账号或者密码错误，登录失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="ajax代码的抽取"><a href="#ajax代码的抽取" class="headerlink" title="ajax代码的抽取"></a>ajax代码的抽取</h3><p> 我们知道，我们为了后期项目的维护，我们要将项目尽量模块化，所以这个ajax代码如果不能复用，那么代码量将比较大，不利于后期维护该项目，我们将ajax抽取出来成为一个文件，变成一个函数，在需要发送请求时调用即可。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">ajax</span>(<span class="params">mehtod, url, param, success, time</span>)&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">var</span> ajax;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//处理ajax获取时候的兼容性问题</span></span><br><span class="line">    <span class="keyword">try</span> &#123;       <span class="comment">// 非 IE </span></span><br><span class="line">        ajax = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (e) &#123; <span class="comment">// IE</span></span><br><span class="line">        ajax = <span class="keyword">new</span> <span class="title class_">ActiveXObject</span>(<span class="string">&#x27;Microsoft.XMLHTTP&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>(method === <span class="string">&#x27;get&#x27;</span>)&#123;</span><br><span class="line">        param = <span class="built_in">encodeURI</span>(param);  <span class="comment">//针对get请求的查询参数出现中文的编码处理</span></span><br><span class="line">        url = url + <span class="string">&#x27;?&#x27;</span> + param;</span><br><span class="line">        param = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    ajax.<span class="title function_">open</span>(method, url);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>(method === <span class="string">&#x27;post&#x27;</span>)&#123;</span><br><span class="line">        ajax.<span class="title function_">setRequestHeader</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    ajax.<span class="property">onreadystatechange</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123; <span class="comment">// onload</span></span><br><span class="line">        <span class="keyword">if</span>(ajax.<span class="property">readyState</span> == <span class="number">4</span> &amp;&amp; ajax.<span class="property">status</span> == <span class="number">200</span>)&#123;</span><br><span class="line">            <span class="title function_">success</span>(ajax.<span class="property">responseText</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    ajax.<span class="title function_">send</span>(param);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">var</span> timer = <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        ajax.<span class="title function_">abort</span>();</span><br><span class="line">    &#125;, time);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="在jQuery里面使用ajax："><a href="#在jQuery里面使用ajax：" class="headerlink" title="在jQuery里面使用ajax："></a>在jQuery里面使用ajax：</h3><p>async：默认设置下，所有请求均为异步请求。</p><p>contentType：发送信息至服务器时内容编码类型，默认为 “application/x-www-form-urlencoded”。</p><p>data：发送到服务器的数据，可以为对象或者 Key=value 格式字符串，若为对象则会自动转换为请求字符串格式。</p><p>type：默认: “GET”，其它 HTTP 请求方法，如 PUT 和 DELETE 也可以使用，但取决浏览器支持。</p><p>url：发送请求的地址，默认当前页地址。</p><p>dataType：预期服务器返回的数据类型。如果不指定，jQuery 将自动根据 HTTP 包 MIME 信息来智能判断，比如 XML MIME类型就被识别为 XML，可以不填，可用值：”xml”、”html”、”script”、”json”、”jsonp”、”text”。</p><p>cache：默认为 true（dataType 为 script 和 jsonp 时默认为 false，设置为 false 将禁用缓存。</p><p>context：这个对象用于设置 AJAX 相关回调函数的上下文。也就是说，让回调函数内 this 的指向（若不指定为当前选项）。</p><p>beforeSend：发送请求前调用此函数，可用与如添加自定义 HTTP 头，检查请求参数是否合法。XMLHttpRequest 对象是唯一的参数。若在函数中返回 false 可以取消本次请求。</p><p>success：请求成功后的回调函数，参数：由服务器返回，并根据 dataType 参数进行处理后的数据；描述状态的字符串。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;url&#x27;</span>,</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;<span class="attr">username</span>:<span class="string">&#x27;zs&#x27;</span>, <span class="attr">password</span>:<span class="string">&#x27;12345&#x27;</span>&#125;,</span><br><span class="line">    <span class="attr">success</span>: <span class="keyword">function</span>(<span class="params">data</span>)&#123;</span><br><span class="line">        <span class="comment">// 请求成功业务逻辑</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><h3 id="使用jQuery发送GET请求"><a href="#使用jQuery发送GET请求" class="headerlink" title="使用jQuery发送GET请求"></a>使用jQuery发送GET请求</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$.<span class="title function_">get</span>(<span class="string">&#x27;/get_data&#x27;</span>, &#123;<span class="attr">name</span>:<span class="string">&#x27;nodejs&#x27;</span>, <span class="attr">age</span>:<span class="number">11</span>&#125;, <span class="keyword">function</span>(<span class="params">data</span>)&#123;</span><br><span class="line">     <span class="comment">//请求成功的业务逻辑(成功之后的操作)</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="使用jQuery发送POST请求"><a href="#使用jQuery发送POST请求" class="headerlink" title="使用jQuery发送POST请求"></a>使用jQuery发送POST请求</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$.<span class="title function_">post</span>(<span class="string">&#x27;url&#x27;</span>, &#123;<span class="attr">username</span>:$(<span class="string">&quot;#username&quot;</span>).<span class="title function_">val</span>(), <span class="attr">password</span>:$(<span class="string">&quot;#password&quot;</span>).<span class="title function_">val</span>()&#125;, <span class="keyword">function</span>(<span class="params">data</span>)&#123;</span><br><span class="line">    <span class="comment">// 请求成功业务逻辑</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;ajax简介&quot;&gt;&lt;a href=&quot;#ajax简介&quot; class=&quot;headerlink&quot; title=&quot;ajax简介&quot;&gt;&lt;/a&gt;ajax简介&lt;/h3&gt;&lt;p&gt;AJAX即异步JavaScript与XML技术，是一套综合了多项技术的浏览器端网络开发技术。&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="后端" scheme="https://unspman.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Node.js" scheme="https://unspman.github.io/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>Node.js(11.对象关系映射ORM)</title>
    <link href="https://unspman.github.io/posts/955a60a7.html"/>
    <id>https://unspman.github.io/posts/955a60a7.html</id>
    <published>2023-01-11T00:00:00.000Z</published>
    <updated>2023-04-20T13:04:26.763Z</updated>
    
    <content type="html"><![CDATA[<h3 id="对象关系映射ORM-Object-Relation-Mapping-ORM"><a href="#对象关系映射ORM-Object-Relation-Mapping-ORM" class="headerlink" title="对象关系映射ORM(Object Relation Mapping ORM)"></a>对象关系映射ORM(Object Relation Mapping ORM)</h3><p>优点：<br>1、不需要写数据库sql代码来操作数据库<br>2、避免了不同数据库之间的操作差异<br>3、可以通过简单的配置来更换数据库<br>缺点：<br>相比于直接使用sql语句，这样做的话，性能有所缺失<br>    使用方法：<br>1、在网上找到orm文件，或者最后面我会把这一大段代码都粘贴出来<br>2、修改文件中的数据库连接设置</p><h4 id="查询数据："><a href="#查询数据：" class="headerlink" title="查询数据："></a>查询数据：</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">查询所有学生的所有信息</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> db = <span class="built_in">require</span>(<span class="string">&quot;./db/nodejs-orm/index.js&quot;</span>);</span><br><span class="line"> </span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>,<span class="function">(<span class="params">req, res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="title class_">Student</span> = db.<span class="title function_">model</span>(<span class="string">&quot;students&quot;</span>);</span><br><span class="line">    <span class="title class_">Student</span>.<span class="title function_">find</span>(<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">        res.<span class="title function_">send</span>(results);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">查询指定字段(find、数组参数)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">let</span> <span class="title class_">Student</span> = db.<span class="title function_">model</span>(<span class="string">&quot;students&quot;</span>);</span><br><span class="line"><span class="title class_">Student</span>.<span class="title function_">find</span>([<span class="string">&quot;name&quot;</span>, <span class="string">&quot;age&quot;</span>],<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">    res.<span class="title function_">send</span>(results);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">按条件查询(find、字符串参数)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">let</span> <span class="title class_">Student</span> = db.<span class="title function_">model</span>(<span class="string">&quot;students&quot;</span>);   </span><br><span class="line"><span class="title class_">Student</span>.<span class="title function_">find</span>(<span class="string">&quot;name=&#x27;小月月&#x27;&quot;</span>,<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;  <span class="comment">//这里的引号里面书写的是where后面的字符串</span></span><br><span class="line">    res.<span class="title function_">send</span>(results);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">分页查询(limit、对象参数 where\number\count)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">let</span> <span class="title class_">Student</span> = db.<span class="title function_">model</span>(<span class="string">&quot;students&quot;</span>);  </span><br><span class="line"><span class="comment">//where查询条件，为可选项，number第几页； count表示每页条数</span></span><br><span class="line"><span class="title class_">Student</span>.<span class="title function_">limit</span>(&#123;<span class="attr">where</span>:<span class="string">&quot;age&gt;18&quot;</span>,<span class="attr">number</span>:<span class="number">1</span>,<span class="attr">count</span>:<span class="number">5</span>&#125;,<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">    res.<span class="title function_">send</span>(results);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="增加数据"><a href="#增加数据" class="headerlink" title="增加数据"></a>增加数据</h4> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">增加单条记录， insert、对象参数、属性就是列名</span><br><span class="line"> </span><br><span class="line"><span class="keyword">let</span> <span class="title class_">Student</span> = db.<span class="title function_">model</span>(<span class="string">&quot;students&quot;</span>);</span><br><span class="line"><span class="title class_">Student</span>.<span class="title function_">insert</span>(&#123;<span class="attr">name</span>:<span class="string">&#x27;赵云&#x27;</span>,<span class="attr">age</span>:<span class="number">20</span>&#125;,<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line"> </span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&quot;增加成功&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">同时增加多个数据， insert、数组参数、元素为对象、属性就是列名</span><br><span class="line"> </span><br><span class="line"><span class="keyword">let</span> <span class="title class_">Student</span> = db.<span class="title function_">model</span>(<span class="string">&quot;students&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> arr = [&#123;<span class="attr">name</span>:<span class="string">&#x27;刘备&#x27;</span>&#125;, &#123;<span class="attr">name</span>:<span class="string">&quot;关羽&quot;</span>&#125;,&#123;<span class="attr">name</span>:<span class="string">&quot;张飞&quot;</span>&#125;];</span><br><span class="line"> </span><br><span class="line"><span class="title class_">Student</span>.<span class="title function_">insert</span>(arr,<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">res.<span class="title function_">send</span>(<span class="string">&quot;增加成功&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h4> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> 按条件删除记录 <span class="keyword">delete</span>、字符串参数</span><br><span class="line"> </span><br><span class="line"><span class="keyword">let</span> <span class="title class_">Student</span> = db.<span class="title function_">model</span>(<span class="string">&quot;students&quot;</span>);</span><br><span class="line"><span class="title class_">Student</span>.<span class="title function_">delete</span>(<span class="string">&#x27;age=0&#x27;</span>,<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">     res.<span class="title function_">send</span>(<span class="string">&quot;删除成功&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">清空表里面所有内容   <span class="keyword">delete</span>、无参数</span><br><span class="line"> </span><br><span class="line"><span class="keyword">let</span> <span class="title class_">Test1</span> = db.<span class="title function_">model</span>(<span class="string">&quot;test1&quot;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="title class_">Test1</span>.<span class="title function_">delete</span>(<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&quot;删除成功&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h4> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> 修改所有学生name为小明   update、对象参数、属性就是列名</span><br><span class="line"> </span><br><span class="line"><span class="keyword">let</span> <span class="title class_">Student</span> = db.<span class="title function_">model</span>(<span class="string">&quot;students&quot;</span>);</span><br><span class="line"><span class="title class_">Student</span>.<span class="title function_">update</span>(&#123;<span class="attr">name</span>:<span class="string">&#x27;小明&#x27;</span>&#125;,<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(results);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">修改id为<span class="number">1</span>的年龄为<span class="number">30</span>     update、字符串参数<span class="number">1</span>、对象参数<span class="number">2</span>、属性就是列名</span><br><span class="line"> </span><br><span class="line"><span class="keyword">let</span> <span class="title class_">Student</span> = db.<span class="title function_">model</span>(<span class="string">&quot;students&quot;</span>);</span><br><span class="line"><span class="title class_">Student</span>.<span class="title function_">update</span>(<span class="string">&#x27;id=1&#x27;</span>,&#123;<span class="attr">age</span>:<span class="number">30</span>&#125;,<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&quot;修改成功&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="自定义执行sql语句"><a href="#自定义执行sql语句" class="headerlink" title="自定义执行sql语句"></a>自定义执行sql语句</h4>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">let</span> <span class="title class_">Student</span> = db.<span class="title function_">model</span>(<span class="string">&quot;students&quot;</span>);</span><br><span class="line"><span class="title class_">Student</span>.<span class="title function_">sql</span>(<span class="string">&#x27;select * from students&#x27;</span>,<span class="function">(<span class="params">err,results</span>)=&gt;</span>&#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&quot;执行成功&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="但是吧，如果要将获取数据库数据变为异步操作的话，我们就要用Promise和asyne-await了-这里要将语句封装成一个函数"><a href="#但是吧，如果要将获取数据库数据变为异步操作的话，我们就要用Promise和asyne-await了-这里要将语句封装成一个函数" class="headerlink" title="但是吧，如果要将获取数据库数据变为异步操作的话，我们就要用Promise和asyne+await了,这里要将语句封装成一个函数"></a>但是吧，如果要将获取数据库数据变为异步操作的话，我们就要用Promise和asyne+await了,这里要将语句封装成一个函数</h4>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> (<span class="keyword">async</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="title class_">Student</span> = db.<span class="title function_">model</span>(<span class="string">&quot;students&quot;</span>);  <span class="comment">//获取学生表模型</span></span><br><span class="line">    <span class="keyword">let</span> results </span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        results = <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">            <span class="title class_">Student</span>.<span class="title function_">find</span>(<span class="string">&#x27;id&gt;3&#x27;</span>,<span class="function">(<span class="params">err,data</span>)=&gt;</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(err)<span class="title function_">reject</span>(err);</span><br><span class="line">                <span class="title function_">resolve</span>(data);</span><br><span class="line">            &#125;);    </span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;<span class="keyword">catch</span>(err)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">        res.<span class="title function_">send</span>(&#123;<span class="attr">errmsg</span>:<span class="string">&quot;数据库查询出错&quot;</span>&#125;)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">send</span>(results);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h4 id="为了调用方便，我们可以将这些异步代码全部封装：在已有的db文件夹中新建handleDB-js文件，代码如下："><a href="#为了调用方便，我们可以将这些异步代码全部封装：在已有的db文件夹中新建handleDB-js文件，代码如下：" class="headerlink" title="为了调用方便，我们可以将这些异步代码全部封装：在已有的db文件夹中新建handleDB.js文件，代码如下："></a>为了调用方便，我们可以将这些异步代码全部封装：在已有的db文件夹中新建handleDB.js文件，代码如下：</h4> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> db = <span class="built_in">require</span>(<span class="string">&quot;./nodejs-orm&quot;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleDB</span>(<span class="params">res,tableName,methodName,errorMsg, n1, n2</span>)&#123;</span><br><span class="line">    <span class="comment">//数据库操作</span></span><br><span class="line">    <span class="keyword">let</span> <span class="title class_">Model</span> = db.<span class="title function_">model</span>(tableName);  <span class="comment">// 表映射为模型, 参数是要操作的这个表的表名</span></span><br><span class="line">    <span class="keyword">let</span> results;  <span class="comment">//results就收查询到的数据</span></span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        results = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>)=&gt;</span>&#123;</span><br><span class="line">            <span class="comment">// Model.find(&quot;id&gt;=15&quot;,(err,data)=&gt;&#123;   //直接调用不封装</span></span><br><span class="line">            <span class="keyword">if</span>(!n1)&#123;</span><br><span class="line">                <span class="title class_">Model</span>[methodName](<span class="function">(<span class="params">err,data</span>)=&gt;</span>&#123;    <span class="comment">//封装的时候使用这种格式 </span></span><br><span class="line">                    <span class="keyword">if</span>(err)<span class="title function_">reject</span>(err);   <span class="comment">// 失败的时候调用reject()</span></span><br><span class="line">                    <span class="title function_">resolve</span>(data);    <span class="comment">//成功的时候调用resolve() </span></span><br><span class="line">                &#125;);</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//能够给执行到这里说明n1已经传进来了！</span></span><br><span class="line">            <span class="keyword">if</span>(!n2)&#123;</span><br><span class="line">                <span class="title class_">Model</span>[methodName](n1,<span class="function">(<span class="params">err,data</span>)=&gt;</span>&#123;    <span class="comment">//封装的时候使用这种格式 </span></span><br><span class="line">                    <span class="keyword">if</span>(err)<span class="title function_">reject</span>(err);   <span class="comment">// 失败的时候调用reject()</span></span><br><span class="line">                    <span class="title function_">resolve</span>(data);    <span class="comment">//成功的时候调用resolve() </span></span><br><span class="line">                &#125;);</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//能够给执行到这里说明n1和n2已经传进来了！</span></span><br><span class="line">            <span class="title class_">Model</span>[methodName](n1,n2,<span class="function">(<span class="params">err,data</span>)=&gt;</span>&#123;    <span class="comment">//封装的时候使用这种格式 </span></span><br><span class="line">                <span class="keyword">if</span>(err)<span class="title function_">reject</span>(err);   <span class="comment">// 失败的时候调用reject()</span></span><br><span class="line">                <span class="title function_">resolve</span>(data);    <span class="comment">//成功的时候调用resolve() </span></span><br><span class="line">            &#125;);</span><br><span class="line">                </span><br><span class="line">        &#125;) </span><br><span class="line">    &#125;<span class="keyword">catch</span>(err)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(err); <span class="comment">// 给后台看到的</span></span><br><span class="line">        res.<span class="title function_">send</span>(&#123;<span class="attr">errMsg</span>:errorMsg&#125;); <span class="comment">//给前端送过去的</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> results</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = handleDB</span><br></pre></td></tr></table></figure><h4 id="那么在项目中只要用到数据库操作就会很简单了"><a href="#那么在项目中只要用到数据库操作就会很简单了" class="headerlink" title="那么在项目中只要用到数据库操作就会很简单了"></a>那么在项目中只要用到数据库操作就会很简单了</h4>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> db = <span class="built_in">require</span>(<span class="string">&quot;./db/handleDB&quot;</span>);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">(<span class="keyword">async</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="comment">//获取参数， 判空</span></span><br><span class="line"> </span><br><span class="line">        <span class="comment">//数据库操作</span></span><br><span class="line">        <span class="comment">// let results = await Promise对象</span></span><br><span class="line">        <span class="keyword">let</span> results = <span class="keyword">await</span> <span class="title function_">handleDB</span>(res,<span class="string">&quot;students&quot;</span>, <span class="string">&quot;find&quot;</span>, <span class="string">&quot;students数据库插入数据出错！&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//查询到的结果返回页面中去</span></span><br><span class="line">        res.<span class="title function_">send</span>(results);</span><br><span class="line"> </span><br><span class="line">    &#125;)();</span><br><span class="line">    </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="附录：ORM的js文件"><a href="#附录：ORM的js文件" class="headerlink" title="附录：ORM的js文件"></a>附录：ORM的js文件</h3>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mysql = <span class="built_in">require</span>(<span class="string">&#x27;mysql&#x27;</span>);</span><br><span class="line"><span class="comment">// 数据库连接设置</span></span><br><span class="line"><span class="keyword">let</span> orm_config = &#123;</span><br><span class="line">    <span class="attr">host</span>: <span class="string">&#x27;localhost&#x27;</span>,<span class="comment">//数据库地址</span></span><br><span class="line">    <span class="attr">port</span>:<span class="string">&#x27;3306&#x27;</span>,</span><br><span class="line">    <span class="attr">user</span>: <span class="string">&#x27;root&#x27;</span>,<span class="comment">//用户名，没有可不填</span></span><br><span class="line">    <span class="attr">password</span>: <span class="string">&#x27;&#x27;</span>,<span class="comment">//密码，没有可不填</span></span><br><span class="line">    <span class="attr">database</span>: <span class="string">&#x27;news&#x27;</span><span class="comment">//数据库名称</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">let</span> options = &#123;&#125;;</span><br><span class="line"><span class="keyword">let</span> tableSQL = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> isConnect = <span class="literal">false</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Model</span>(<span class="params">name, option</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">option</span> = option;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@description</span>: 查询数据</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> &#123;<span class="type"></span>&#125; options：可选参数</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> &#123;<span class="type">Function</span>&#125; callback :（req,results）=&gt;&#123;&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title class_">Model</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">find</span> = <span class="keyword">function</span> (<span class="params">options, callback</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!isConnect) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(options.<span class="property">constructor</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">connect</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">            isConnect = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">var</span> str = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span> (!callback) &#123;</span><br><span class="line">                str = <span class="string">`select * from <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>`</span>;</span><br><span class="line">                callback = options;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (options.<span class="property">constructor</span> == <span class="title class_">Array</span>) &#123;</span><br><span class="line">                str = <span class="string">`select <span class="subst">$&#123;options.join()&#125;</span> from <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>`</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(options.<span class="property">constructor</span> == <span class="title class_">Object</span>)&#123;</span><br><span class="line">                str = <span class="string">`select <span class="subst">$&#123;options.arr.join()&#125;</span> from <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> where <span class="subst">$&#123;options.where&#125;</span>`</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                str = <span class="string">`select * from <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> where <span class="subst">$&#123;options&#125;</span>`</span>;</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="comment">//console.log(str);</span></span><br><span class="line">            connection.<span class="title function_">query</span>(str, <span class="function">(<span class="params">error, results, fields</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="title function_">callback</span>(error, results, fields);</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> str = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (!callback) &#123;</span><br><span class="line">            str = <span class="string">`select * from <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>`</span>;</span><br><span class="line">            callback = options;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (options.<span class="property">constructor</span> == <span class="title class_">Array</span>) &#123;</span><br><span class="line">            str = <span class="string">`select <span class="subst">$&#123;options.join()&#125;</span> from <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>`</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            str = <span class="string">`select * from <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> where <span class="subst">$&#123;options&#125;</span>`</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">//console.log(str);</span></span><br><span class="line">        connection.<span class="title function_">query</span>(str, <span class="function">(<span class="params">error, results, fields</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="title function_">callback</span>(error, results, fields);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@description</span>: 分页查询</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> &#123;<span class="type">Object</span>&#125; options :   &#123; where:查询条件, number: 当前页数 , count : 每页数量 &#125;</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span>: </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title class_">Model</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">limit</span> = <span class="keyword">function</span> (<span class="params">options, callback</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> str = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (!options.<span class="property">where</span>) &#123;</span><br><span class="line">        str = <span class="string">`select * from <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> limit <span class="subst">$&#123;(options.number - <span class="number">1</span>) * options.count&#125;</span>,<span class="subst">$&#123;options.count&#125;</span>`</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        str = str = <span class="string">`select * from <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> where <span class="subst">$&#123;options.where&#125;</span> limit <span class="subst">$&#123;(options.number - <span class="number">1</span>) * options.count&#125;</span>,<span class="subst">$&#123;options.count&#125;</span>`</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(str);</span><br><span class="line">    connection.<span class="title function_">query</span>(str, <span class="function">(<span class="params">error, results, fields</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">callback</span>(error, results, fields);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@description</span>: 插入数据</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> &#123;<span class="type">Object</span>&#125; obj:对象或者数组</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> &#123;<span class="type">Function</span>&#125; callback :（req,results）=&gt;&#123;&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title class_">Model</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">insert</span> = <span class="keyword">function</span> (<span class="params">obj, callback</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!isConnect) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">connect</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                <span class="keyword">throw</span> err;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                connection.<span class="title function_">query</span>(tableSQL, <span class="function">(<span class="params">error, results, fields</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="title class_">Array</span>.<span class="title function_">isArray</span>(obj)) &#123;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; obj.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                            <span class="variable language_">this</span>.<span class="title function_">insertObj</span>(obj[i], callback)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="variable language_">this</span>.<span class="title function_">insertObj</span>(obj, callback)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line"> </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title class_">Array</span>.<span class="title function_">isArray</span>(obj)) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; obj.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">insertObj</span>(obj[i], callback)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">insertObj</span>(obj, callback)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="title class_">Model</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">insertObj</span> = <span class="keyword">function</span> (<span class="params">obj, callback</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> keys = [];</span><br><span class="line">    <span class="keyword">let</span> values = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">        keys.<span class="title function_">push</span>(key);</span><br><span class="line">        values += <span class="string">`&quot;<span class="subst">$&#123;obj[key]&#125;</span>&quot;,`</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    values = values.<span class="title function_">replace</span>(<span class="regexp">/,$/</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    <span class="keyword">let</span> str = <span class="string">`INSERT INTO <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> (<span class="subst">$&#123;keys.join()&#125;</span>) VALUES (<span class="subst">$&#123;values&#125;</span>)`</span>;</span><br><span class="line">    connection.<span class="title function_">query</span>(str, <span class="function">(<span class="params">error, results, fields</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">callback</span>(error, results);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@description</span>: 更新数据</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> &#123;<span class="type">Object</span>&#125; option：可选参数 更新条件</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> &#123;<span class="type">Object</span>&#125; obj： 修改后的数据 </span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> &#123;<span class="type">Function</span>&#125; callback :（req,results）=&gt;&#123;&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title class_">Model</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">update</span> = <span class="keyword">function</span> (<span class="params">option, obj, callback</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> str = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">arguments</span>.<span class="property">length</span> == <span class="number">2</span>) &#123;</span><br><span class="line">        callback = obj;</span><br><span class="line">        obj = option;</span><br><span class="line">        str = <span class="string">`UPDATE <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> SET `</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">            str += <span class="string">`<span class="subst">$&#123;key&#125;</span>=&#x27;<span class="subst">$&#123;obj[key]&#125;</span>&#x27;, `</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        str = str.<span class="title function_">replace</span>(<span class="regexp">/(, )$/</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        str = <span class="string">`UPDATE <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> SET `</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">            str += <span class="string">`<span class="subst">$&#123;key&#125;</span>=&#x27;<span class="subst">$&#123;obj[key]&#125;</span>&#x27;, `</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        str = str.<span class="title function_">replace</span>(<span class="regexp">/(, )$/</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        str += <span class="string">` where <span class="subst">$&#123;option&#125;</span>`</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"> </span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(str);</span><br><span class="line">    connection.<span class="title function_">query</span>(str, <span class="function">(<span class="params">error, results, fields</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">callback</span>(error, results, fields);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>;</span><br><span class="line"> </span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@description</span>: 删除数据</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> &#123;<span class="type">Object</span>&#125; option：可选参数 删除条件</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> &#123;<span class="type">Function</span>&#125; callback :（req,results）=&gt;&#123;&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title class_">Model</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">delete</span> = <span class="keyword">function</span> (<span class="params">option, callback</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> str = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (!callback) &#123;</span><br><span class="line">        str = <span class="string">`delete from <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>`</span>;</span><br><span class="line">        callback = option;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        str = <span class="string">`delete from <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> where <span class="subst">$&#123;option&#125;</span>`</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(str);</span><br><span class="line">    connection.<span class="title function_">query</span>(str, <span class="function">(<span class="params">error, results, fields</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">callback</span>(error, results, fields);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@description</span>: 执行sql语句</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> &#123;<span class="type">String</span>&#125; str : sql语句</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> &#123;<span class="type">Function</span>&#125; callback :（req,results）=&gt;&#123;&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title class_">Model</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sql</span> = <span class="keyword">function</span> (<span class="params">str, callback</span>) &#123;</span><br><span class="line">    connection.<span class="title function_">query</span>(str, <span class="function">(<span class="params">error, results, fields</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">callback</span>(error, results, fields);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@description</span>: 删除model表格 （慎用！）</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> &#123;<span class="type">type</span>&#125; </span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span>: </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title class_">Model</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">drop</span> = <span class="keyword">function</span> (<span class="params">callback</span>) &#123;</span><br><span class="line">    connection.<span class="title function_">query</span>(<span class="string">`DROP TABLE <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>`</span>, <span class="function">(<span class="params">error, results, fields</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">callback</span>(error, results, fields);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//连接检测</span></span><br><span class="line"><span class="title class_">Model</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">connect</span> = <span class="keyword">function</span> (<span class="params">callback</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> p1 = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        connection.<span class="title function_">connect</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                <span class="comment">//console.log(err.stack);</span></span><br><span class="line">                <span class="comment">//console.log(err);//42000 数据库不存在  28000账号错误</span></span><br><span class="line">                <span class="comment">//console.log(err.sqlState);//42000 数据库不存在  28000账号错误</span></span><br><span class="line">                <span class="title function_">reject</span>(err);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="title function_">resolve</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"> </span><br><span class="line">    p1.<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">callback</span>(<span class="literal">null</span>);</span><br><span class="line">    &#125;, <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err.<span class="property">sqlState</span> == <span class="number">42000</span>) &#123;</span><br><span class="line">            <span class="title function_">createDatabase</span>(callback);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (err.<span class="property">sqlState</span> == <span class="number">28000</span>) &#123;</span><br><span class="line">            <span class="title function_">callback</span>(<span class="string">&#x27;数据库账号或密码错误&#x27;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title function_">callback</span>(err);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//创建数据库</span></span><br><span class="line"><span class="keyword">let</span> createDatabase = <span class="keyword">function</span> (<span class="params">callback</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> p2 = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        connection = mysql.<span class="title function_">createConnection</span>(&#123;</span><br><span class="line">            <span class="attr">host</span>: options.<span class="property">host</span>,<span class="comment">//数据库地址</span></span><br><span class="line">            <span class="attr">port</span>: options.<span class="property">port</span>,<span class="comment">//端口号</span></span><br><span class="line">            <span class="attr">user</span>: options.<span class="property">user</span>,<span class="comment">//用户名，没有可不填</span></span><br><span class="line">            <span class="attr">password</span>: options.<span class="property">password</span>,<span class="comment">//密码，没有可不填</span></span><br><span class="line">        &#125;);</span><br><span class="line">        connection.<span class="title function_">connect</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">//if (err) throw error;</span></span><br><span class="line">            <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                <span class="title function_">reject</span>(err);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="title function_">resolve</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">let</span> p3 = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        connection.<span class="title function_">query</span>(<span class="string">`CREATE DATABASE <span class="subst">$&#123;options.database&#125;</span>`</span>, <span class="function">(<span class="params">err, results, fields</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">//if (error) throw error;</span></span><br><span class="line">            <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                <span class="title function_">reject</span>(err);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="title function_">resolve</span>();</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">let</span> p4 = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        connection.<span class="title function_">query</span>(<span class="string">`use <span class="subst">$&#123;options.database&#125;</span>`</span>, <span class="function">(<span class="params">err, results, fields</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                <span class="title function_">reject</span>(err);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="title function_">resolve</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">let</span> pAll = <span class="title class_">Promise</span>.<span class="title function_">all</span>([p2, p3, p4]);</span><br><span class="line"> </span><br><span class="line">    pAll.<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">callback</span>(<span class="literal">null</span>);</span><br><span class="line">    &#125;).<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">callback</span>(err);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">let</span> orm = &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@description</span>:连接数据库</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> &#123;<span class="type">String</span>&#125; host: 主机名 默认localhost</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> &#123;<span class="type">Number</span>&#125; port: 端口号 默认3306</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> &#123;<span class="type">String</span>&#125; user: 用户名 </span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> &#123;<span class="type">String</span>&#125; password: 密码 </span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> &#123;<span class="type">String</span>&#125; database: 数据库名称 默认og</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span>: </span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="attr">connect</span>: <span class="keyword">function</span> (<span class="params">&#123; host = <span class="string">&#x27;localhost&#x27;</span>, port = <span class="number">3306</span>, user = <span class="string">&#x27;&#x27;</span>, password = <span class="string">&#x27;&#x27;</span>, database = <span class="string">&#x27;og&#x27;</span> &#125;</span>) &#123;</span><br><span class="line">        databaseName = database;<span class="comment">//全局存储当前数据库名称</span></span><br><span class="line"> </span><br><span class="line">        options = &#123;</span><br><span class="line">            host,<span class="comment">//数据库地址</span></span><br><span class="line">            port,<span class="comment">//端口号</span></span><br><span class="line">            user,<span class="comment">//用户名，没有可不填</span></span><br><span class="line">            password,<span class="comment">//密码，没有可不填</span></span><br><span class="line">            database<span class="comment">//数据库名称</span></span><br><span class="line">        &#125;;</span><br><span class="line">        connection = mysql.<span class="title function_">createConnection</span>(options);</span><br><span class="line"> </span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@description</span>:创建model (表格模型对象)</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> &#123;<span class="type">String</span>&#125; name:表格名称</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> &#123;<span class="type">Object</span>&#125; options:表格数据结构</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span>: Model对象：负责数据库增删改查</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="attr">model</span>: <span class="keyword">function</span> (<span class="params">name, options</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> str = <span class="string">&#x27;id int primary key auto_increment, &#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> options) &#123;</span><br><span class="line">            <span class="keyword">if</span> (options[key] == <span class="title class_">Number</span>) &#123;</span><br><span class="line">                str += <span class="string">`<span class="subst">$&#123;key&#125;</span> numeric,`</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (options[key] == <span class="title class_">Date</span>) &#123;</span><br><span class="line">                str += <span class="string">`<span class="subst">$&#123;key&#125;</span> timestamp,`</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                str += <span class="string">`<span class="subst">$&#123;key&#125;</span> varchar(255),`</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        str = str.<span class="title function_">replace</span>(<span class="regexp">/,$/</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="comment">//console.log(`CREATE TABLE $&#123;name&#125; ($&#123;str&#125;)`);</span></span><br><span class="line">        <span class="comment">//console.log(str);</span></span><br><span class="line">        tableSQL = <span class="string">`CREATE TABLE <span class="subst">$&#123;name&#125;</span> (<span class="subst">$&#123;str&#125;</span>)`</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Model</span>(name, options);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line">orm.<span class="title function_">connect</span>(orm_config);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = orm;</span><br></pre></td></tr></table></figure><p>把这个文件放到db文件夹下就可以正常使用了！！！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;对象关系映射ORM-Object-Relation-Mapping-ORM&quot;&gt;&lt;a href=&quot;#对象关系映射ORM-Object-Relation-Mapping-ORM&quot; class=&quot;headerlink&quot; title=&quot;对象关系映射ORM(Object R</summary>
      
    
    
    
    <category term="后端" scheme="https://unspman.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Node.js" scheme="https://unspman.github.io/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>Node.js(10.服务器连接到数据库)</title>
    <link href="https://unspman.github.io/posts/a2743963.html"/>
    <id>https://unspman.github.io/posts/a2743963.html</id>
    <published>2023-01-10T00:00:00.000Z</published>
    <updated>2023-04-20T13:04:26.763Z</updated>
    
    <content type="html"><![CDATA[<h4 id="服务器连接到数据库"><a href="#服务器连接到数据库" class="headerlink" title="服务器连接到数据库"></a>服务器连接到数据库</h4><p>首先cd到express目录下安装MySQL<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add mysql</span><br></pre></td></tr></table></figure><br>链接数据库db.js<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//首先安装mysql</span></span><br><span class="line"><span class="comment">//引入</span></span><br><span class="line"><span class="keyword">const</span> mysql=<span class="built_in">require</span>(<span class="string">&#x27;mysql&#x27;</span>);</span><br><span class="line"><span class="comment">//数据库链接的基本配置</span></span><br><span class="line"><span class="keyword">var</span> poll=mysql.<span class="title function_">createPool</span>(&#123;</span><br><span class="line">    <span class="attr">host</span>:<span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">    <span class="attr">user</span>:<span class="string">&#x27;unspman&#x27;</span>,</span><br><span class="line">    <span class="attr">password</span>:<span class="string">&#x27;123456&#x27;</span>,</span><br><span class="line">    <span class="attr">database</span>:<span class="string">&#x27;test&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//对数据库进行增删改查</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">query</span>(<span class="params">sql,callback</span>)&#123;</span><br><span class="line">    <span class="comment">//getConnection链接，pool链接池</span></span><br><span class="line">    poll.<span class="title function_">getConnection</span>(<span class="keyword">function</span>(<span class="params">err,connection</span>)&#123;</span><br><span class="line">        connection.<span class="title function_">query</span>(sql,<span class="keyword">function</span> (<span class="params">err,rows</span>)&#123;</span><br><span class="line">            <span class="comment">//错误，还有一个是记录，也就是查询到的记录</span></span><br><span class="line">            <span class="title function_">callback</span>(err,rows)</span><br><span class="line">            connection.<span class="title function_">release</span>()</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">exports</span>.<span class="property">query</span>=query;</span><br></pre></td></tr></table></figure><br>后台链接数据库:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express=<span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> db=<span class="built_in">require</span>(<span class="string">&#x27;./db/db&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app=<span class="title function_">express</span>();</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/get_data&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// console.log(db.query);</span></span><br><span class="line">    db.<span class="title function_">query</span>(<span class="string">&#x27;select * from student;&#x27;</span>,<span class="function">(<span class="params">err,data</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(err)&#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">        res.<span class="title function_">send</span>(data);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3001</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;express启动成功&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">/*[</span></span><br><span class="line"><span class="comment">  RowDataPacket &#123; name: &#x27;李华&#x27;, age: 25 &#125;,</span></span><br><span class="line"><span class="comment">  RowDataPacket &#123; name: &#x27;菜鸡&#x27;, age: 8 &#125;,</span></span><br><span class="line"><span class="comment">  RowDataPacket &#123; name: &#x27;张飞&#x27;, age: 90 &#125;</span></span><br><span class="line"><span class="comment">]*/</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;服务器连接到数据库&quot;&gt;&lt;a href=&quot;#服务器连接到数据库&quot; class=&quot;headerlink&quot; title=&quot;服务器连接到数据库&quot;&gt;&lt;/a&gt;服务器连接到数据库&lt;/h4&gt;&lt;p&gt;首先cd到express目录下安装MySQL&lt;br&gt;&lt;figure class=&quot;h</summary>
      
    
    
    
    <category term="后端" scheme="https://unspman.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Node.js" scheme="https://unspman.github.io/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>Node.js(9.MySQL使用)</title>
    <link href="https://unspman.github.io/posts/7e379131.html"/>
    <id>https://unspman.github.io/posts/7e379131.html</id>
    <published>2023-01-09T00:00:00.000Z</published>
    <updated>2023-04-20T13:04:26.767Z</updated>
    
    <content type="html"><![CDATA[<h3 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h3><p>1、在cmd小黑窗中启动mysql服务：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net start mysql</span><br></pre></td></tr></table></figure><br>登录数据库<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p </span><br></pre></td></tr></table></figure><br>这里直接回车就行<br>登录完了就可以在cmd里面直接使用sql语句操作数据库了。</p><h3 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br></pre></td><td class="code"><pre><span class="line">     链接数据库</span><br><span class="line">    mysql -uroot -p   回车</span><br><span class="line"> </span><br><span class="line">    </span><br><span class="line">    -- 退出数据库</span><br><span class="line">    --quit/exit </span><br><span class="line"></span><br><span class="line">    -- sql语句最后需要有分号;结尾</span><br><span class="line">    -- 显示数据库版本 version</span><br><span class="line">    -- select version();</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    -- 查看当前使用的数据库</span><br><span class="line">    -- select database();</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    -- 查看所有数据库</span><br><span class="line">    show databases;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    -- 创建数据库</span><br><span class="line">    -- create database 数据库名 charset=utf8;</span><br><span class="line">    create database qd22 charset=utf8;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    -- 查看创建数据库的语句</span><br><span class="line">    -- show create database 数据库名</span><br><span class="line">    show create database qd22;</span><br><span class="line">     </span><br><span class="line"></span><br><span class="line">    -- 使用数据库</span><br><span class="line">    -- use 数据库的名字</span><br><span class="line">    use qd22;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    -- 删除数据库</span><br><span class="line">    -- drop database 数据库名;</span><br><span class="line">    drop database test;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--02 数据表的操作</span><br><span class="line"></span><br><span class="line">    -- 查看当前数据库中所有表</span><br><span class="line">    show tables;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    -- 创建表</span><br><span class="line">    -- int unsigned 无符号整形</span><br><span class="line">    -- auto_increment 表示自动增长跟主键在一起</span><br><span class="line">    -- not null 表示不能为空</span><br><span class="line">    -- primary key 表示主键</span><br><span class="line">    -- default 默认值</span><br><span class="line">    -- create table 数据表名字 (字段 类型 约束[, 字段 类型 约束]);     可选</span><br><span class="line">    create table test(name varchar(30) not null, age int unsigned);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    -- 查看表结构(查看表的字段信息)</span><br><span class="line">    -- desc 数据表的名字;</span><br><span class="line">    desc test;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">   </span><br><span class="line">    -- 创建 classes 表(有id、name两个字段)</span><br><span class="line">    create table classes(id int unsigned primary key auto_increment, name varchar(30) not null);</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    -- 创建 students 表(有id、name、age、high (decimal)、gender (enum)、cls_id这些字段)</span><br><span class="line">    create table students(</span><br><span class="line">        id int unsigned primary key auto_increment, </span><br><span class="line">        name varchar(30) not null, </span><br><span class="line">        age int unsigned, </span><br><span class="line">        high decimal(3, 2), </span><br><span class="line">        gender enum(&quot;男&quot;, &quot;女&quot;, &quot;保密&quot;, &quot;中性&quot;) default &quot;保密&quot;, </span><br><span class="line">        cls_id int unsigned</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 查看表的创建语句</span><br><span class="line">    -- show create table 表名字;</span><br><span class="line">    show create table students;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 修改表-添加字段 mascot (吉祥物)</span><br><span class="line">    -- alter table 表名 add 列名 类型;   给classes表添加mascot字段</span><br><span class="line">    alter table classes add mascot varchar(50);</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">    -- 修改表-修改字段：不重命名版</span><br><span class="line">    -- alter table 表名 modify 列名 类型及约束;</span><br><span class="line">    alter table classes modify mascot varchar(100);</span><br><span class="line">   </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 修改表-修改字段：重命名版</span><br><span class="line">    -- alter table 表名 change 原名 新名 类型及约束;</span><br><span class="line">    alter table classes change mascot jxw int unsigned;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 修改表-删除字段</span><br><span class="line">    -- alter table 表名 drop 列名;</span><br><span class="line">    alter table classes drop jxw;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 删除表</span><br><span class="line">    -- drop table 表名;</span><br><span class="line">    -- drop database 数据库;</span><br><span class="line">    drop table test;</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">--03 增删改查(curd)</span><br><span class="line"></span><br><span class="line">    -- 增加</span><br><span class="line">        -- 全列插入</span><br><span class="line">        -- insert into 表名(字段1,字段2) values(值1，值2);</span><br><span class="line">        -- 主键字段 可以用 0  null   default 来占位</span><br><span class="line">        -- 向classes表中插入 一个班级</span><br><span class="line"></span><br><span class="line">        insert into classes(id, name) values(1, &quot;qd22&quot;);</span><br><span class="line">        insert into classes(id, name) values(3, &quot;qd23&quot;);</span><br><span class="line">        insert into classes(id, name) values(0, &quot;qd24&quot;);</span><br><span class="line">        insert into classes(name) values(&quot;qd25&quot;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        -- 向students表插入 一个学生信息</span><br><span class="line">        -- 全部插入</span><br><span class="line">        -- insert into 表名 values(值1,值2,值3...)</span><br><span class="line">        insert into students values(1, &quot;张三&quot;, 18, 1.83, &#x27;男&#x27;, 1);</span><br><span class="line"></span><br><span class="line">        -- 部分插入</span><br><span class="line">        -- insert into 表名(列1,...) values(值1,...)</span><br><span class="line">        insert into students(name) values(&quot;李四&quot;);</span><br><span class="line">        insert into students(name,age) values(&quot;王五&quot;, 20);</span><br><span class="line"></span><br><span class="line">        -- 多行插入</span><br><span class="line">        -- insert into 表名(列1) values(值), (值);</span><br><span class="line">        insert into students(name) values(&quot;赵六&quot;),(&quot;李七&quot;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 修改</span><br><span class="line">    -- update 表名 set 列1=值1,列2=值2... where 条件;</span><br><span class="line">        -- 全部修改</span><br><span class="line">        update students set age = 16;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        -- 按条件修改</span><br><span class="line">        update students set age = 20 where id=3;</span><br><span class="line">        update students set age = 18 where name=&quot;赵六&quot;;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        -- 按条件修改多个值</span><br><span class="line">        -- update students set gender =&quot;&quot;,age = &quot;&quot; where name=&quot;xxx&quot;;</span><br><span class="line">        update students set age = 15, high=1.80 where id=2;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    -- 查询基本使用</span><br><span class="line">        -- 查询所有列</span><br><span class="line">        -- select * from 表名;</span><br><span class="line">        -- 查询students表中的所有数据信息</span><br><span class="line">        select * from students;</span><br><span class="line"></span><br><span class="line">        ---定条件查询  </span><br><span class="line">        --查询id为1的学生所有信息  </span><br><span class="line">        select * from students where id = 1;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        -- 查询指定列</span><br><span class="line">        -- select 列1,列2,... from 表名;</span><br><span class="line">        select name, age from students;</span><br><span class="line">        select name, age from students where id = 1;</span><br><span class="line">        </span><br><span class="line">    </span><br><span class="line">        -- 可以使用as为列或表指定别名</span><br><span class="line">        -- select 字段[as 别名] , 字段[as 别名] from 数据表;</span><br><span class="line">        select name as &quot;姓名&quot;, age as &quot;年龄&quot; from students;</span><br><span class="line">        select name as n, age as a from students;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        -- 字段的顺序</span><br><span class="line">        -- select age, name from students;</span><br><span class="line">        select age, name from students;</span><br><span class="line"></span><br><span class="line">    -- 删除</span><br><span class="line">        -- 物理删除</span><br><span class="line">        -- delete from 表名 where 条件</span><br><span class="line">        delete from students where id = 4;</span><br><span class="line">        </span><br><span class="line">      </span><br><span class="line"></span><br><span class="line">        -- 逻辑删除</span><br><span class="line">        -- 用一个字段来表示 这条信息是否已经不能再使用了</span><br><span class="line">        -- 给students表添加一个 is_delete 字段 bit 类型</span><br><span class="line">        --alter table 表名 add 字段 类型 default 默认值;</span><br><span class="line">        alter table students add is_delete bit default 0;</span><br><span class="line">        --update 表名 set is_delete=1 where id=;</span><br><span class="line">        update students set is_delete=1 where id=1;</span><br></pre></td></tr></table></figure><h3 id="数据库基础"><a href="#数据库基础" class="headerlink" title="数据库基础"></a>数据库基础</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br></pre></td><td class="code"><pre><span class="line">--数据库操作前的准备</span><br><span class="line"></span><br><span class="line">-- 查询练习</span><br><span class="line">    -- 查询所有字段</span><br><span class="line">    -- select * from 表名;</span><br><span class="line">     select * from students;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 查询指定字段</span><br><span class="line">    -- select 列1,列2,... from 表名;</span><br><span class="line">    select name, age from students;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    -- 使用 as 给字段起别名</span><br><span class="line">    -- select 字段 as 名字.... from 表名;</span><br><span class="line">    select name as n, age as a from students;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- select 表名.字段 .... from 表名;</span><br><span class="line">    select students.name,students.age from students;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    -- 可以通过 as 给表起别名</span><br><span class="line">    -- select 别名.字段 .... from 表名 as 别名;</span><br><span class="line">    select s.name, s.age from students as s;</span><br><span class="line"></span><br><span class="line">    -- 消除重复行(查性别)</span><br><span class="line">    -- distinct 字段 </span><br><span class="line">    select gender from students;</span><br><span class="line">    select distinct gender from students;   --  使用distinct关键字的做法清除重复的记录</span><br><span class="line">    select gender from students group by gender;   --  使用分组的做法清除重复的记录</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">-- 条件查询</span><br><span class="line">    -- 比较运算符</span><br><span class="line">        -- select .... from 表名 where .....</span><br><span class="line">        -- &gt;</span><br><span class="line">        -- 查询年纪大于18岁的学生信息</span><br><span class="line">        select * from students where age &gt; 18;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        -- &lt;</span><br><span class="line">        -- 查询年纪小于18岁的学生信息</span><br><span class="line">        select * from students where age &lt; 18;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        -- &gt;=</span><br><span class="line">        -- &lt;=</span><br><span class="line">        -- 查询小于或者等于18岁的学生信息</span><br><span class="line">        select * from students where age &lt;= 18;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        -- =</span><br><span class="line">        -- 查询年龄为18岁的所有学生信息</span><br><span class="line">        select * from students where age = 18;</span><br><span class="line"></span><br><span class="line">        -- != 或者 &lt;&gt;</span><br><span class="line">        -- 查询年龄不为18岁的所有学生信息</span><br><span class="line">        select * from students where age != 18;</span><br><span class="line">        select * from students where age &lt;&gt; 18;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    -- 逻辑运算符</span><br><span class="line">        -- and  /  between .. and ..</span><br><span class="line">        -- 18和28之间的所有学生信息</span><br><span class="line">        select * from students where age &gt; 18 and age &lt; 28;  --不包含18 和28</span><br><span class="line">        select * from students where age &gt;= 18 and age &lt;= 28;  --包含18 和28</span><br><span class="line"></span><br><span class="line">        select * from students where age between 18 and 28;  --包含18 和28</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        -- 18岁以上的女性的学生信息</span><br><span class="line">        select * from students where age &gt; 18 and gender=&quot;女&quot;;</span><br><span class="line">        select * from students where age &gt; 18 and gender=2;   --枚举的数据类型可以用数字来表示，数字从1开始</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        -- or</span><br><span class="line">        -- 18以上或者身高高过180(包含)以上的学生信息</span><br><span class="line">        select * from students where age &gt; 18 or height &gt;= 180.00;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        -- not</span><br><span class="line">        -- 不在 18岁以上的女性 这个范围内的信息</span><br><span class="line">        -- select * from students where not (age&gt;18 and gender=2);</span><br><span class="line">        select * from students where not (age &gt; 18 and gender=2); </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 模糊查询(where name like 要查询的数据)</span><br><span class="line">        -- like </span><br><span class="line">        -- % 替换任意个</span><br><span class="line">        -- _ 替换1个</span><br><span class="line">        -- 查询姓名中 以 &quot;小&quot; 开始的名字的学生信息</span><br><span class="line">        select * from students where name like &quot;小%&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        -- 查询姓名中 有 &quot;小&quot; 所有的名字的学生信息</span><br><span class="line">        select * from students where name like &quot;%小%&quot;;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        -- 查询有2个字的名字的学生信息</span><br><span class="line">        select * from students where name like &quot;__&quot;;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        -- 查询有3个字的名字的学生信息</span><br><span class="line">        select * from students where name like &quot;___&quot;;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        -- 查询至少有2个字的名字的学生信息</span><br><span class="line">        select * from students where name like &quot;__%&quot;;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 范围查询</span><br><span class="line">        -- in (1, 3, 8)表示在一个非连续的范围内</span><br><span class="line">        -- 查询 年龄为18或34的姓名的学生信息</span><br><span class="line">        -- select * from students where age = 18 or age = 34;</span><br><span class="line">        select * from students where age in (18, 34);  -- (18, 34)不是区间，是确切的值</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        -- not in 不非连续的范围之内</span><br><span class="line">        -- 年龄不是 18或34岁的学生信息</span><br><span class="line">        select * from students where age not in (18, 34);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        -- between ... and ...表示在一个连续的范围内</span><br><span class="line">        -- 查询 年龄在18到34之间的学生信息</span><br><span class="line">    </span><br><span class="line">        select * from students where age between 18 and 34; </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        -- not between ... and ...表示不在一个连续的范围内</span><br><span class="line">        -- 查询 年龄不在18到34之间的学生信息</span><br><span class="line">        select * from students where age not between 18 and 34;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    -- 空判断</span><br><span class="line">        -- 判空is null</span><br><span class="line">        -- 查询身高为空的学生信息</span><br><span class="line">        select * from students where height is null;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        -- 判非空is not null</span><br><span class="line">        </span><br><span class="line">        select * from students where height is not null;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 排序</span><br><span class="line">    -- order by 字段</span><br><span class="line">    -- asc</span><br><span class="line">    -- asc从小到大排列，即升序</span><br><span class="line">    -- desc</span><br><span class="line">    -- desc从大到小排序，即降序</span><br><span class="line">    -- 查询年龄在18到34岁之间的男性，按照年龄从小到大到排序</span><br><span class="line"></span><br><span class="line">    select * from students where gender=1 and age between 18 and 34 order by age asc;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    -- 查询年龄在18到34岁之间的女性，身高从高到矮排序</span><br><span class="line">    </span><br><span class="line">    select * from students where gender=2 and age between 18 and 34 order by height desc;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    -- order by 多个字段</span><br><span class="line">    -- 查询年龄在18到34岁之间的女性，身高从高到矮排序, 如果身高相同的情况下按照年龄从小到大排序</span><br><span class="line">    </span><br><span class="line">    select * from students where gender=2 and age between 18 and 34 order by height desc, age asc;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    -- 如果年龄也相同那么按照id从大到小排序</span><br><span class="line">    select * from students where gender=2 and age between 18 and 34 order by height desc, age asc, id desc;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 聚合函数</span><br><span class="line">    -- 总数</span><br><span class="line">    -- count</span><br><span class="line">    -- 查询男性有多少人</span><br><span class="line"></span><br><span class="line">    select count(*) from students where gender = 1;</span><br><span class="line">    </span><br><span class="line">    -- 最大值</span><br><span class="line">    -- max</span><br><span class="line">    -- 查询最大的年龄</span><br><span class="line">    select max(age) from students;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    -- 查询女性的最高 身高</span><br><span class="line">    select max(height) from students where gender = 2; </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 最小值</span><br><span class="line">    -- min</span><br><span class="line">    select min(height) from students where gender = 2; </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    -- 求和</span><br><span class="line">    -- sum</span><br><span class="line">    -- 计算所有人的年龄总和</span><br><span class="line">    select sum(age) from students;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    -- 平均值</span><br><span class="line">    -- avg</span><br><span class="line">    -- 计算平均年龄</span><br><span class="line">    select avg(age) from students;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 计算平均年龄 sum(age)/count(*)</span><br><span class="line">    select sum(age)/count(*) from students;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 四舍五入 round(123.23 , 1) 保留1位小数</span><br><span class="line">    -- 计算所有人的平均年龄，保留2位小数</span><br><span class="line">    select round(avg(age), 2) from students;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 计算男性的平均身高 保留2位小数</span><br><span class="line">    select round(avg(height), 2) from students where gender = 1;   -- 没有算null这种情况  /4</span><br><span class="line">    select round(sum(height)/count(*), 2) from students where gender = 1;   -- 把null算进去了    /5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # 聚合函数计算的时候不会把null计算进去</span><br><span class="line">    </span><br><span class="line">-- 分组</span><br><span class="line"></span><br><span class="line">    -- 分组的口诀</span><br><span class="line">    -- select 分组的字段  from 表名 group by 分组字段;</span><br><span class="line"></span><br><span class="line">    -- group by</span><br><span class="line">    -- 按照性别分组,查询所有的性别</span><br><span class="line">    select gender from students group by gender;</span><br><span class="line"></span><br><span class="line">    --# 每种、每类是分组的关键字眼， 以什么为分组，最好在展示的时候，把这个字段放在第一列</span><br><span class="line">    -- 计算每种性别中的人数</span><br><span class="line">    select gender, count(*) from students group by gender;</span><br><span class="line"></span><br><span class="line">    -- group_concat(...)</span><br><span class="line">    -- 查询同种性别中的姓名group_concat(name)</span><br><span class="line">    select gender, group_concat(name) from students group by gender;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    -- 查询每组性别的平均年龄</span><br><span class="line">    select gender, avg(age) from students group by gender;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- having(注意having和group by 连用 having后通常也要跟 聚合函数)</span><br><span class="line">    -- 注意： 聚合函数如果做为条件出现，只能和having配合。不能和where配合使用。</span><br><span class="line">    -- 查询平均年龄超过30岁的性别，以及姓名</span><br><span class="line">    select gender, avg(age), group_concat(name) from students group by gender having avg(age) &gt; 30;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    -- 查询每种性别中的人数多于2个的信息</span><br><span class="line">    -- select gender, count(*) from students group by gender having count(*) &gt; 2;</span><br><span class="line">    select gender, count(*) from students group by gender having count(*) &gt; 2;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 分页</span><br><span class="line">    -- limit start, count</span><br><span class="line">    -- limit 放在最后面(注意)</span><br><span class="line">    -- 公式：limit (要显示第几页-1) * 每页分多少个, 每页分多少个;</span><br><span class="line">    -- 限制查询出来的数据个数</span><br><span class="line">    -- 查询前5个数据</span><br><span class="line">    select * from students limit 5;</span><br><span class="line"></span><br><span class="line">    -- 每页分2个，要显示第1页  (查询前2个数据) </span><br><span class="line">    select * from students limit 2;</span><br><span class="line"></span><br><span class="line">    --通用写法：</span><br><span class="line">    select * from students limit 0, 2;</span><br><span class="line"></span><br><span class="line">    -- 每页分2个，要显示第2页</span><br><span class="line">    select * from students limit 2, 2;</span><br><span class="line">    </span><br><span class="line">    -- 每页分2个，要显示第3页</span><br><span class="line">    select * from students limit 4, 2;</span><br><span class="line"></span><br><span class="line">    -- 每页分2个，要显示第4页</span><br><span class="line">    select * from students limit 6, 2;</span><br><span class="line"></span><br><span class="line">    -- 每页分2个，显示第6页的信息, 按照年龄从小到大排序</span><br><span class="line">    -- 先整体排序，再进行分页！</span><br><span class="line">    select * from students order by age asc limit 10, 2;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">     </span><br><span class="line">-- select * from students where </span><br><span class="line">-- select 分组 from students group by 分组字段 having 条件查询</span><br><span class="line">-- select * from 表a inner join 表b on 连接的条件</span><br><span class="line"></span><br><span class="line">-- 连接查询   (表与表之间的链接， 为了更好的查出有效数据)</span><br><span class="line">    -- inner join ... on</span><br><span class="line">    -- select ... from 表A inner join 表B;</span><br><span class="line">    -- 查询 有能够对应班级的学生以及班级信息</span><br><span class="line">    select * from studetns inner join classes on students.cls_id=classes.id;</span><br><span class="line">    </span><br><span class="line">    -- 按照要求显示姓名、班级</span><br><span class="line">    select students.name, classes.name from students inner join classes on students.cls_id=classes.id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 给数据表起名字</span><br><span class="line">    select s.name, c.name from students as s inner join classes as c on s.cls_id=c.id;</span><br><span class="line">    select s.name as &quot;姓名&quot;, c.name as &quot;所在班级&quot; from students as s inner join classes as c on s.cls_id=c.id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 查询 有能够对应班级的学生以及班级信息，显示学生的所有信息 students.*，只显示班级名称 classes.name.</span><br><span class="line"></span><br><span class="line">    select s.*, c.name from students as s inner join classes as c on s.cls_id = c.id;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    -- 在以上的查询中，将班级名显示在第1列</span><br><span class="line">    select c.name,s.* from students as s inner join classes as c on s.cls_id = c.id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -- 查询 有能够对应班级的学生以及班级信息, 按照班级名进行排序</span><br><span class="line">    select c.name,s.* from students as s inner join classes as c on s.cls_id = c.id order by c.name;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    -- 当时同一个班级的时候，按照学生的id进行从小到大排序</span><br><span class="line">    select c.name,s.* from students as s inner join classes as c on s.cls_id = c.id order by c.name, s.id asc;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">-- 子查询  (一个查询的结果作为另一个查询的一部分， 会把前者的查询称为子查询)</span><br><span class="line">    -- 标量子查询: 子查询返回的结果是一个数据(一行一列)</span><br><span class="line">    -- 列子查询: 返回的结果是一列(一列多行)</span><br><span class="line">    -- 行子查询: 返回的结果是一行(一行多列)</span><br><span class="line">    </span><br><span class="line">    -- 查询出高于平均身高的信息(height)</span><br><span class="line"></span><br><span class="line">    select avg(height) from students;</span><br><span class="line">    </span><br><span class="line">    select * from students where height &gt; (select avg(height) from students);</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    -- 查询学生的班级号能够对应的 学生名字</span><br><span class="line">    -- select * from students where cls_id in(1,2);</span><br><span class="line">    -- select id from classes;</span><br><span class="line"></span><br><span class="line">    select students.name from students where cls_id = 1 or cls_id = 2;</span><br><span class="line">    select students.name from students where cls_id in (1, 2);</span><br><span class="line">    select students.name from students where cls_id in (select id from classes);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;连接数据库&quot;&gt;&lt;a href=&quot;#连接数据库&quot; class=&quot;headerlink&quot; title=&quot;连接数据库&quot;&gt;&lt;/a&gt;连接数据库&lt;/h3&gt;&lt;p&gt;1、在cmd小黑窗中启动mysql服务：&lt;br&gt;&lt;figure class=&quot;highlight plaintext</summary>
      
    
    
    
    <category term="后端" scheme="https://unspman.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Node.js" scheme="https://unspman.github.io/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>Node.js(8.使用express搭建服务器程序(2))</title>
    <link href="https://unspman.github.io/posts/6e700f68.html"/>
    <id>https://unspman.github.io/posts/6e700f68.html</id>
    <published>2023-01-08T00:00:00.000Z</published>
    <updated>2023-04-20T13:04:26.767Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用express搭建服务器程序-2"><a href="#使用express搭建服务器程序-2" class="headerlink" title="使用express搭建服务器程序(2)"></a>使用express搭建服务器程序(2)</h3><h4 id="使用路由"><a href="#使用路由" class="headerlink" title="使用路由"></a>使用路由</h4><p>路由模块：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//抽取路由</span></span><br><span class="line"><span class="comment">//第一步还是引入express</span></span><br><span class="line"><span class="keyword">const</span> express=<span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="comment">//创建路由对象</span></span><br><span class="line"><span class="keyword">const</span> routerport=express.<span class="title class_">Router</span>();</span><br><span class="line"><span class="keyword">const</span> path=<span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs=<span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> bodyParser=<span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>)</span><br><span class="line"></span><br><span class="line">routerport.<span class="title function_">use</span>(bodyParser.<span class="title function_">urlencoded</span>(&#123;<span class="attr">extended</span>:<span class="literal">false</span>&#125;));</span><br><span class="line">routerport.<span class="title function_">use</span>(bodyParser.<span class="title function_">json</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">//register接口get请求</span></span><br><span class="line">routerport.<span class="title function_">get</span>(<span class="string">&#x27;/register.html&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> filePath=path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;../views&#x27;</span>,<span class="string">&#x27;register.html&#x27;</span>);</span><br><span class="line">    <span class="keyword">let</span> content=fs.<span class="title function_">readFileSync</span>(filePath,<span class="string">&#x27;utf-8&#x27;</span>);</span><br><span class="line">    res.<span class="title function_">send</span>(content);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//register接口post请求</span></span><br><span class="line">routerport.<span class="title function_">post</span>(<span class="string">&#x27;/register.html&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> body=req.<span class="property">body</span>;</span><br><span class="line">    <span class="keyword">let</span> &#123;username,email,password&#125;=body;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(body);</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;pos提交成功&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//index接口get请求</span></span><br><span class="line">routerport.<span class="title function_">get</span>(<span class="string">&#x27;/index.html&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> filePath=path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;../views&#x27;</span>,<span class="string">&#x27;index.html&#x27;</span>);</span><br><span class="line">    <span class="keyword">let</span> content=fs.<span class="title function_">readFileSync</span>(filePath,<span class="string">&#x27;utf-8&#x27;</span>);</span><br><span class="line">    res.<span class="title function_">send</span>(content);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//导出路由模块</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>=routerport</span><br></pre></td></tr></table></figure><br>app.js:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express=<span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app=<span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">const</span> fs=<span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path=<span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="comment">//导入自己写的模块</span></span><br><span class="line"><span class="keyword">const</span> routerport = <span class="built_in">require</span>(<span class="string">&#x27;./routes/passport&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//将路由对象注册到app对象上</span></span><br><span class="line">app.<span class="title function_">use</span>(routerport);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;hello express框架&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3001</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;express启动成功&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><h4 id="pathinfo风格的参数获取"><a href="#pathinfo风格的参数获取" class="headerlink" title="pathinfo风格的参数获取"></a>pathinfo风格的参数获取</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//lis接口</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/list.html&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    res.<span class="title function_">render</span>(<span class="string">&#x27;list.html&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//detail接口，以及接收html页面发送数据</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/detail/:id/:type&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//使用params对象来接收参数</span></span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;detail1详情页&#x27;</span>+req.<span class="property">params</span>.<span class="property">id</span>+req.<span class="property">params</span>.<span class="property">type</span>);</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    detail1详情页01music</span></span><br><span class="line"><span class="comment">    detail1详情页02sport</span></span><br><span class="line"><span class="comment">    detail1详情页03happy</span></span><br><span class="line"><span class="comment">    detail1详情页04military</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>list.html<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span>,<span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>新闻<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/detail/01/music&quot;</span>&gt;</span>新闻信息01<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/detail/02/sport&quot;</span>&gt;</span>新闻信息02<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/detail/03/happy&quot;</span>&gt;</span>新闻信息03<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/detail/04/military&quot;</span>&gt;</span>新闻信息04<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="模板过滤器使用"><a href="#模板过滤器使用" class="headerlink" title="模板过滤器使用"></a>模板过滤器使用</h4><p><a href="http://aui.github.io/art-template/zh-cn/docs/syntax.html#%E8%BF%87%E6%BB%A4%E5%99%A8">模板过滤器</a><br>模板过滤器使用<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//模板过滤器</span></span><br><span class="line">template.<span class="property">defaults</span>.<span class="property">imports</span>.<span class="property">ageFilter</span>=<span class="keyword">function</span>(<span class="params">value</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(value &gt;= <span class="number">18</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> datalist=&#123;</span><br><span class="line">        <span class="attr">ages</span>: [<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="number">22</span>]</span><br><span class="line">    &#125;;</span><br><span class="line">    res.<span class="title function_">render</span>(<span class="string">&#x27;index.html&#x27;</span>,datalist);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><br>html中代码：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span>,<span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>欢迎来到我的世界！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>个人信息<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        &#123;&#123;each ages&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;$value | ageFilter&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        &#123;&#123;/each&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="模板继承"><a href="#模板继承" class="headerlink" title="模板继承"></a>模板继承</h4><p><a href="http://aui.github.io/art-template/zh-cn/docs/syntax.html#%E6%A8%A1%E6%9D%BF%E7%BB%A7%E6%89%BF">模板继承</a><br>接口：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/child.html&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    res.<span class="title function_">render</span>(<span class="string">&#x27;child.html&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><br>parents.html:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span>,<span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>头部<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    &#123;&#123;block &#x27;content&#x27;&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>父模板的内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    &#123;&#123;/block&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>底部<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br>child.html:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;extend &#x27;./parents.html&#x27;&#125;&#125;</span><br><span class="line">&#123;&#123;block &#x27;content&#x27;&#125;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>子模板的内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;&#123;/block&#125;&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;使用express搭建服务器程序-2&quot;&gt;&lt;a href=&quot;#使用express搭建服务器程序-2&quot; class=&quot;headerlink&quot; title=&quot;使用express搭建服务器程序(2)&quot;&gt;&lt;/a&gt;使用express搭建服务器程序(2)&lt;/h3&gt;&lt;h4 id=</summary>
      
    
    
    
    <category term="后端" scheme="https://unspman.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Node.js" scheme="https://unspman.github.io/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>Node.js(7.使用express搭建服务器程序(1))</title>
    <link href="https://unspman.github.io/posts/ec78c399.html"/>
    <id>https://unspman.github.io/posts/ec78c399.html</id>
    <published>2023-01-07T00:00:00.000Z</published>
    <updated>2023-04-20T13:04:26.767Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用express搭建服务器程序-1"><a href="#使用express搭建服务器程序-1" class="headerlink" title="使用express搭建服务器程序(1)"></a>使用express搭建服务器程序(1)</h3><p><a href="https://expressjs.com/zh-cn/starter/hello-world.html">快速入门</a></p><h4 id="cd到express下安装express"><a href="#cd到express下安装express" class="headerlink" title="cd到express下安装express"></a>cd到express下安装express</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install express --save</span><br><span class="line">也可以使用yarn安装</span><br><span class="line">yarn add express</span><br></pre></td></tr></table></figure><h4 id="简单搭建一个express服务器"><a href="#简单搭建一个express服务器" class="headerlink" title="简单搭建一个express服务器"></a>简单搭建一个express服务器</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//安装express</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//1.引入express</span></span><br><span class="line"><span class="keyword">const</span> express=<span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="comment">//2.创建app对象(app项目对象)</span></span><br><span class="line"><span class="keyword">const</span> app=<span class="title function_">express</span>();</span><br><span class="line"><span class="comment">//4.处理请求</span></span><br><span class="line"><span class="comment">//第一个参数是请求路径，第二个参数是针对于这个路径的处理函数</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//函数有两个形参</span></span><br><span class="line">    <span class="comment">//第一个形参req是请求对象，第二个参数res是响应对象</span></span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;hello express框架&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//3.监听是否有请求</span></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3001</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;express启动成功&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="get请求"><a href="#get请求" class="headerlink" title="get请求"></a>get请求</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/index.html&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//获取文件路径</span></span><br><span class="line">    <span class="keyword">let</span> filePath=path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;views&#x27;</span>,<span class="string">&#x27;index.html&#x27;</span>);</span><br><span class="line">    <span class="comment">//获取文件信息</span></span><br><span class="line">    <span class="keyword">let</span> content=fs.<span class="title function_">readFileSync</span>(filePath,<span class="string">&#x27;utf-8&#x27;</span>);</span><br><span class="line">    res.<span class="title function_">send</span>(content);</span><br><span class="line">    <span class="comment">//获取请求参数 http://localhost:3001/index.html?name=nodejs&amp;age=18</span></span><br><span class="line">    <span class="keyword">let</span> query=req.<span class="property">query</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(query); <span class="comment">// &#123; name: &#x27;nodejs&#x27;, age: &#x27;18&#x27; &#125;</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(query.<span class="property">name</span>,query.<span class="property">age</span>);  <span class="comment">// nodejs 18</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="post请求"><a href="#post请求" class="headerlink" title="post请求"></a>post请求</h4><p>先安装body-parser<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add body-parser</span><br></pre></td></tr></table></figure><br>处理post请求方式<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入body-parser模块</span></span><br><span class="line"><span class="keyword">const</span> bodyParser=<span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>)</span><br><span class="line"><span class="comment">//将body-parser功能添加到项目app中</span></span><br><span class="line">app.<span class="title function_">use</span>(bodyParser.<span class="title function_">urlencoded</span>(&#123;<span class="attr">extended</span>:<span class="literal">false</span>&#125;));<span class="comment">//false:接收的值为字符串或者数组，true为任意类型</span></span><br><span class="line">app.<span class="title function_">use</span>(bodyParser.<span class="title function_">json</span>());<span class="comment">//解析json格式</span></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/register.html&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> filePath=path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;views&#x27;</span>,<span class="string">&#x27;register.html&#x27;</span>);</span><br><span class="line">    <span class="keyword">let</span> content=fs.<span class="title function_">readFileSync</span>(filePath,<span class="string">&#x27;utf-8&#x27;</span>);</span><br><span class="line">    res.<span class="title function_">send</span>(content);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/register.html&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> body=req.<span class="property">body</span>;</span><br><span class="line">    <span class="comment">//结构赋值 获取数据</span></span><br><span class="line">    <span class="keyword">let</span> &#123;username,email,password&#125;=body;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(body);</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    [Object: null prototype] &#123;</span></span><br><span class="line"><span class="comment">    username: &#x27;lihua&#x27;,</span></span><br><span class="line"><span class="comment">    email: &#x27;3064459131@qq.com&#x27;,</span></span><br><span class="line"><span class="comment">    password: &#x27;123456&#x27;</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(username,email,password); <span class="comment">//lihua 3064459131@qq.com 123456</span></span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;pos提交成功&#x27;</span>);</span><br><span class="line">    <span class="comment">//后端业务逻辑</span></span><br><span class="line">    <span class="comment">//获取请求参数</span></span><br><span class="line">    <span class="comment">//对参数进行处理</span></span><br><span class="line">    <span class="comment">//查询数据库，判断用户名是否注册，密码等</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><br>register.html<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span>,<span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>注册页面<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/register.html&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        邮箱：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入邮箱&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//接口</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/login.html&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> filePath=path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;views&#x27;</span>,<span class="string">&#x27;login.html&#x27;</span>);</span><br><span class="line">    <span class="keyword">let</span> content=fs.<span class="title function_">readFileSync</span>(filePath,<span class="string">&#x27;utf-8&#x27;</span>);</span><br><span class="line">    res.<span class="title function_">send</span>(content);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//重定向</span></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/register.html&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//使用重定向</span></span><br><span class="line">    res.<span class="title function_">redirect</span>(<span class="string">&#x27;/login.html&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="all方法"><a href="#all方法" class="headerlink" title="all方法"></a>all方法</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用all()进行合并</span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&#x27;/register.html&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//获取请求方法</span></span><br><span class="line">    <span class="keyword">let</span> method=req.<span class="property">method</span></span><br><span class="line">    <span class="comment">//判断请求方式</span></span><br><span class="line">    <span class="keyword">if</span>(method == <span class="string">&#x27;GET&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> filePath=path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;views&#x27;</span>,<span class="string">&#x27;register.html&#x27;</span>);</span><br><span class="line">        <span class="keyword">let</span> content=fs.<span class="title function_">readFileSync</span>(filePath,<span class="string">&#x27;utf-8&#x27;</span>);</span><br><span class="line">        res.<span class="title function_">send</span>(content);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(method == <span class="string">&#x27;POST&#x27;</span>)&#123;</span><br><span class="line">        res.<span class="title function_">redirect</span>(<span class="string">&#x27;/login.html&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="使用express获取静态资源"><a href="#使用express获取静态资源" class="headerlink" title="使用express获取静态资源"></a>使用express获取静态资源</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取静态资源</span></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">static</span>(path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;public&#x27;</span>)));<span class="comment">//指定再本地public下寻找静态资源</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>欢迎来到我的世界！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/img/1.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="使用express渲染模板页面"><a href="#使用express渲染模板页面" class="headerlink" title="使用express渲染模板页面"></a>使用express渲染模板页面</h4><p><a href="http://aui.github.io/art-template/express/">安装模板:</a><br>先cd到express目录<br>再执行以下命令<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install --save art-template</span><br><span class="line">npm install --save express-art-template</span><br></pre></td></tr></table></figure><br>代码展示<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express=<span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path=<span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> app=<span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// view engine setup</span></span><br><span class="line"><span class="comment">//模板引擎初始化工作</span></span><br><span class="line">app.<span class="title function_">engine</span>(<span class="string">&#x27;html&#x27;</span>, <span class="built_in">require</span>(<span class="string">&#x27;express-art-template&#x27;</span>));</span><br><span class="line"><span class="comment">//项目环境的设置</span></span><br><span class="line"><span class="comment">//production生产模式，线上模式</span></span><br><span class="line"><span class="comment">//development开发模式</span></span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">&#x27;view options&#x27;</span>, &#123;   </span><br><span class="line">    <span class="attr">debug</span>: process.<span class="property">env</span>.<span class="property">NODE_ENV</span> !== <span class="string">&#x27;production&#x27;</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//设置在哪一个目录下查找html文件</span></span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">&#x27;views&#x27;</span>, path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;views&#x27;</span>));</span><br><span class="line"><span class="comment">//设置模板的后缀名</span></span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">&#x27;view engine&#x27;</span>, <span class="string">&#x27;html&#x27;</span>);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> datalist=&#123;</span><br><span class="line">        <span class="attr">name</span>:<span class="string">&#x27;张三&#x27;</span>,</span><br><span class="line">        <span class="attr">age</span>:<span class="number">20</span>,</span><br><span class="line">        <span class="attr">job</span>:<span class="string">&#x27;前端工程师&#x27;</span>,</span><br><span class="line">        <span class="attr">childrens</span>:[<span class="string">&#x27;大毛&#x27;</span>,<span class="string">&#x27;二毛&#x27;</span>,<span class="string">&#x27;三毛&#x27;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">render</span>(<span class="string">&#x27;index.html&#x27;</span>,datalist);</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3001</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;express启动成功&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><br>html:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span>,<span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>欢迎来到我的世界！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;img src=&quot;/img/1.jpg&quot; alt=&quot;&quot;&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>个人信息<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>姓名：&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>年龄：&#123;&#123;age&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;&#123;if age &gt; 18&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>成年人<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;&#123;/if&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>家庭情况<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;&#123;each childrens&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>第&#123;&#123;$index+1&#125;&#125;个孩子是&#123;&#123;$value&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;&#123;/each&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;使用express搭建服务器程序-1&quot;&gt;&lt;a href=&quot;#使用express搭建服务器程序-1&quot; class=&quot;headerlink&quot; title=&quot;使用express搭建服务器程序(1)&quot;&gt;&lt;/a&gt;使用express搭建服务器程序(1)&lt;/h3&gt;&lt;p&gt;&lt;a h</summary>
      
    
    
    
    <category term="后端" scheme="https://unspman.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Node.js" scheme="https://unspman.github.io/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>Node.js(6.书写一个web服务器)</title>
    <link href="https://unspman.github.io/posts/9da3dae3.html"/>
    <id>https://unspman.github.io/posts/9da3dae3.html</id>
    <published>2023-01-06T00:00:00.000Z</published>
    <updated>2023-04-20T13:04:26.763Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303142200924.jpg" alt=""></p><h3 id="书写一个web服务器"><a href="#书写一个web服务器" class="headerlink" title="书写一个web服务器"></a>书写一个web服务器</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入模块</span></span><br><span class="line"><span class="keyword">const</span> http=<span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs=<span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path=<span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="comment">//端口号</span></span><br><span class="line"><span class="keyword">const</span> port=<span class="number">8080</span>;</span><br><span class="line"><span class="comment">//创建服务器对象</span></span><br><span class="line"><span class="keyword">const</span> server=http.<span class="title function_">createServer</span>(<span class="function">(<span class="params">request,response</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//每收到一次请求就会执行一次</span></span><br><span class="line">    <span class="comment">//判断浏览器的请求</span></span><br><span class="line">    <span class="keyword">let</span> reqUrl=request.<span class="property">url</span>;</span><br><span class="line">    <span class="keyword">if</span>(reqUrl==<span class="string">&#x27;/&#x27;</span> || reqUrl==<span class="string">&#x27;/index.html&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> filePath=path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;assets&#x27;</span>,<span class="string">&#x27;html&#x27;</span>,<span class="string">&#x27;index.html&#x27;</span>);</span><br><span class="line">        <span class="keyword">let</span> content=fs.<span class="title function_">readFileSync</span>(filePath);</span><br><span class="line">        response.<span class="title function_">end</span>(content);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(reqUrl==<span class="string">&#x27;/cate.html&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> filePath=path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;assets&#x27;</span>,<span class="string">&#x27;html&#x27;</span>,<span class="string">&#x27;cate.html&#x27;</span>);</span><br><span class="line">        <span class="keyword">let</span> content=fs.<span class="title function_">readFileSync</span>(filePath);</span><br><span class="line">        response.<span class="title function_">end</span>(content);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(reqUrl.<span class="title function_">endsWith</span>(<span class="string">&#x27;.css&#x27;</span>))&#123;</span><br><span class="line">        <span class="keyword">let</span> filePath=path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;assets&#x27;</span>,<span class="string">&#x27;css&#x27;</span>,<span class="string">&#x27;index.css&#x27;</span>);</span><br><span class="line">        <span class="keyword">let</span> content=fs.<span class="title function_">readFileSync</span>(filePath);</span><br><span class="line">        response.<span class="title function_">end</span>(content);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        response.<span class="title function_">end</span>(<span class="string">&#x27;404,报错了&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//服务器监听</span></span><br><span class="line">server.<span class="title function_">listen</span>(port,<span class="function">(<span class="params">error</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;服务器运行成功&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="npm的使用-基于nodejs包管理器"><a href="#npm的使用-基于nodejs包管理器" class="headerlink" title="npm的使用(基于nodejs包管理器)"></a><a href="https://www.npmjs.com/">npm的使用(基于nodejs包管理器)</a></h3><p>第三方模块，别人写好的，需要安装</p><h4 id="npm使用"><a href="#npm使用" class="headerlink" title="npm使用"></a>npm使用</h4><p>项目初始化 package.json记录项目相关信息<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init</span><br></pre></td></tr></table></figure><br>eg:下载md5<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install md5</span><br></pre></td></tr></table></figure><br>使用第三方模块：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> md5=<span class="built_in">require</span>(<span class="string">&#x27;md5&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">md5</span>(<span class="string">&#x27;123456&#x27;</span>));<span class="comment">//e10adc3949ba59abbe56e057f20f883e</span></span><br></pre></td></tr></table></figure></p><h3 id="yarn-基于nodejs的包管理器"><a href="#yarn-基于nodejs的包管理器" class="headerlink" title="yarn(基于nodejs的包管理器)"></a><a href="https://www.yarnpkg.cn/">yarn(基于nodejs的包管理器)</a></h3><p><a href="https://yarn.bootcss.com/">中文版</a><br>安装 -g代表全局安装<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g yarn</span><br></pre></td></tr></table></figure><br>项目初始化<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn init</span><br></pre></td></tr></table></figure><br>eg:下载md5<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm add md5</span><br></pre></td></tr></table></figure><br>使用第三方模块：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> md5=<span class="built_in">require</span>(<span class="string">&#x27;md5&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">md5</span>(<span class="string">&#x27;123456&#x27;</span>));<span class="comment">//e10adc3949ba59abbe56e057f20f883e</span></span><br></pre></td></tr></table></figure></p><h3 id="async和await使用-异步的终极方案"><a href="#async和await使用-异步的终极方案" class="headerlink" title="async和await使用(异步的终极方案)"></a>async和await使用(异步的终极方案)</h3><h4 id="eg"><a href="#eg" class="headerlink" title="eg"></a>eg</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs=<span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> path=<span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line">fileone=path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;1.txt&#x27;</span>);</span><br><span class="line">filetwo=path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;2.txt&#x27;</span>);</span><br><span class="line">filethree=path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;3.txt&#x27;</span>);</span><br><span class="line">filedata=path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;data.txt&#x27;</span>);</span><br><span class="line"><span class="comment">//封装一个函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">readFilePromise</span>(<span class="params">fileName</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="comment">//异步操作</span></span><br><span class="line">        fs.<span class="title function_">readFile</span>(fileName,<span class="string">&#x27;utf-8&#x27;</span>,<span class="function">(<span class="params">error,data</span>)=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(error)&#123;</span><br><span class="line">                <span class="title function_">reject</span>(error);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="title function_">resolve</span>(data); <span class="comment">//data就是读取到的内容</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//await必须要放在async function函数内部</span></span><br><span class="line"><span class="comment">//async function需要调用,多了一个await 外观同步执行，实质上是异步</span></span><br><span class="line"><span class="comment">//执行第一个异步操作后，再执行第二个异步操作</span></span><br><span class="line"><span class="comment">//async await一般后面就是接promise对象</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">func</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">/* 不使用await的p1,p2,p3输出</span></span><br><span class="line"><span class="comment">    Promise &#123; &lt;pending&gt; &#125;</span></span><br><span class="line"><span class="comment">    Promise &#123; &lt;pending&gt; &#125;</span></span><br><span class="line"><span class="comment">    Promise &#123; &lt;pending&gt; &#125;</span></span><br><span class="line"><span class="comment">        使用await的p1,p2,p3输出,能直接读取到内容</span></span><br><span class="line"><span class="comment">    1hello</span></span><br><span class="line"><span class="comment">    2nihao</span></span><br><span class="line"><span class="comment">    3hhalala</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">let</span> p1=<span class="keyword">await</span> <span class="title function_">readFilePromise</span>(fileone)   <span class="comment">//直接拿到promise对象成功的数据</span></span><br><span class="line">    <span class="keyword">let</span> p2=<span class="keyword">await</span> <span class="title function_">readFilePromise</span>(filetwo)</span><br><span class="line">    <span class="keyword">let</span> p3=<span class="keyword">await</span> <span class="title function_">readFilePromise</span>(filethree)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(p1);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(p2);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(p3);</span><br><span class="line">    fs.<span class="title function_">writeFile</span>(filedata,p1+p2+p3,<span class="string">&#x27;utf-8&#x27;</span>,<span class="function">(<span class="params">error</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;写入成功&#x27;</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">func</span>();</span><br></pre></td></tr></table></figure><h4 id="Async-Await-简介"><a href="#Async-Await-简介" class="headerlink" title="Async/Await 简介"></a>Async/Await 简介</h4><p>对于从未听说过 async/await 的朋友，下面是简介:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">async/await 是写异步代码的新方式，以前的方法有回调函数和Promise。</span><br><span class="line">async/await 是基于 Promise 实现的，它不能用于普通的回调函数。</span><br><span class="line">async/await 与 Promise 一样，是非阻塞的。</span><br><span class="line">async/await 使得异步代码看起来像同步代码，这正是它的魔力所在。</span><br></pre></td></tr></table></figure></p><h4 id="Async-Await-语法"><a href="#Async-Await-语法" class="headerlink" title="Async/Await 语法"></a>Async/Await 语法</h4><p>示例中，getJSON 函数返回一个 promise，这个 promise 成功 resolve 时会返回一个 json 对象。我们只是调用这个函数，打印返回的 JSON 对象，然后返回”done”。</p><p>使用 Promise 是这样的:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">makeRequest</span> = (<span class="params"></span>) =&gt;</span><br><span class="line">    <span class="title function_">getJSON</span>().<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;done&quot;</span>;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="title function_">makeRequest</span>();</span><br></pre></td></tr></table></figure></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">makeRequest</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">await</span> <span class="title function_">getJSON</span>());</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;done&quot;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">makeRequest</span>();</span><br></pre></td></tr></table></figure><p>它们有一些细微不同:</p><p>函数前面多了一个 async 关键字。await 关键字只能用在 async 定义的函数内。async 函数会隐式地返回一个 promise，该 promise 的 reosolve 值就是函数 return 的值。(示例中 reosolve 值就是字符串”done”)</p><p>第 1 点暗示我们不能在最外层代码中使用 await，因为不在 async 函数内。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不能在最外层代码中使用await</span></span><br><span class="line"><span class="keyword">await</span> <span class="title function_">makeRequest</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这是会出事情的</span></span><br><span class="line"><span class="title function_">makeRequest</span>().<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 代码</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><br>await getJSON()表示 console.log 会等到 getJSON 的 promise 成功 reosolve 之后再执行。</p><h4 id="为什么-Async-Await-更好？"><a href="#为什么-Async-Await-更好？" class="headerlink" title="为什么 Async/Await 更好？"></a>为什么 Async/Await 更好？</h4><ol><li>简洁<br>由示例可知，使用 Async/Await 明显节约了不少代码。我们不需要写.then，不需要写匿名函数处理 Promise 的 resolve 值，也不需要定义多余的 data 变量，还避免了嵌套代码。这些小的优点会迅速累计起来，这在之后的代码示例中会更加明显。</li><li>错误处理<br>Async/Await 让 try/catch 可以同时处理同步和异步错误。在下面的 promise 示例中，try/catch 不能处理 JSON.parse 的错误，因为它在 Promise 中。我们需要使用.catch，这样错误处理代码非常冗余。并且，在我们的实际生产代码会更加复杂。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">makeRequest</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="title function_">getJSON</span>().<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// JSON.parse可能会出错</span></span><br><span class="line">            <span class="keyword">const</span> data = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(result);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 取消注释，处理异步代码的错误</span></span><br><span class="line">        <span class="comment">// .catch((err) =&gt; &#123;</span></span><br><span class="line">        <span class="comment">//   console.log(err)</span></span><br><span class="line">        <span class="comment">// &#125;)</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>使用 async/await 的话，catch 能处理 JSON.parse 错误:<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">makeRequest</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// this parse may fail</span></span><br><span class="line">        <span class="keyword">const</span> data = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="keyword">await</span> <span class="title function_">getJSON</span>());</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li>条件语句<br>下面示例中，需要获取数据，然后根据返回数据决定是直接返回，还是继续获取更多的数据。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">makeRequest</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">getJSON</span>().<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (data.<span class="property">needsAnotherRequest</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">makeAnotherRequest</span>(data).<span class="title function_">then</span>(<span class="function"><span class="params">moreData</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(moreData);</span><br><span class="line">                <span class="keyword">return</span> moreData;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">            <span class="keyword">return</span> data;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>这些代码看着就头痛。嵌套（6 层），括号，return 语句很容易让人感到迷茫，而它们只是需要将最终结果传递到最外层的 Promise。</li></ol><p>上面的代码使用 async/await 编写可以大大地提高可读性:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">makeRequest</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> data = <span class="keyword">await</span> <span class="title function_">getJSON</span>();</span><br><span class="line">    <span class="keyword">if</span> (data.<span class="property">needsAnotherRequest</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> moreData = <span class="keyword">await</span> <span class="title function_">makeAnotherRequest</span>(data);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(moreData);</span><br><span class="line">        <span class="keyword">return</span> moreData;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><ol><li>中间值<br>你很可能遇到过这样的场景，调用 promise1，使用 promise1 返回的结果去调用 promise2，然后使用两者的结果去调用 promise3。你的代码很可能是这样的:<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">makeRequest</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">promise1</span>().<span class="title function_">then</span>(<span class="function"><span class="params">value1</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">promise2</span>(value1).<span class="title function_">then</span>(<span class="function"><span class="params">value2</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">promise3</span>(value1, value2);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>如果 promise3 不需要 value1，可以很简单地将 promise 嵌套铺平。如果你忍受不了嵌套，你可以将 value 1 &amp; 2 放进 Promise.all 来避免深层嵌套：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">makeRequest</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">promise1</span>()</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function"><span class="params">value1</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">all</span>([value1, <span class="title function_">promise2</span>(value1)]);</span><br><span class="line">        &#125;)</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function">(<span class="params">[value1, value2]</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">promise3</span>(value1, value2);</span><br><span class="line">        &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>这种方法为了可读性牺牲了语义。除了避免嵌套，并没有其他理由将 value1 和 value2 放在一个数组中。</li></ol><p>使用 async/await 的话，代码会变得异常简单和直观。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">makeRequest</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> value1 = <span class="keyword">await</span> <span class="title function_">promise1</span>();</span><br><span class="line">    <span class="keyword">const</span> value2 = <span class="keyword">await</span> <span class="title function_">promise2</span>(value1);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">promise3</span>(value1, value2);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ol><li>错误栈<br>下面示例中调用了多个 Promise，假设 Promise 链中某个地方抛出了一个错误:<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">makeRequest</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">callAPromise</span>()</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function">() =&gt;</span> <span class="title function_">callAPromise</span>())</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function">() =&gt;</span> <span class="title function_">callAPromise</span>())</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function">() =&gt;</span> <span class="title function_">callAPromise</span>())</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function">() =&gt;</span> <span class="title function_">callAPromise</span>())</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;oops&quot;</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">makeRequest</span>().<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">    <span class="comment">// output</span></span><br><span class="line">    <span class="comment">// Error: oops at callAPromise.then.then.then.then.then (index.js:8:13)</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>Promise 链中返回的错误栈没有给出错误发生位置的线索。更糟糕的是，它会误导我们；错误栈中唯一的函数名为 callAPromise，然而它和错误没有关系。(文件名和行号还是有用的)。</li></ol><p>然而，async/await 中的错误栈会指向错误所在的函数:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">makeRequest</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">callAPromise</span>();</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">callAPromise</span>();</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">callAPromise</span>();</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">callAPromise</span>();</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">callAPromise</span>();</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;oops&quot;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">makeRequest</span>().<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">    <span class="comment">// output</span></span><br><span class="line">    <span class="comment">// Error: oops at makeRequest (index.js:7:9)</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><br>在开发环境中，这一点优势并不大。但是，当你分析生产环境的错误日志时，它将非常有用。这时，知道错误发生在 makeRequest 比知道错误发生在 then 链中要好。</p><ol><li>调试<br>最后一点，也是非常重要的一点在于，async/await 能够使得代码调试更简单。2 个理由使得调试 Promise 变得非常痛苦:</li></ol><p>不能在返回表达式的箭头函数中设置断点<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303142143534.png" alt=""><br>如果你在.then 代码块中设置断点，使用 Step Over 快捷键，调试器不会跳到下一个.then，因为它只会跳过异步代码。<br>使用 await/async 时，你不再需要那么多箭头函数，这样你就可以像调试同步代码一样跳过 await 语句。<br><img src="https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303142143147.png" alt=""><br>结论<br>Async/Await 是近年来 JavaScript 添加的最革命性的特性之一。它会让你发现 Promise 的语法有多糟糕，而且提供了一个直观的替代方法。</p><p>忧虑<br>对于 Async/Await，也许你有一些合理的怀疑：</p><p>它使得异步代码不再明显: 我们已经习惯了用回调函数或者.then 来识别异步代码，我们可能需要花数个星期去习惯新的标志。但是，C#拥有这个特性已经很多年了，熟悉它的朋友应该知道暂时的稍微不方便是值得的。<br>Node 7 不是 LTS（长期支持版本）: 但是，Node 8 下个月就会发布，将代码迁移到新版本会非常简单。(Fundebug 注：Node 8 是 LTS，已经于 2017 年 10 月正式发布。)<br><a href="https://zhuanlan.zhihu.com/p/23249103">资料1</a><br><a href="https://blog.fundebug.com/2017/04/04/nodejs-async-await/">资料2</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://cdn.staticaly.com/gh/UnSpMan/picgo@master/img/202303142200924.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;书写一个web服务器&quot;&gt;&lt;a href=&quot;#书写一个web服务器</summary>
      
    
    
    
    <category term="后端" scheme="https://unspman.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Node.js使用" scheme="https://unspman.github.io/tags/Node-js%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>Node.js(5.网络)</title>
    <link href="https://unspman.github.io/posts/b27a53d.html"/>
    <id>https://unspman.github.io/posts/b27a53d.html</id>
    <published>2023-01-05T00:00:00.000Z</published>
    <updated>2023-04-20T13:04:26.763Z</updated>
    
    <content type="html"><![CDATA[<h3 id="IP地址和端口"><a href="#IP地址和端口" class="headerlink" title="IP地址和端口"></a>IP地址和端口</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">IP地址：用来标识网络上不同的设备</span><br><span class="line">端口号：标识同一台设备上不同的网络进程</span><br><span class="line">网络进程：可以联网的，运行起来的程序</span><br><span class="line">0-65535</span><br><span class="line">0-1024(知名端口)</span><br><span class="line">1025-65535</span><br><span class="line">端口号被占用就换一个</span><br><span class="line">端口号也有唯一性，针对同一台设备</span><br></pre></td></tr></table></figure><h3 id="http模块的使用"><a href="#http模块的使用" class="headerlink" title="http模块的使用"></a>http模块的使用</h3><p>搭建后端服务器<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//搭建后端服务器</span></span><br><span class="line"><span class="comment">//1.导入HTTP模块</span></span><br><span class="line"><span class="keyword">const</span> http=<span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line"><span class="comment">//2.定义服务程序的端口号</span></span><br><span class="line"><span class="keyword">const</span> port=<span class="number">8080</span>;</span><br><span class="line"><span class="comment">//3.创建服务器对象</span></span><br><span class="line"><span class="comment">//createServer：创建服务器对象</span></span><br><span class="line"><span class="keyword">const</span> server=http.<span class="title function_">createServer</span>(<span class="function">(<span class="params">request,response</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="comment">//每收到一次请求就会执行一次</span></span><br><span class="line">        <span class="comment">//request:请求对象  response:响应对象</span></span><br><span class="line">        response.<span class="title function_">end</span>(<span class="string">&#x27;hello nodejs http&#x27;</span>)<span class="comment">//表示响应工作结束，这个方法后面不要再写响应的一些操作</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//4.调用服务器的监听方法，让服务器监听浏览器的请求</span></span><br><span class="line"><span class="comment">//listen: 监听端口</span></span><br><span class="line">server.<span class="title function_">listen</span>(port,<span class="function">(<span class="params">error</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//用来标识监听有没有出错</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(error);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;服务器已经运行成功了&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">一个端口号只能被一个服务器使用，如果端口高号被占用就换一个</span></span><br><span class="line"><span class="comment">end永远放在响应的最后面，多次调用时没有效果的</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></p><h3 id="获取请求的一些信息"><a href="#获取请求的一些信息" class="headerlink" title="获取请求的一些信息"></a>获取请求的一些信息</h3><h4 id="获取请求路径"><a href="#获取请求路径" class="headerlink" title="获取请求路径"></a>获取请求路径</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//request.url:获取请求路径</span></span><br><span class="line"><span class="keyword">let</span> reUrl=request.<span class="property">url</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reUrl);     <span class="comment">//  /favicon.ico</span></span><br></pre></td></tr></table></figure><h4 id="获取请求路径-1"><a href="#获取请求路径-1" class="headerlink" title="获取请求路径"></a>获取请求路径</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//request.url:获取请求路径</span></span><br><span class="line"><span class="keyword">let</span> reUrl=request.<span class="property">url</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reUrl);     <span class="comment">//  /favicon.ico</span></span><br></pre></td></tr></table></figure><h4 id="获取请求方式"><a href="#获取请求方式" class="headerlink" title="获取请求方式"></a>获取请求方式</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//request.method获取请求方式</span></span><br><span class="line"><span class="keyword">let</span> reqMethod=request.<span class="property">method</span>;   </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reqMethod); <span class="comment">//GET</span></span><br></pre></td></tr></table></figure><h4 id="获取get请求参数"><a href="#获取get请求参数" class="headerlink" title="获取get请求参数"></a>获取get请求参数</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入新的模块-&gt;通过该模块拿到路径</span></span><br><span class="line"><span class="keyword">const</span> url=<span class="built_in">require</span>(<span class="string">&#x27;url&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> parse=url.<span class="title function_">parse</span>(reUrl,<span class="literal">true</span>);<span class="comment">//true解析成一个对象 false解析成一个字符串</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(parse.<span class="property">query</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(parse.<span class="property">query</span>.<span class="property">name</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(parse.<span class="property">query</span>.<span class="property">age</span>);</span><br></pre></td></tr></table></figure><h4 id="获取post请求参数"><a href="#获取post请求参数" class="headerlink" title="获取post请求参数"></a>获取post请求参数</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//request:请求对象  response:响应对象</span></span><br><span class="line"><span class="comment">//获取账号和密码，获取post请求的参数</span></span><br><span class="line"><span class="comment">//以事件的方式来接收,事件名data</span></span><br><span class="line">request.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>,<span class="function">(<span class="params">postData</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(postData.<span class="title function_">toString</span>());</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="nodemon包的使用"><a href="#nodemon包的使用" class="headerlink" title="nodemon包的使用"></a>nodemon包的使用</h3><p>监听代码改动自动更新<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g nodemon </span><br></pre></td></tr></table></figure><br>再VSCODE拓展中找到code Runner—&gt;设置处选择拓展设置—&gt;找到Code-runner:Executor Map并点击再setting.json中编辑—&gt;将”javascript”: “node”改为”javascript”: “nodemon”</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;IP地址和端口&quot;&gt;&lt;a href=&quot;#IP地址和端口&quot; class=&quot;headerlink&quot; title=&quot;IP地址和端口&quot;&gt;&lt;/a&gt;IP地址和端口&lt;/h3&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl</summary>
      
    
    
    
    <category term="后端" scheme="https://unspman.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Node.js使用" scheme="https://unspman.github.io/tags/Node-js%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
</feed>
